1561121a1335886c2bd2995168687cbf
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const axios_1 = __importDefault(require("../../../utils/axios"));
const Container = styled_components_1.default.div `
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  padding: 20px;
  margin-bottom: 16px;
`;
const Header = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
`;
const Title = styled_components_1.default.h3 `
  margin: 0;
  font-size: 18px;
  font-weight: 600;
  color: #1e293b;
`;
const FilterGrid = styled_components_1.default.div `
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(250px, 1fr));
  gap: 16px;
  margin-bottom: 20px;
`;
const FilterGroup = styled_components_1.default.div `
  display: flex;
  flex-direction: column;
  gap: 8px;
`;
const FilterLabel = styled_components_1.default.label `
  font-size: 14px;
  font-weight: 500;
  color: #64748b;
`;
const FilterInput = styled_components_1.default.input `
  padding: 8px 12px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
  transition: border-color 0.2s;

  &:focus {
    outline: none;
    border-color: #3b82f6;
  }
`;
const FilterSelect = styled_components_1.default.select `
  padding: 8px 12px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
  background: white;
  transition: border-color 0.2s;

  &:focus {
    outline: none;
    border-color: #3b82f6;
  }
`;
const MultiSelect = styled_components_1.default.div `
  position: relative;
`;
const MultiSelectInput = styled_components_1.default.div `
  padding: 8px 12px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
  background: white;
  cursor: pointer;
  display: flex;
  justify-content: space-between;
  align-items: center;
  min-height: 38px;

  &:hover {
    border-color: #3b82f6;
  }
`;
const MultiSelectDropdown = styled_components_1.default.div `
  position: absolute;
  top: 100%;
  left: 0;
  right: 0;
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1);
  z-index: 1000;
  max-height: 200px;
  overflow-y: auto;
  display: ${props => props.isOpen ? 'block' : 'none'};
`;
const MultiSelectOption = styled_components_1.default.div `
  padding: 8px 12px;
  cursor: pointer;
  background: ${props => props.selected ? '#3b82f6' : 'transparent'};
  color: ${props => props.selected ? 'white' : '#374151'};

  &:hover {
    background: ${props => props.selected ? '#3b82f6' : '#f3f4f6'};
  }
`;
const ActionButtons = styled_components_1.default.div `
  display: flex;
  gap: 12px;
  justify-content: flex-end;
`;
const Button = styled_components_1.default.button `
  padding: 8px 16px;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;
  border: 1px solid;

  ${props => {
    switch (props.variant) {
        case 'primary':
            return `
          background: #3b82f6;
          color: white;
          border-color: #3b82f6;
          &:hover {
            background: #2563eb;
            border-color: #2563eb;
          }
        `;
        case 'danger':
            return `
          background: #ef4444;
          color: white;
          border-color: #ef4444;
          &:hover {
            background: #dc2626;
            border-color: #dc2626;
          }
        `;
        default:
            return `
          background: white;
          color: #374151;
          border-color: #d1d5db;
          &:hover {
            background: #f9fafb;
            border-color: #9ca3af;
          }
        `;
    }
}}
`;
const PresetSection = styled_components_1.default.div `
  margin-top: 20px;
  padding-top: 20px;
  border-top: 1px solid #e2e8f0;
`;
const PresetHeader = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 12px;
`;
const PresetList = styled_components_1.default.div `
  display: flex;
  gap: 8px;
  flex-wrap: wrap;
`;
const PresetTag = styled_components_1.default.div `
  padding: 4px 12px;
  background: #dbeafe;
  color: #1e40af;
  border-radius: 16px;
  font-size: 12px;
  font-weight: 500;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: #bfdbfe;
  }
`;
const SavePresetModal = styled_components_1.default.div `
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background: rgba(0, 0, 0, 0.5);
  display: ${props => props.isOpen ? 'flex' : 'none'};
  align-items: center;
  justify-content: center;
  z-index: 2000;
`;
const ModalContent = styled_components_1.default.div `
  background: white;
  border-radius: 8px;
  padding: 24px;
  width: 400px;
  max-width: 90vw;
`;
const ModalTitle = styled_components_1.default.h3 `
  margin: 0 0 16px 0;
  font-size: 18px;
  font-weight: 600;
`;
const ModalInput = styled_components_1.default.input `
  width: 100%;
  padding: 8px 12px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
  margin-bottom: 16px;

  &:focus {
    outline: none;
    border-color: #3b82f6;
  }
`;
const ModalButtons = styled_components_1.default.div `
  display: flex;
  gap: 12px;
  justify-content: flex-end;
`;
const AdvancedFilter = ({ onSearch, onClear }) => {
    const [filters, setFilters] = (0, react_1.useState)({});
    const [presets, setPresets] = (0, react_1.useState)([]);
    const [showSaveModal, setShowSaveModal] = (0, react_1.useState)(false);
    const [presetName, setPresetName] = (0, react_1.useState)('');
    const [openMultiSelect, setOpenMultiSelect] = (0, react_1.useState)(null);
    // 옵션 데이터
    const statusOptions = ['Active', 'Archived'];
    const priorityOptions = ['High', 'Medium', 'Low'];
    const folderOptions = ['Smoke Tests', 'Regression Tests', 'Integration Tests', 'Unit Tests'];
    const tagOptions = ['critical', 'smoke', 'regression', 'integration', 'unit', 'performance'];
    // 프리셋 로드
    (0, react_1.useEffect)(() => {
        loadPresets();
    }, []);
    const loadPresets = async () => {
        try {
            const response = await axios_1.default.get('/api/testcases/search/presets');
            setPresets(response.data);
        }
        catch (error) {
            console.error('Failed to load presets:', error);
        }
    };
    const handleFilterChange = (0, react_1.useCallback)((key, value) => {
        setFilters(prev => ({
            ...prev,
            [key]: value
        }));
    }, []);
    const handleMultiSelectChange = (0, react_1.useCallback)((key, value, checked) => {
        setFilters(prev => {
            const currentValues = prev[key] || [];
            const newValues = checked
                ? [...currentValues, value]
                : currentValues.filter(v => v !== value);
            return {
                ...prev,
                [key]: newValues.length > 0 ? newValues : undefined
            };
        });
    }, []);
    const handleSearch = (0, react_1.useCallback)(() => {
        onSearch(filters);
    }, [filters, onSearch]);
    const handleClear = (0, react_1.useCallback)(() => {
        setFilters({});
        onClear();
    }, [onClear]);
    const handleSavePreset = async () => {
        if (!presetName.trim())
            return;
        try {
            await axios_1.default.post('/api/testcases/search/presets', {
                name: presetName,
                filters,
                createdBy: 'current-user' // 실제 사용자 ID로 교체
            });
            setPresetName('');
            setShowSaveModal(false);
            loadPresets();
        }
        catch (error) {
            console.error('Failed to save preset:', error);
        }
    };
    const handleLoadPreset = (0, react_1.useCallback)((preset) => {
        setFilters(preset.filters);
        onSearch(preset.filters);
    }, [onSearch]);
    const handleDeletePreset = async (presetId) => {
        try {
            await axios_1.default.delete(`/api/testcases/search/presets/${presetId}`);
            loadPresets();
        }
        catch (error) {
            console.error('Failed to delete preset:', error);
        }
    };
    const getSelectedCount = (key) => {
        const values = filters[key];
        return values ? values.length : 0;
    };
    const renderMultiSelect = (key, options, label) => {
        const selectedValues = filters[key] || [];
        const isOpen = openMultiSelect === key;
        return ((0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: label }), (0, jsx_runtime_1.jsxs)(MultiSelect, { children: [(0, jsx_runtime_1.jsxs)(MultiSelectInput, { onClick: () => setOpenMultiSelect(isOpen ? null : key), children: [(0, jsx_runtime_1.jsx)("span", { children: selectedValues.length > 0
                                        ? `${selectedValues.length}개 선택됨`
                                        : '선택하세요' }), (0, jsx_runtime_1.jsx)("span", { children: "\u25BC" })] }), (0, jsx_runtime_1.jsx)(MultiSelectDropdown, { isOpen: isOpen, children: options.map(option => ((0, jsx_runtime_1.jsx)(MultiSelectOption, { selected: selectedValues.includes(option), onClick: () => handleMultiSelectChange(key, option, !selectedValues.includes(option)), children: option }, option))) })] })] }, key));
    };
    return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsxs)(Header, { children: [(0, jsx_runtime_1.jsx)(Title, { children: "\uACE0\uAE09 \uAC80\uC0C9" }), (0, jsx_runtime_1.jsx)(Button, { onClick: () => setShowSaveModal(true), children: "\uD604\uC7AC \uC870\uAC74 \uC800\uC7A5" })] }), (0, jsx_runtime_1.jsxs)(FilterGrid, { children: [(0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uD0A4\uC6CC\uB4DC \uAC80\uC0C9" }), (0, jsx_runtime_1.jsx)(FilterInput, { type: "text", placeholder: "\uC81C\uBAA9, \uC124\uBA85, \uC2A4\uD15D\uC5D0\uC11C \uAC80\uC0C9...", value: filters.keyword || '', onChange: (e) => handleFilterChange('keyword', e.target.value) })] }), renderMultiSelect('folders', folderOptions, '폴더'), renderMultiSelect('tags', tagOptions, '태그'), renderMultiSelect('status', statusOptions, '상태'), renderMultiSelect('priority', priorityOptions, '우선순위'), (0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uC791\uC131\uC790" }), (0, jsx_runtime_1.jsx)(FilterInput, { type: "text", placeholder: "\uC791\uC131\uC790 \uC785\uB825...", value: filters.createdBy?.join(', ') || '', onChange: (e) => handleFilterChange('createdBy', e.target.value.split(',').map(s => s.trim())) })] }), (0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uC0DD\uC131\uC77C (\uC2DC\uC791)" }), (0, jsx_runtime_1.jsx)(FilterInput, { type: "date", value: filters.dateRange?.from || '', onChange: (e) => handleFilterChange('dateRange', {
                                    ...filters.dateRange,
                                    from: e.target.value
                                }) })] }), (0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uC0DD\uC131\uC77C (\uC885\uB8CC)" }), (0, jsx_runtime_1.jsx)(FilterInput, { type: "date", value: filters.dateRange?.to || '', onChange: (e) => handleFilterChange('dateRange', {
                                    ...filters.dateRange,
                                    to: e.target.value
                                }) })] })] }), (0, jsx_runtime_1.jsxs)(ActionButtons, { children: [(0, jsx_runtime_1.jsx)(Button, { onClick: handleClear, children: "\uCD08\uAE30\uD654" }), (0, jsx_runtime_1.jsx)(Button, { variant: "primary", onClick: handleSearch, children: "\uAC80\uC0C9" })] }), presets.length > 0 && ((0, jsx_runtime_1.jsxs)(PresetSection, { children: [(0, jsx_runtime_1.jsx)(PresetHeader, { children: (0, jsx_runtime_1.jsx)("h4", { children: "\uC800\uC7A5\uB41C \uAC80\uC0C9 \uC870\uAC74" }) }), (0, jsx_runtime_1.jsx)(PresetList, { children: presets.map(preset => ((0, jsx_runtime_1.jsx)(PresetTag, { onClick: () => handleLoadPreset(preset), title: `${preset.name} (${preset.createdAt})`, children: preset.name }, preset.id))) })] })), (0, jsx_runtime_1.jsx)(SavePresetModal, { isOpen: showSaveModal, children: (0, jsx_runtime_1.jsxs)(ModalContent, { children: [(0, jsx_runtime_1.jsx)(ModalTitle, { children: "\uAC80\uC0C9 \uC870\uAC74 \uC800\uC7A5" }), (0, jsx_runtime_1.jsx)(ModalInput, { type: "text", placeholder: "\uD504\uB9AC\uC14B \uC774\uB984\uC744 \uC785\uB825\uD558\uC138\uC694", value: presetName, onChange: (e) => setPresetName(e.target.value) }), (0, jsx_runtime_1.jsxs)(ModalButtons, { children: [(0, jsx_runtime_1.jsx)(Button, { onClick: () => setShowSaveModal(false), children: "\uCDE8\uC18C" }), (0, jsx_runtime_1.jsx)(Button, { variant: "primary", onClick: handleSavePreset, children: "\uC800\uC7A5" })] })] }) })] }));
};
exports.default = AdvancedFilter;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,