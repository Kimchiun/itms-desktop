{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/testcases/controllers/testCaseController.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/testcases/controllers/testCaseController.ts"],"sourcesContent":["import { Router } from 'express';\nimport * as testCaseService from '../services/testCaseService';\n\nconst router = Router();\n\n// 테스트케이스 목록 조회\nrouter.get('/', async (req, res) => {\n    try {\n        const { page = 1, limit = 20, search, folderId } = req.query;\n        const testCases = await testCaseService.getTestCases({\n            page: Number(page),\n            limit: Number(limit),\n            search: search as string,\n            folderId: folderId ? Number(folderId) : undefined\n        });\n        res.json(testCases);\n    } catch (error) {\n        console.error('테스트케이스 조회 실패:', error);\n        res.status(500).json({ message: '테스트케이스 조회에 실패했습니다.' });\n    }\n});\n\n// 특정 테스트케이스 조회\nrouter.get('/:id', async (req, res) => {\n    try {\n        const id = parseInt(req.params.id);\n        const testCase = await testCaseService.getTestCaseById(id);\n        if (!testCase) {\n            return res.status(404).json({ message: '테스트케이스를 찾을 수 없습니다.' });\n        }\n        res.json(testCase);\n    } catch (error) {\n        console.error('테스트케이스 조회 실패:', error);\n        res.status(500).json({ message: '테스트케이스 조회에 실패했습니다.' });\n    }\n});\n\n// 테스트케이스 생성\nrouter.post('/', async (req, res) => {\n    try {\n        const testCase = await testCaseService.createTestCase(req.body);\n        res.status(201).json(testCase);\n    } catch (error) {\n        console.error('테스트케이스 생성 실패:', error);\n        res.status(400).json({ message: '테스트케이스 생성에 실패했습니다.' });\n    }\n});\n\n// 테스트케이스 수정\nrouter.put('/:id', async (req, res) => {\n    try {\n        const id = parseInt(req.params.id);\n        const testCase = await testCaseService.updateTestCase(id, req.body);\n        if (!testCase) {\n            return res.status(404).json({ message: '테스트케이스를 찾을 수 없습니다.' });\n        }\n        res.json(testCase);\n    } catch (error) {\n        console.error('테스트케이스 수정 실패:', error);\n        res.status(400).json({ message: '테스트케이스 수정에 실패했습니다.' });\n    }\n});\n\n// 테스트케이스 삭제\nrouter.delete('/:id', async (req, res) => {\n    try {\n        const id = parseInt(req.params.id);\n        const success = await testCaseService.deleteTestCase(id);\n        if (!success) {\n            return res.status(404).json({ message: '테스트케이스를 찾을 수 없습니다.' });\n        }\n        res.json({ message: '테스트케이스가 성공적으로 삭제되었습니다.' });\n    } catch (error) {\n        console.error('테스트케이스 삭제 실패:', error);\n        res.status(400).json({ message: '테스트케이스 삭제에 실패했습니다.' });\n    }\n});\n\nexport default router; "],"version":3}