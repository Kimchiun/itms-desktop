{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Dashboard/components/FilterBar.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Dashboard/components/FilterBar.tsx"],"sourcesContent":["import React, { useState, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\nimport { setFilters, clearFilters, FilterState } from '../../../store/dashboardLayoutSlice';\n\nconst Container = styled.div`\n  background: white;\n  border: 1px solid #e2e8f0;\n  border-radius: 8px;\n  padding: 16px;\n  margin-bottom: 16px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 16px;\n`;\n\nconst Title = styled.h4`\n  margin: 0;\n  font-size: 16px;\n  font-weight: 600;\n  color: #1e293b;\n`;\n\nconst ClearButton = styled.button`\n  padding: 4px 12px;\n  background: #f1f5f9;\n  color: #64748b;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  font-size: 12px;\n  cursor: pointer;\n  transition: all 0.2s;\n\n  &:hover {\n    background: #e2e8f0;\n    color: #475569;\n  }\n`;\n\nconst FilterGrid = styled.div`\n  display: grid;\n  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));\n  gap: 12px;\n`;\n\nconst FilterGroup = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst FilterLabel = styled.label`\n  font-size: 12px;\n  font-weight: 500;\n  color: #64748b;\n`;\n\nconst FilterSelect = styled.select`\n  padding: 6px 8px;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  font-size: 14px;\n  background: white;\n  min-height: 32px;\n`;\n\nconst FilterInput = styled.input`\n  padding: 6px 8px;\n  border: 1px solid #e2e8f0;\n  border-radius: 4px;\n  font-size: 14px;\n  min-height: 32px;\n`;\n\nconst CheckboxContainer = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst Checkbox = styled.input`\n  margin: 0;\n`;\n\nconst CheckboxLabel = styled.label`\n  font-size: 14px;\n  color: #374151;\n  cursor: pointer;\n`;\n\nconst ActiveFilters = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 8px;\n  margin-top: 12px;\n  padding-top: 12px;\n  border-top: 1px solid #f1f5f9;\n`;\n\nconst FilterTag = styled.span`\n  padding: 4px 8px;\n  background: #dbeafe;\n  color: #1e40af;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n`;\n\nconst FilterBar: React.FC = () => {\n  const dispatch = useDispatch();\n  const filters = useSelector((state: RootState) => state.dashboardLayout.filters);\n  const [localFilters, setLocalFilters] = useState<FilterState>(filters);\n\n  const executionStatusOptions = [\n    { value: 'Untested', label: '실행 전' },\n    { value: 'Pass', label: '통과' },\n    { value: 'Fail', label: '실패' },\n    { value: 'Blocked', label: '블록' },\n    { value: 'Defect', label: '결함' },\n  ];\n\n  const priorityOptions = [\n    { value: 'High', label: '높음' },\n    { value: 'Medium', label: '보통' },\n    { value: 'Low', label: '낮음' },\n  ];\n\n  const severityOptions = [\n    { value: 'Critical', label: '치명적' },\n    { value: 'High', label: '높음' },\n    { value: 'Medium', label: '보통' },\n    { value: 'Low', label: '낮음' },\n  ];\n\n  const handleFilterChange = useCallback((key: keyof FilterState, value: any) => {\n    const newFilters = { ...localFilters, [key]: value };\n    setLocalFilters(newFilters);\n    dispatch(setFilters(newFilters));\n  }, [localFilters, dispatch]);\n\n  const handleClearFilters = useCallback(() => {\n    setLocalFilters({\n      executionStatus: [],\n      priority: [],\n      severity: [],\n      keyword: '',\n      showOnlyDefects: false,\n    });\n    dispatch(clearFilters());\n  }, [dispatch]);\n\n  const getActiveFilterCount = () => {\n    let count = 0;\n    if (filters.executionStatus.length > 0) count++;\n    if (filters.priority.length > 0) count++;\n    if (filters.severity.length > 0) count++;\n    if (filters.keyword) count++;\n    if (filters.showOnlyDefects) count++;\n    return count;\n  };\n\n  const renderActiveFilters = () => {\n    const activeFilters: string[] = [];\n    \n    filters.executionStatus.forEach(status => {\n      const option = executionStatusOptions.find(opt => opt.value === status);\n      if (option) activeFilters.push(`실행상태: ${option.label}`);\n    });\n    \n    filters.priority.forEach(priority => {\n      const option = priorityOptions.find(opt => opt.value === priority);\n      if (option) activeFilters.push(`우선순위: ${option.label}`);\n    });\n    \n    filters.severity.forEach(severity => {\n      const option = severityOptions.find(opt => opt.value === severity);\n      if (option) activeFilters.push(`심각도: ${option.label}`);\n    });\n    \n    if (filters.keyword) activeFilters.push(`검색: ${filters.keyword}`);\n    if (filters.showOnlyDefects) activeFilters.push('결함만 표시');\n\n    return activeFilters;\n  };\n\n  return (\n    <Container>\n      <Header>\n        <Title>필터</Title>\n        {getActiveFilterCount() > 0 && (\n          <ClearButton onClick={handleClearFilters} data-testid=\"clear-filters-btn\">\n            필터 초기화\n          </ClearButton>\n        )}\n      </Header>\n\n      <FilterGrid>\n        <FilterGroup>\n          <FilterLabel>실행 상태</FilterLabel>\n          <FilterSelect\n            multiple\n            value={localFilters.executionStatus}\n            onChange={(e) => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              handleFilterChange('executionStatus', selected);\n            }}\n            data-testid=\"execution-status-filter\"\n          >\n            {executionStatusOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterLabel>우선순위</FilterLabel>\n          <FilterSelect\n            multiple\n            value={localFilters.priority}\n            onChange={(e) => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              handleFilterChange('priority', selected);\n            }}\n            data-testid=\"priority-filter\"\n          >\n            {priorityOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterLabel>심각도</FilterLabel>\n          <FilterSelect\n            multiple\n            value={localFilters.severity}\n            onChange={(e) => {\n              const selected = Array.from(e.target.selectedOptions, option => option.value);\n              handleFilterChange('severity', selected);\n            }}\n            data-testid=\"severity-filter\"\n          >\n            {severityOptions.map(option => (\n              <option key={option.value} value={option.value}>\n                {option.label}\n              </option>\n            ))}\n          </FilterSelect>\n        </FilterGroup>\n\n        <FilterGroup>\n          <FilterLabel>키워드 검색</FilterLabel>\n          <FilterInput\n            type=\"text\"\n            placeholder=\"제목, 설명으로 검색...\"\n            value={localFilters.keyword}\n            onChange={(e) => handleFilterChange('keyword', e.target.value)}\n            data-testid=\"keyword-search-input\"\n          />\n        </FilterGroup>\n\n        <FilterGroup>\n          <CheckboxContainer>\n            <Checkbox\n              type=\"checkbox\"\n              id=\"showOnlyDefects\"\n              checked={localFilters.showOnlyDefects}\n              onChange={(e) => handleFilterChange('showOnlyDefects', e.target.checked)}\n              data-testid=\"show-only-defects-checkbox\"\n            />\n            <CheckboxLabel htmlFor=\"showOnlyDefects\">\n              결함만 표시\n            </CheckboxLabel>\n          </CheckboxContainer>\n        </FilterGroup>\n      </FilterGrid>\n\n      {getActiveFilterCount() > 0 && (\n        <ActiveFilters>\n          {renderActiveFilters().map((filter, index) => (\n            <FilterTag key={index} data-testid={`active-filter-${index}`}>\n              {filter}\n            </FilterTag>\n          ))}\n        </ActiveFilters>\n      )}\n    </Container>\n  );\n};\n\nexport default FilterBar; "],"version":3}