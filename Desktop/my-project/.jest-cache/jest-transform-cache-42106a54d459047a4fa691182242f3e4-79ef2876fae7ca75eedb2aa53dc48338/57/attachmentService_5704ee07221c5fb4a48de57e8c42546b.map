{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/defects/services/attachmentService.ts","mappings":";;;AACA,mCAAkC;AAI3B,MAAM,oBAAoB,GAAG,KAAK,EAAE,QAAgB,EAAyB,EAAE;IAClF,uBAAuB;IACvB,gBAAgB;IAChB,OAAO;QACH;YACI,EAAE,EAAE,CAAC;YACL,QAAQ;YACR,IAAI,EAAE,gBAAgB;YACtB,IAAI,EAAE,OAAO;YACb,IAAI,EAAE,WAAW;YACjB,UAAU,EAAE,SAAS;YACrB,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,GAAG,EAAE,gBAAgB,QAAQ,gBAAgB;SAChD;QACD;YACI,EAAE,EAAE,CAAC;YACL,QAAQ;YACR,IAAI,EAAE,eAAe;YACrB,IAAI,EAAE,KAAK;YACX,IAAI,EAAE,YAAY;YAClB,UAAU,EAAE,YAAY;YACxB,UAAU,EAAE,IAAI,IAAI,EAAE;YACtB,GAAG,EAAE,gBAAgB,QAAQ,gBAAgB;SAChD;KACJ,CAAC;AACN,CAAC,CAAC;AAzBW,QAAA,oBAAoB,wBAyB/B;AAEK,MAAM,kBAAkB,GAAG,KAAK,EACnC,QAAgB,EAChB,YAAoB,EAKrB,EAAE;IACD,6CAA6C;IAC7C,gBAAgB;IAChB,MAAM,QAAQ,GAAG;QACb,QAAQ,EAAE,cAAc,YAAY,MAAM;QAC1C,WAAW,EAAE,YAAY;QACzB,OAAO,EAAE,wCAAwC,QAAQ,gBAAgB,YAAY,EAAE;KAC1F,CAAC;IAEF,MAAM,MAAM,GAAG,IAAI,iBAAQ,EAAE,CAAC;IAC9B,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;IAC9B,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IAElB,OAAO;QACH,UAAU,EAAE,MAAM;QAClB,QAAQ,EAAE,QAAQ,CAAC,QAAQ;QAC3B,WAAW,EAAE,QAAQ,CAAC,WAAW;KACpC,CAAC;AACN,CAAC,CAAC;AAzBW,QAAA,kBAAkB,sBAyB7B","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/defects/services/attachmentService.ts"],"sourcesContent":["import { Attachment } from '../models/Defect';\nimport { Readable } from 'stream';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\nexport const getDefectAttachments = async (defectId: number): Promise<Attachment[]> => {\n    // 실제 구현에서는 데이터베이스에서 조회\n    // 현재는 목업 데이터 반환\n    return [\n        {\n            id: 1,\n            defectId,\n            name: 'screenshot.png',\n            size: 1024000,\n            type: 'image/png',\n            uploadedBy: 'tester1',\n            uploadedAt: new Date(),\n            url: `/api/defects/${defectId}/attachments/1`\n        },\n        {\n            id: 2,\n            defectId,\n            name: 'error_log.txt',\n            size: 51200,\n            type: 'text/plain',\n            uploadedBy: 'developer1',\n            uploadedAt: new Date(),\n            url: `/api/defects/${defectId}/attachments/2`\n        }\n    ];\n};\n\nexport const downloadAttachment = async (\n    defectId: number, \n    attachmentId: number\n): Promise<{\n    fileStream: Readable;\n    filename: string;\n    contentType: string;\n}> => {\n    // 실제 구현에서는 데이터베이스에서 파일 정보 조회 후 파일 시스템에서 다운로드\n    // 현재는 목업 데이터 반환\n    const mockFile = {\n        filename: `attachment_${attachmentId}.txt`,\n        contentType: 'text/plain',\n        content: `This is a mock attachment for defect ${defectId}, attachment ${attachmentId}`\n    };\n\n    const stream = new Readable();\n    stream.push(mockFile.content);\n    stream.push(null);\n\n    return {\n        fileStream: stream,\n        filename: mockFile.filename,\n        contentType: mockFile.contentType\n    };\n}; "],"version":3}