{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/store/testCaseSlice.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/store/testCaseSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport api from '../../../utils/axios';\n\n// showToast 임시 선언 (실제 구현은 공통 유틸로 분리 권장)\nfunction showToast(message: string, type: 'error' | 'info' | 'success' = 'error') {\n  alert(`[${type}] ${message}`);\n}\n\nexport interface TestCase {\n  id: number;\n  title: string;\n  prereq?: string;\n  steps: string[];\n  expected: string;\n  priority: 'High' | 'Medium' | 'Low';\n  tags: string[];\n  status: 'Active' | 'Archived';\n  createdBy: string;\n  createdAt: string;\n  updatedAt: string;\n}\n\nexport interface AdvancedSearchFilter {\n  folders?: string[];\n  tags?: string[];\n  status?: ('Active' | 'Archived')[];\n  createdBy?: string[];\n  priority?: ('High' | 'Medium' | 'Low')[];\n  dateRange?: {\n    from: string;\n    to: string;\n  };\n  keyword?: string;\n}\n\nexport interface SearchPreset {\n  id: string;\n  name: string;\n  filters: AdvancedSearchFilter;\n  createdBy: string;\n  createdAt: string;\n}\n\nexport interface SearchResult {\n  testCases: TestCase[];\n  total: number;\n  highlights: Record<string, string[]>;\n}\n\ninterface TestCaseState {\n  list: TestCase[];\n  detail: TestCase | null;\n  loading: boolean;\n  error: string | null;\n  searchParams: any;\n  advancedSearch: {\n    filters: AdvancedSearchFilter;\n    results: SearchResult | null;\n    loading: boolean;\n    error: string | null;\n  };\n  presets: SearchPreset[];\n}\n\nconst initialState: TestCaseState = {\n  list: [],\n  detail: null,\n  loading: false,\n  error: null,\n  searchParams: {},\n  advancedSearch: {\n    filters: {},\n    results: null,\n    loading: false,\n    error: null,\n  },\n  presets: [],\n};\n\nexport const fetchTestCases = createAsyncThunk('testcases/fetch', async (_, { rejectWithValue }) => {\n  try {\n    const res = await api.get('/api/testcases');\n    return res.data as TestCase[];\n  } catch (error: any) {\n    showToast(error?.response?.data?.message || error.message || '테스트케이스 불러오기 실패', 'error');\n    return rejectWithValue(error.message);\n  }\n});\n\nexport const fetchTestCaseDetail = createAsyncThunk('testcases/fetchDetail', async (id: number, { rejectWithValue }) => {\n  try {\n    const res = await api.get(`/api/testcases/${id}`);\n    return res.data as TestCase;\n  } catch (error: any) {\n    showToast(error?.response?.data?.message || error.message || '상세 불러오기 실패', 'error');\n    return rejectWithValue(error.message);\n  }\n});\n\nexport const searchTestCases = createAsyncThunk('testcases/search', async (query: any, { rejectWithValue }) => {\n  try {\n    const res = await api.post('/api/testcases/search', query);\n    return res.data as TestCase[];\n  } catch (error: any) {\n    showToast(error?.response?.data?.message || error.message || '검색 실패', 'error');\n    return rejectWithValue(error.message);\n  }\n});\n\n// 고급 검색\nexport const advancedSearchTestCases = createAsyncThunk(\n  'testcases/advancedSearch',\n  async ({ filters, page = 0, size = 20 }: { filters: AdvancedSearchFilter; page?: number; size?: number }, { rejectWithValue }) => {\n    try {\n      const res = await api.post('/api/testcases/search/advanced', { filters, page, size });\n      return res.data as SearchResult;\n    } catch (error: any) {\n      showToast(error?.response?.data?.message || error.message || '고급 검색 실패', 'error');\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// 검색 프리셋 저장\nexport const saveSearchPreset = createAsyncThunk(\n  'testcases/savePreset',\n  async (preset: Omit<SearchPreset, 'id' | 'createdAt'>, { rejectWithValue }) => {\n    try {\n      const res = await api.post('/api/testcases/search/presets', preset);\n      return res.data as SearchPreset;\n    } catch (error: any) {\n      showToast(error?.response?.data?.message || error.message || '프리셋 저장 실패', 'error');\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// 검색 프리셋 목록 조회\nexport const fetchSearchPresets = createAsyncThunk(\n  'testcases/fetchPresets',\n  async (arg: { createdBy?: string }, { rejectWithValue }) => {\n    try {\n      const params = arg.createdBy ? { createdBy: arg.createdBy } : {};\n      const res = await api.get('/api/testcases/search/presets', { params });\n      return res.data as SearchPreset[];\n    } catch (error: any) {\n      showToast(error?.response?.data?.message || error.message || '프리셋 목록 불러오기 실패', 'error');\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// 검색 프리셋 삭제\nexport const deleteSearchPreset = createAsyncThunk(\n  'testcases/deletePreset',\n  async (presetId: string, { rejectWithValue }) => {\n    try {\n      await api.delete(`/api/testcases/search/presets/${presetId}`);\n      return presetId;\n    } catch (error: any) {\n      showToast(error?.response?.data?.message || error.message || '프리셋 삭제 실패', 'error');\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\n// 테스트 케이스 생성\nexport const createTestCase = createAsyncThunk(\n  'testcases/create',\n  async (testCaseData: {\n    title: string;\n    description: string;\n    priority: 'High' | 'Medium' | 'Low';\n    status: 'Draft' | 'Active' | 'Inactive';\n    steps: string[];\n    expectedResult: string;\n    tags: string;\n  }, { rejectWithValue }) => {\n    try {\n      const res = await api.post('/api/testcases', testCaseData);\n      showToast('테스트 케이스가 성공적으로 생성되었습니다!', 'success');\n      return res.data as TestCase;\n    } catch (error: any) {\n      showToast(error?.response?.data?.message || error.message || '테스트 케이스 생성 실패', 'error');\n      return rejectWithValue(error.message);\n    }\n  }\n);\n\nconst testCaseSlice = createSlice({\n  name: 'testcases',\n  initialState,\n  reducers: {\n    setSearchParams(state, action: PayloadAction<any>) {\n      state.searchParams = action.payload;\n    },\n    clearDetail(state) {\n      state.detail = null;\n    },\n    setAdvancedSearchFilters(state, action: PayloadAction<AdvancedSearchFilter>) {\n      state.advancedSearch.filters = action.payload;\n    },\n    clearAdvancedSearchResults(state) {\n      state.advancedSearch.results = null;\n      state.advancedSearch.error = null;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchTestCases.pending, state => { state.loading = true; state.error = null; })\n      .addCase(fetchTestCases.fulfilled, (state, action) => { state.loading = false; state.list = action.payload; })\n      .addCase(fetchTestCases.rejected, (state, action) => { state.loading = false; state.error = action.error.message || '불러오기 실패'; })\n      .addCase(fetchTestCaseDetail.pending, state => { state.loading = true; state.error = null; })\n      .addCase(fetchTestCaseDetail.fulfilled, (state, action) => { state.loading = false; state.detail = action.payload; })\n      .addCase(fetchTestCaseDetail.rejected, (state, action) => { state.loading = false; state.error = action.error.message || '상세 불러오기 실패'; })\n      .addCase(searchTestCases.pending, state => { state.loading = true; state.error = null; })\n      .addCase(searchTestCases.fulfilled, (state, action) => { state.loading = false; state.list = action.payload; })\n      .addCase(searchTestCases.rejected, (state, action) => { state.loading = false; state.error = action.error.message || '검색 실패'; })\n      // 고급 검색\n      .addCase(advancedSearchTestCases.pending, state => { \n        state.advancedSearch.loading = true; \n        state.advancedSearch.error = null; \n      })\n      .addCase(advancedSearchTestCases.fulfilled, (state, action) => { \n        state.advancedSearch.loading = false; \n        state.advancedSearch.results = action.payload; \n      })\n      .addCase(advancedSearchTestCases.rejected, (state, action) => { \n        state.advancedSearch.loading = false; \n        state.advancedSearch.error = action.error.message || '고급 검색 실패'; \n      })\n      // 프리셋 저장\n      .addCase(saveSearchPreset.fulfilled, (state, action) => {\n        state.presets.unshift(action.payload);\n      })\n      // 프리셋 목록 조회\n      .addCase(fetchSearchPresets.fulfilled, (state, action) => {\n        state.presets = action.payload;\n      })\n      // 프리셋 삭제\n      .addCase(deleteSearchPreset.fulfilled, (state, action) => {\n        state.presets = state.presets.filter(preset => preset.id !== action.payload);\n      })\n      // 테스트 케이스 생성\n      .addCase(createTestCase.pending, state => { state.loading = true; state.error = null; })\n      .addCase(createTestCase.fulfilled, (state, action) => { \n        state.loading = false; \n        state.list.unshift(action.payload);\n      })\n      .addCase(createTestCase.rejected, (state, action) => { \n        state.loading = false; \n        state.error = action.error.message || '생성 실패'; \n      });\n  },\n});\n\nexport const { setSearchParams, clearDetail, setAdvancedSearchFilters, clearAdvancedSearchResults } = testCaseSlice.actions;\nexport default testCaseSlice.reducer; "],"version":3}