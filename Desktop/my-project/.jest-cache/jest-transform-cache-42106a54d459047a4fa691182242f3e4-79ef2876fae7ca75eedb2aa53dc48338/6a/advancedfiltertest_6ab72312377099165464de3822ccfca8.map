{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/advanced-filter.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/advanced-filter.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from '@reduxjs/toolkit';\nimport { ThemeProvider } from 'styled-components';\nimport AdvancedFilter from '../src/renderer/features/TestCaseManagement/components/AdvancedFilter';\nimport { theme } from '../src/renderer/shared/theme';\nimport '@testing-library/jest-dom';\n\n// Mock axios\njest.mock('../src/renderer/utils/axios', () => ({\n  get: jest.fn(),\n  post: jest.fn(),\n  delete: jest.fn(),\n}));\n\nconst mockAxios = require('../src/renderer/utils/axios');\n\nconst createTestStore = () => {\n  return configureStore({\n    reducer: {\n      // 필요한 리듀서들 추가\n    },\n    preloadedState: {}\n  });\n};\n\nconst renderAdvancedFilter = (props = {}) => {\n  const store = createTestStore();\n  const defaultProps = {\n    onSearch: jest.fn(),\n    onClear: jest.fn(),\n    ...props\n  };\n\n  return render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <AdvancedFilter {...defaultProps} />\n      </ThemeProvider>\n    </Provider>\n  );\n};\n\ndescribe('AdvancedFilter Component', () => {\n  beforeEach(() => {\n    mockAxios.get.mockClear();\n    mockAxios.post.mockClear();\n    mockAxios.delete.mockClear();\n  });\n\n  describe('기본 렌더링', () => {\n    it('should render advanced filter component', () => {\n      renderAdvancedFilter();\n      \n      expect(screen.getByText('고급 검색')).toBeInTheDocument();\n      expect(screen.getByText('키워드 검색')).toBeInTheDocument();\n      expect(screen.getByText('폴더')).toBeInTheDocument();\n      expect(screen.getByText('태그')).toBeInTheDocument();\n      expect(screen.getByText('상태')).toBeInTheDocument();\n      expect(screen.getByText('우선순위')).toBeInTheDocument();\n      expect(screen.getByText('작성자')).toBeInTheDocument();\n      expect(screen.getByText('생성일 (시작)')).toBeInTheDocument();\n      expect(screen.getByText('생성일 (종료)')).toBeInTheDocument();\n    });\n\n    it('should render search and clear buttons', () => {\n      renderAdvancedFilter();\n      \n      expect(screen.getByText('초기화')).toBeInTheDocument();\n      expect(screen.getByText('검색')).toBeInTheDocument();\n      expect(screen.getByText('현재 조건 저장')).toBeInTheDocument();\n    });\n  });\n\n  describe('키워드 검색', () => {\n    it('should handle keyword input', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      const keywordInput = screen.getByPlaceholderText('제목, 설명, 스텝에서 검색...');\n      fireEvent.change(keywordInput, { target: { value: 'login test' } });\n\n      expect(keywordInput).toHaveValue('login test');\n    });\n\n    it('should trigger search with keyword', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      const keywordInput = screen.getByPlaceholderText('제목, 설명, 스텝에서 검색...');\n      fireEvent.change(keywordInput, { target: { value: 'login test' } });\n\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        keyword: 'login test'\n      });\n    });\n  });\n\n  describe('다중 선택 필터', () => {\n    it('should open folder dropdown when clicked', () => {\n      renderAdvancedFilter();\n\n      const folderSelect = screen.getByText('선택하세요');\n      fireEvent.click(folderSelect);\n\n      expect(screen.getByText('Smoke Tests')).toBeInTheDocument();\n      expect(screen.getByText('Regression Tests')).toBeInTheDocument();\n      expect(screen.getByText('Integration Tests')).toBeInTheDocument();\n      expect(screen.getByText('Unit Tests')).toBeInTheDocument();\n    });\n\n    it('should select multiple folders', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      // 폴더 드롭다운 열기\n      const folderSelect = screen.getByText('선택하세요');\n      fireEvent.click(folderSelect);\n\n      // Smoke Tests 선택\n      fireEvent.click(screen.getByText('Smoke Tests'));\n      \n      // Regression Tests 선택\n      fireEvent.click(screen.getByText('Regression Tests'));\n\n      // 검색 버튼 클릭\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        folders: ['Smoke Tests', 'Regression Tests']\n      });\n    });\n\n    it('should select multiple tags', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      // 태그 드롭다운 열기\n      const tagSelect = screen.getByText('선택하세요');\n      fireEvent.click(tagSelect);\n\n      // critical 태그 선택\n      fireEvent.click(screen.getByText('critical'));\n      \n      // smoke 태그 선택\n      fireEvent.click(screen.getByText('smoke'));\n\n      // 검색 버튼 클릭\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        tags: ['critical', 'smoke']\n      });\n    });\n\n    it('should select status and priority', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      // 상태 드롭다운 열기\n      const statusSelect = screen.getByText('선택하세요');\n      fireEvent.click(statusSelect);\n      fireEvent.click(screen.getByText('Active'));\n\n      // 우선순위 드롭다운 열기\n      const prioritySelect = screen.getByText('선택하세요');\n      fireEvent.click(prioritySelect);\n      fireEvent.click(screen.getByText('High'));\n\n      // 검색 버튼 클릭\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        status: ['Active'],\n        priority: ['High']\n      });\n    });\n  });\n\n  describe('작성자 필터', () => {\n    it('should handle author input', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      const authorInput = screen.getByPlaceholderText('작성자 입력...');\n      fireEvent.change(authorInput, { target: { value: 'tester1, tester2' } });\n\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        createdBy: ['tester1', 'tester2']\n      });\n    });\n  });\n\n  describe('날짜 범위 필터', () => {\n    it('should handle date range inputs', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      const fromDateInput = screen.getByLabelText('생성일 (시작)');\n      const toDateInput = screen.getByLabelText('생성일 (종료)');\n\n      fireEvent.change(fromDateInput, { target: { value: '2024-01-01' } });\n      fireEvent.change(toDateInput, { target: { value: '2024-12-31' } });\n\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        dateRange: {\n          from: '2024-01-01',\n          to: '2024-12-31'\n        }\n      });\n    });\n  });\n\n  describe('복합 필터', () => {\n    it('should combine multiple filters', () => {\n      const onSearch = jest.fn();\n      renderAdvancedFilter({ onSearch });\n\n      // 키워드 입력\n      const keywordInput = screen.getByPlaceholderText('제목, 설명, 스텝에서 검색...');\n      fireEvent.change(keywordInput, { target: { value: 'login' } });\n\n      // 폴더 선택\n      const folderSelect = screen.getByText('선택하세요');\n      fireEvent.click(folderSelect);\n      fireEvent.click(screen.getByText('Smoke Tests'));\n\n      // 우선순위 선택\n      const prioritySelect = screen.getAllByText('선택하세요')[3]; // 우선순위는 4번째\n      fireEvent.click(prioritySelect);\n      fireEvent.click(screen.getByText('High'));\n\n      // 검색 버튼 클릭\n      const searchButton = screen.getByText('검색');\n      fireEvent.click(searchButton);\n\n      expect(onSearch).toHaveBeenCalledWith({\n        keyword: 'login',\n        folders: ['Smoke Tests'],\n        priority: ['High']\n      });\n    });\n  });\n\n  describe('초기화 기능', () => {\n    it('should clear all filters when clear button is clicked', () => {\n      const onClear = jest.fn();\n      renderAdvancedFilter({ onClear });\n\n      // 필터 설정\n      const keywordInput = screen.getByPlaceholderText('제목, 설명, 스텝에서 검색...');\n      fireEvent.change(keywordInput, { target: { value: 'test' } });\n\n      // 초기화 버튼 클릭\n      const clearButton = screen.getByText('초기화');\n      fireEvent.click(clearButton);\n\n      expect(onClear).toHaveBeenCalled();\n      expect(keywordInput).toHaveValue('');\n    });\n  });\n\n  describe('검색 프리셋', () => {\n    it('should load and display saved presets', async () => {\n      const mockPresets = [\n        {\n          id: 'preset_1',\n          name: 'Critical Tests',\n          filters: { priority: ['High'], tags: ['critical'] },\n          createdBy: 'tester1',\n          createdAt: '2024-01-15T00:00:00Z'\n        }\n      ];\n\n      mockAxios.get.mockResolvedValue({ data: mockPresets });\n\n      renderAdvancedFilter();\n\n      await waitFor(() => {\n        expect(screen.getByText('Critical Tests')).toBeInTheDocument();\n      });\n    });\n\n    it('should open save preset modal when save button is clicked', () => {\n      renderAdvancedFilter();\n\n      const saveButton = screen.getByText('현재 조건 저장');\n      fireEvent.click(saveButton);\n\n      expect(screen.getByText('검색 조건 저장')).toBeInTheDocument();\n      expect(screen.getByPlaceholderText('프리셋 이름을 입력하세요')).toBeInTheDocument();\n    });\n\n    it('should save preset when modal form is submitted', async () => {\n      const mockPreset = {\n        id: 'preset_123',\n        name: 'My Preset',\n        filters: {},\n        createdBy: 'tester1',\n        createdAt: '2024-01-15T00:00:00Z'\n      };\n\n      mockAxios.post.mockResolvedValue({ data: mockPreset });\n\n      renderAdvancedFilter();\n\n      // 저장 모달 열기\n      const saveButton = screen.getByText('현재 조건 저장');\n      fireEvent.click(saveButton);\n\n      // 프리셋 이름 입력\n      const nameInput = screen.getByPlaceholderText('프리셋 이름을 입력하세요');\n      fireEvent.change(nameInput, { target: { value: 'My Preset' } });\n\n      // 저장 버튼 클릭\n      const modalSaveButton = screen.getByText('저장');\n      fireEvent.click(modalSaveButton);\n\n      await waitFor(() => {\n        expect(mockAxios.post).toHaveBeenCalledWith('/api/testcases/search/presets', {\n          name: 'My Preset',\n          filters: {},\n          createdBy: 'current-user'\n        });\n      });\n    });\n\n    it('should load preset when preset tag is clicked', async () => {\n      const onSearch = jest.fn();\n      const mockPresets = [\n        {\n          id: 'preset_1',\n          name: 'Critical Tests',\n          filters: { priority: ['High'], tags: ['critical'] },\n          createdBy: 'tester1',\n          createdAt: '2024-01-15T00:00:00Z'\n        }\n      ];\n\n      mockAxios.get.mockResolvedValue({ data: mockPresets });\n\n      renderAdvancedFilter({ onSearch });\n\n      await waitFor(() => {\n        const presetTag = screen.getByText('Critical Tests');\n        fireEvent.click(presetTag);\n      });\n\n      expect(onSearch).toHaveBeenCalledWith({\n        priority: ['High'],\n        tags: ['critical']\n      });\n    });\n  });\n\n  describe('접근성', () => {\n    it('should have proper ARIA labels', () => {\n      renderAdvancedFilter();\n\n      expect(screen.getByLabelText('키워드 검색')).toBeInTheDocument();\n      expect(screen.getByLabelText('작성자')).toBeInTheDocument();\n      expect(screen.getByLabelText('생성일 (시작)')).toBeInTheDocument();\n      expect(screen.getByLabelText('생성일 (종료)')).toBeInTheDocument();\n    });\n\n    it('should support keyboard navigation', () => {\n      renderAdvancedFilter();\n\n      const keywordInput = screen.getByPlaceholderText('제목, 설명, 스텝에서 검색...');\n      keywordInput.focus();\n      \n      expect(keywordInput).toHaveFocus();\n    });\n  });\n}); "],"version":3}