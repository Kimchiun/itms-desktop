ee6858348dabce4b960322033066eda0
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const react_redux_1 = require("react-redux");
const dashboardLayoutSlice_1 = require("../../../store/dashboardLayoutSlice");
const Container = styled_components_1.default.div `
  background: white;
  border: 1px solid #e2e8f0;
  border-radius: 8px;
  padding: 16px;
  margin-bottom: 16px;
`;
const Header = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
`;
const Title = styled_components_1.default.h4 `
  margin: 0;
  font-size: 16px;
  font-weight: 600;
  color: #1e293b;
`;
const ClearButton = styled_components_1.default.button `
  padding: 4px 12px;
  background: #f1f5f9;
  color: #64748b;
  border: 1px solid #e2e8f0;
  border-radius: 4px;
  font-size: 12px;
  cursor: pointer;
  transition: all 0.2s;

  &:hover {
    background: #e2e8f0;
    color: #475569;
  }
`;
const FilterGrid = styled_components_1.default.div `
  display: grid;
  grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
  gap: 12px;
`;
const FilterGroup = styled_components_1.default.div `
  display: flex;
  flex-direction: column;
  gap: 8px;
`;
const FilterLabel = styled_components_1.default.label `
  font-size: 12px;
  font-weight: 500;
  color: #64748b;
`;
const FilterSelect = styled_components_1.default.select `
  padding: 6px 8px;
  border: 1px solid #e2e8f0;
  border-radius: 4px;
  font-size: 14px;
  background: white;
  min-height: 32px;
`;
const FilterInput = styled_components_1.default.input `
  padding: 6px 8px;
  border: 1px solid #e2e8f0;
  border-radius: 4px;
  font-size: 14px;
  min-height: 32px;
`;
const CheckboxContainer = styled_components_1.default.div `
  display: flex;
  align-items: center;
  gap: 8px;
`;
const Checkbox = styled_components_1.default.input `
  margin: 0;
`;
const CheckboxLabel = styled_components_1.default.label `
  font-size: 14px;
  color: #374151;
  cursor: pointer;
`;
const ActiveFilters = styled_components_1.default.div `
  display: flex;
  flex-wrap: wrap;
  gap: 8px;
  margin-top: 12px;
  padding-top: 12px;
  border-top: 1px solid #f1f5f9;
`;
const FilterTag = styled_components_1.default.span `
  padding: 4px 8px;
  background: #dbeafe;
  color: #1e40af;
  border-radius: 12px;
  font-size: 12px;
  font-weight: 500;
`;
const FilterBar = () => {
    const dispatch = (0, react_redux_1.useDispatch)();
    const filters = (0, react_redux_1.useSelector)((state) => state.dashboardLayout.filters);
    const [localFilters, setLocalFilters] = (0, react_1.useState)(filters);
    const executionStatusOptions = [
        { value: 'Untested', label: '실행 전' },
        { value: 'Pass', label: '통과' },
        { value: 'Fail', label: '실패' },
        { value: 'Blocked', label: '블록' },
        { value: 'Defect', label: '결함' },
    ];
    const priorityOptions = [
        { value: 'High', label: '높음' },
        { value: 'Medium', label: '보통' },
        { value: 'Low', label: '낮음' },
    ];
    const severityOptions = [
        { value: 'Critical', label: '치명적' },
        { value: 'High', label: '높음' },
        { value: 'Medium', label: '보통' },
        { value: 'Low', label: '낮음' },
    ];
    const handleFilterChange = (0, react_1.useCallback)((key, value) => {
        const newFilters = { ...localFilters, [key]: value };
        setLocalFilters(newFilters);
        dispatch((0, dashboardLayoutSlice_1.setFilters)(newFilters));
    }, [localFilters, dispatch]);
    const handleClearFilters = (0, react_1.useCallback)(() => {
        setLocalFilters({
            executionStatus: [],
            priority: [],
            severity: [],
            keyword: '',
            showOnlyDefects: false,
        });
        dispatch((0, dashboardLayoutSlice_1.clearFilters)());
    }, [dispatch]);
    const getActiveFilterCount = () => {
        let count = 0;
        if (filters.executionStatus.length > 0)
            count++;
        if (filters.priority.length > 0)
            count++;
        if (filters.severity.length > 0)
            count++;
        if (filters.keyword)
            count++;
        if (filters.showOnlyDefects)
            count++;
        return count;
    };
    const renderActiveFilters = () => {
        const activeFilters = [];
        filters.executionStatus.forEach(status => {
            const option = executionStatusOptions.find(opt => opt.value === status);
            if (option)
                activeFilters.push(`실행상태: ${option.label}`);
        });
        filters.priority.forEach(priority => {
            const option = priorityOptions.find(opt => opt.value === priority);
            if (option)
                activeFilters.push(`우선순위: ${option.label}`);
        });
        filters.severity.forEach(severity => {
            const option = severityOptions.find(opt => opt.value === severity);
            if (option)
                activeFilters.push(`심각도: ${option.label}`);
        });
        if (filters.keyword)
            activeFilters.push(`검색: ${filters.keyword}`);
        if (filters.showOnlyDefects)
            activeFilters.push('결함만 표시');
        return activeFilters;
    };
    return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsxs)(Header, { children: [(0, jsx_runtime_1.jsx)(Title, { children: "\uD544\uD130" }), getActiveFilterCount() > 0 && ((0, jsx_runtime_1.jsx)(ClearButton, { onClick: handleClearFilters, "data-testid": "clear-filters-btn", children: "\uD544\uD130 \uCD08\uAE30\uD654" }))] }), (0, jsx_runtime_1.jsxs)(FilterGrid, { children: [(0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uC2E4\uD589 \uC0C1\uD0DC" }), (0, jsx_runtime_1.jsx)(FilterSelect, { multiple: true, value: localFilters.executionStatus, onChange: (e) => {
                                    const selected = Array.from(e.target.selectedOptions, option => option.value);
                                    handleFilterChange('executionStatus', selected);
                                }, "data-testid": "execution-status-filter", children: executionStatusOptions.map(option => ((0, jsx_runtime_1.jsx)("option", { value: option.value, children: option.label }, option.value))) })] }), (0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uC6B0\uC120\uC21C\uC704" }), (0, jsx_runtime_1.jsx)(FilterSelect, { multiple: true, value: localFilters.priority, onChange: (e) => {
                                    const selected = Array.from(e.target.selectedOptions, option => option.value);
                                    handleFilterChange('priority', selected);
                                }, "data-testid": "priority-filter", children: priorityOptions.map(option => ((0, jsx_runtime_1.jsx)("option", { value: option.value, children: option.label }, option.value))) })] }), (0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uC2EC\uAC01\uB3C4" }), (0, jsx_runtime_1.jsx)(FilterSelect, { multiple: true, value: localFilters.severity, onChange: (e) => {
                                    const selected = Array.from(e.target.selectedOptions, option => option.value);
                                    handleFilterChange('severity', selected);
                                }, "data-testid": "severity-filter", children: severityOptions.map(option => ((0, jsx_runtime_1.jsx)("option", { value: option.value, children: option.label }, option.value))) })] }), (0, jsx_runtime_1.jsxs)(FilterGroup, { children: [(0, jsx_runtime_1.jsx)(FilterLabel, { children: "\uD0A4\uC6CC\uB4DC \uAC80\uC0C9" }), (0, jsx_runtime_1.jsx)(FilterInput, { type: "text", placeholder: "\uC81C\uBAA9, \uC124\uBA85\uC73C\uB85C \uAC80\uC0C9...", value: localFilters.keyword, onChange: (e) => handleFilterChange('keyword', e.target.value), "data-testid": "keyword-search-input" })] }), (0, jsx_runtime_1.jsx)(FilterGroup, { children: (0, jsx_runtime_1.jsxs)(CheckboxContainer, { children: [(0, jsx_runtime_1.jsx)(Checkbox, { type: "checkbox", id: "showOnlyDefects", checked: localFilters.showOnlyDefects, onChange: (e) => handleFilterChange('showOnlyDefects', e.target.checked), "data-testid": "show-only-defects-checkbox" }), (0, jsx_runtime_1.jsx)(CheckboxLabel, { htmlFor: "showOnlyDefects", children: "\uACB0\uD568\uB9CC \uD45C\uC2DC" })] }) })] }), getActiveFilterCount() > 0 && ((0, jsx_runtime_1.jsx)(ActiveFilters, { children: renderActiveFilters().map((filter, index) => ((0, jsx_runtime_1.jsx)(FilterTag, { "data-testid": `active-filter-${index}`, children: filter }, index))) }))] }));
};
exports.default = FilterBar;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,