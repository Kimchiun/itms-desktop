{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/store/dashboardLayoutSlice.ts","mappings":";;;;AAAA,8CAA8D;AAwD9D,MAAM,YAAY,GAAyB;IACzC,SAAS,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IAC7C,UAAU,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,EAAE;IAC9C,WAAW,EAAE,EAAE,WAAW,EAAE,KAAK,EAAE;IACnC,SAAS,EAAE,UAAU;IACrB,iBAAiB,EAAE,IAAI;IACvB,kBAAkB,EAAE,IAAI;IACxB,gBAAgB,EAAE,IAAI;IACtB,OAAO,EAAE;QACP,eAAe,EAAE,EAAE;QACnB,QAAQ,EAAE,EAAE;QACZ,QAAQ,EAAE,EAAE;QACZ,OAAO,EAAE,EAAE;QACX,eAAe,EAAE,KAAK;KACvB;IACD,WAAW,EAAE;QACX,SAAS,EAAE,EAAE;QACb,OAAO,EAAE,EAAE;QACX,OAAO,EAAE,KAAK;QACd,KAAK,EAAE,IAAI;KACZ;CACF,CAAC;AAEF,MAAM,oBAAoB,GAAG,IAAA,qBAAW,EAAC;IACvC,IAAI,EAAE,iBAAiB;IACvB,YAAY;IACZ,QAAQ,EAAE;QACR,eAAe,CAAC,KAAK;YACnB,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;QAC7D,CAAC;QACD,gBAAgB,CAAC,KAAK;YACpB,KAAK,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC;QAC/D,CAAC;QACD,oBAAoB,CAAC,KAAK,EAAE,MAA6B;YACvD,KAAK,CAAC,iBAAiB,GAAG,MAAM,CAAC,OAAO,CAAC;YACzC,KAAK,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAChC,KAAK,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAChC,CAAC;QACD,qBAAqB,CAAC,KAAK,EAAE,MAAoC;YAC/D,KAAK,CAAC,kBAAkB,GAAG,MAAM,CAAC,OAAO,CAAC;QAC5C,CAAC;QACD,mBAAmB,CAAC,KAAK,EAAE,MAAoC;YAC7D,KAAK,CAAC,gBAAgB,GAAG,MAAM,CAAC,OAAO,CAAC;QAC1C,CAAC;QACD,UAAU,CAAC,KAAK,EAAE,MAA2C;YAC3D,KAAK,CAAC,OAAO,GAAG,EAAE,GAAG,KAAK,CAAC,OAAO,EAAE,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC;QAC1D,CAAC;QACD,YAAY,CAAC,KAAK;YAChB,KAAK,CAAC,OAAO,GAAG,YAAY,CAAC,OAAO,CAAC;QACvC,CAAC;QACD,cAAc,CAAC,KAAK,EAAE,MAAmE;YACvF,KAAK,CAAC,WAAW,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC,SAAS,CAAC;YACvD,KAAK,CAAC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC,OAAO,CAAC;QACrD,CAAC;QACD,qBAAqB,CAAC,KAAK,EAAE,MAA8B;YACzD,KAAK,CAAC,WAAW,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC7C,CAAC;QACD,mBAAmB,CAAC,KAAK,EAAE,MAAoC;YAC7D,KAAK,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;QAC3C,CAAC;KACF;CACF,CAAC,CAAC;AAEU,KAWT,oBAAoB,CAAC,OAAO,EAV9B,uBAAe,uBACf,wBAAgB,wBAChB,4BAAoB,4BACpB,6BAAqB,6BACrB,2BAAmB,2BACnB,kBAAU,kBACV,oBAAY,oBACZ,sBAAc,sBACd,6BAAqB,6BACrB,2BAAmB,0BACY;AAEjC,kBAAe,oBAAoB,CAAC,OAAO,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/store/dashboardLayoutSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface TestCase {\n  id: number;\n  title: string;\n  description?: string;\n  priority: 'High' | 'Medium' | 'Low';\n  status: 'Active' | 'Archived';\n  executionStatus: 'Untested' | 'Pass' | 'Fail' | 'Blocked' | 'Defect';\n  createdBy: string;\n  createdAt: string;\n}\n\nexport interface Defect {\n  id: number;\n  title: string;\n  severity: 'Critical' | 'High' | 'Medium' | 'Low';\n  status: 'Open' | 'In Progress' | 'Resolved' | 'Closed';\n  createdBy: string;\n  createdAt: string;\n  description?: string;\n}\n\nexport interface FilterState {\n  executionStatus: string[];\n  priority: string[];\n  severity: string[];\n  keyword: string;\n  showOnlyDefects: boolean;\n}\n\ninterface DashboardLayoutState {\n  leftPanel: {\n    isCollapsed: boolean;\n    width: number;\n  };\n  rightPanel: {\n    isCollapsed: boolean;\n    width: number;\n  };\n  centerPanel: {\n    isFullWidth: boolean;\n  };\n  activeTab: string;\n  selectedReleaseId: string | null;\n  selectedTestCaseId: number | null;\n  selectedDefectId: number | null;\n  filters: FilterState;\n  releaseData: {\n    testCases: TestCase[];\n    defects: Defect[];\n    loading: boolean;\n    error: string | null;\n  };\n}\n\nconst initialState: DashboardLayoutState = {\n  leftPanel: { isCollapsed: false, width: 280 },\n  rightPanel: { isCollapsed: false, width: 320 },\n  centerPanel: { isFullWidth: false },\n  activeTab: 'overview',\n  selectedReleaseId: null,\n  selectedTestCaseId: null,\n  selectedDefectId: null,\n  filters: {\n    executionStatus: [],\n    priority: [],\n    severity: [],\n    keyword: '',\n    showOnlyDefects: false,\n  },\n  releaseData: {\n    testCases: [],\n    defects: [],\n    loading: false,\n    error: null,\n  },\n};\n\nconst dashboardLayoutSlice = createSlice({\n  name: 'dashboardLayout',\n  initialState,\n  reducers: {\n    toggleLeftPanel(state) {\n      state.leftPanel.isCollapsed = !state.leftPanel.isCollapsed;\n    },\n    toggleRightPanel(state) {\n      state.rightPanel.isCollapsed = !state.rightPanel.isCollapsed;\n    },\n    setSelectedReleaseId(state, action: PayloadAction<string>) {\n      state.selectedReleaseId = action.payload;\n      state.selectedTestCaseId = null;\n      state.selectedDefectId = null;\n    },\n    setSelectedTestCaseId(state, action: PayloadAction<number | null>) {\n      state.selectedTestCaseId = action.payload;\n    },\n    setSelectedDefectId(state, action: PayloadAction<number | null>) {\n      state.selectedDefectId = action.payload;\n    },\n    setFilters(state, action: PayloadAction<Partial<FilterState>>) {\n      state.filters = { ...state.filters, ...action.payload };\n    },\n    clearFilters(state) {\n      state.filters = initialState.filters;\n    },\n    setReleaseData(state, action: PayloadAction<{ testCases: TestCase[]; defects: Defect[] }>) {\n      state.releaseData.testCases = action.payload.testCases;\n      state.releaseData.defects = action.payload.defects;\n    },\n    setReleaseDataLoading(state, action: PayloadAction<boolean>) {\n      state.releaseData.loading = action.payload;\n    },\n    setReleaseDataError(state, action: PayloadAction<string | null>) {\n      state.releaseData.error = action.payload;\n    },\n  },\n});\n\nexport const { \n  toggleLeftPanel, \n  toggleRightPanel, \n  setSelectedReleaseId,\n  setSelectedTestCaseId,\n  setSelectedDefectId,\n  setFilters,\n  clearFilters,\n  setReleaseData,\n  setReleaseDataLoading,\n  setReleaseDataError,\n} = dashboardLayoutSlice.actions;\n\nexport default dashboardLayoutSlice.reducer; "],"version":3}