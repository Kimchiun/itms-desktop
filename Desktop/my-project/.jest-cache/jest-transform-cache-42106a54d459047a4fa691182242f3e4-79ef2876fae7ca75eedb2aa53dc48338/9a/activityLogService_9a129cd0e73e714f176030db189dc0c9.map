{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/defects/services/activityLogService.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/defects/services/activityLogService.ts"],"sourcesContent":["import { ActivityLog } from '../models/Defect';\n\nexport interface ActivityLogParams {\n    page: number;\n    size: number;\n    dateRange?: string;\n    activityType?: string;\n    user?: string;\n}\n\nexport const getDefectActivityLogs = async (\n    defectId: number, \n    params: ActivityLogParams\n): Promise<{\n    logs: ActivityLog[];\n    total: number;\n    page: number;\n    size: number;\n}> => {\n    // 실제 구현에서는 데이터베이스에서 조회\n    // 현재는 목업 데이터 반환\n    const mockLogs: ActivityLog[] = [\n        {\n            id: 1,\n            defectId,\n            action: '결함 생성',\n            user: 'tester1',\n            date: new Date(Date.now() - 86400000), // 1일 전\n            details: '새로운 결함이 생성되었습니다.',\n            type: 'create'\n        },\n        {\n            id: 2,\n            defectId,\n            action: '상태 변경',\n            user: 'developer1',\n            date: new Date(Date.now() - 43200000), // 12시간 전\n            details: '상태가 OPEN에서 IN_PROGRESS로 변경되었습니다.',\n            type: 'status_change'\n        },\n        {\n            id: 3,\n            defectId,\n            action: '코멘트 추가',\n            user: 'tester1',\n            date: new Date(Date.now() - 21600000), // 6시간 전\n            details: '추가 테스트 결과를 확인했습니다.',\n            type: 'comment'\n        },\n        {\n            id: 4,\n            defectId,\n            action: '상태 변경',\n            user: 'developer1',\n            date: new Date(Date.now() - 3600000), // 1시간 전\n            details: '상태가 IN_PROGRESS에서 RESOLVED로 변경되었습니다.',\n            type: 'status_change'\n        }\n    ];\n\n    // 필터링 로직 (실제로는 데이터베이스 쿼리에서 처리)\n    let filteredLogs = mockLogs;\n\n    if (params.activityType) {\n        filteredLogs = filteredLogs.filter(log => log.type === params.activityType);\n    }\n\n    if (params.user) {\n        filteredLogs = filteredLogs.filter(log => log.user === params.user);\n    }\n\n    if (params.dateRange) {\n        const now = new Date();\n        let startDate: Date;\n\n        switch (params.dateRange) {\n            case 'today':\n                startDate = new Date(now.getFullYear(), now.getMonth(), now.getDate());\n                break;\n            case 'week':\n                startDate = new Date(now.getTime() - 7 * 24 * 60 * 60 * 1000);\n                break;\n            case 'month':\n                startDate = new Date(now.getFullYear(), now.getMonth() - 1, now.getDate());\n                break;\n            default:\n                startDate = new Date(0); // 모든 날짜\n        }\n\n        filteredLogs = filteredLogs.filter(log => log.date >= startDate);\n    }\n\n    // 페이지네이션\n    const startIndex = params.page * params.size;\n    const endIndex = startIndex + params.size;\n    const paginatedLogs = filteredLogs.slice(startIndex, endIndex);\n\n    return {\n        logs: paginatedLogs,\n        total: filteredLogs.length,\n        page: params.page,\n        size: params.size\n    };\n}; "],"version":3}