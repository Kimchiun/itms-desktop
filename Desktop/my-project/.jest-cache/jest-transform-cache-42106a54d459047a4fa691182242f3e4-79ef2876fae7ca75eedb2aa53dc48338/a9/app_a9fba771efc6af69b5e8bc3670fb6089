a4a3845cac5fc6143279c1888cf44afc
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const express_1 = __importDefault(require("express"));
const cors_1 = __importDefault(require("cors"));
const passport_1 = __importDefault(require("./infrastructure/security/passport"));
const authController_1 = __importDefault(require("./domains/users/controllers/authController"));
const testCaseController_1 = __importDefault(require("./domains/testcases/controllers/testCaseController"));
const releaseController_1 = __importDefault(require("./domains/releases/controllers/releaseController"));
const executionController_1 = __importDefault(require("./domains/executions/controllers/executionController"));
const integrationController_1 = __importDefault(require("./domains/executions/controllers/integrationController"));
const dashboardController_1 = __importDefault(require("./controllers/dashboardController"));
const commentController_1 = __importDefault(require("./domains/comments/controllers/commentController"));
const folderController_1 = __importDefault(require("./domains/folders/controllers/folderController"));
const defectController_1 = __importDefault(require("./domains/defects/controllers/defectController"));
const bulkController_1 = require("./controllers/bulkController");
const app = (0, express_1.default)();
app.use(express_1.default.json());
app.use((0, cors_1.default)({
    origin: ['http://localhost:4000', 'http://127.0.0.1:4000'],
    credentials: true,
    methods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],
    allowedHeaders: ['Content-Type', 'Authorization']
}));
app.use(passport_1.default.initialize());
app.use('/api/auth', authController_1.default);
app.use('/api/testcases', testCaseController_1.default);
app.use('/api/releases', releaseController_1.default);
app.use('/api/executions', executionController_1.default);
app.use('/api/integrations', integrationController_1.default);
app.use('/api/dashboard', dashboardController_1.default);
app.use('/api/comments', commentController_1.default);
app.use('/api/folders', folderController_1.default);
app.use('/api/defects', defectController_1.default);
// 일괄 작업 API 라우트
app.post('/api/bulk/move', bulkController_1.bulkMove);
app.post('/api/bulk/copy', bulkController_1.bulkCopy);
app.delete('/api/bulk', bulkController_1.bulkDelete);
app.patch('/api/bulk/status', bulkController_1.bulkUpdateStatus);
app.get('/health', (req, res) => {
    res.json({ status: 'ok' });
});
exports.default = app;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0Rlc2t0b3AvbXktcHJvamVjdC9zcmMvbWFpbi9hcHAvYXBwLnRzIiwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsc0RBQThCO0FBQzlCLGdEQUF3QjtBQUN4QixrRkFBMEQ7QUFDMUQsZ0dBQXdFO0FBQ3hFLDRHQUFvRjtBQUNwRix5R0FBaUY7QUFDakYsK0dBQXVGO0FBQ3ZGLG1IQUEyRjtBQUMzRiw0RkFBb0U7QUFDcEUseUdBQWlGO0FBQ2pGLHNHQUE4RTtBQUM5RSxzR0FBOEU7QUFDOUUsaUVBQWdHO0FBRWhHLE1BQU0sR0FBRyxHQUFHLElBQUEsaUJBQU8sR0FBRSxDQUFDO0FBRXRCLEdBQUcsQ0FBQyxHQUFHLENBQUMsaUJBQU8sQ0FBQyxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQ3hCLEdBQUcsQ0FBQyxHQUFHLENBQUMsSUFBQSxjQUFJLEVBQUM7SUFDWCxNQUFNLEVBQUUsQ0FBQyx1QkFBdUIsRUFBRSx1QkFBdUIsQ0FBQztJQUMxRCxXQUFXLEVBQUUsSUFBSTtJQUNqQixPQUFPLEVBQUUsQ0FBQyxLQUFLLEVBQUUsTUFBTSxFQUFFLEtBQUssRUFBRSxRQUFRLEVBQUUsU0FBUyxDQUFDO0lBQ3BELGNBQWMsRUFBRSxDQUFDLGNBQWMsRUFBRSxlQUFlLENBQUM7Q0FDbEQsQ0FBQyxDQUFDLENBQUM7QUFDSixHQUFHLENBQUMsR0FBRyxDQUFDLGtCQUFRLENBQUMsVUFBVSxFQUFFLENBQUMsQ0FBQztBQUUvQixHQUFHLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSx3QkFBYyxDQUFDLENBQUM7QUFDckMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsRUFBRSw0QkFBa0IsQ0FBQyxDQUFDO0FBQzlDLEdBQUcsQ0FBQyxHQUFHLENBQUMsZUFBZSxFQUFFLDJCQUFpQixDQUFDLENBQUM7QUFDNUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxpQkFBaUIsRUFBRSw2QkFBbUIsQ0FBQyxDQUFDO0FBQ2hELEdBQUcsQ0FBQyxHQUFHLENBQUMsbUJBQW1CLEVBQUUsK0JBQXFCLENBQUMsQ0FBQztBQUNwRCxHQUFHLENBQUMsR0FBRyxDQUFDLGdCQUFnQixFQUFFLDZCQUFtQixDQUFDLENBQUM7QUFDL0MsR0FBRyxDQUFDLEdBQUcsQ0FBQyxlQUFlLEVBQUUsMkJBQWlCLENBQUMsQ0FBQztBQUM1QyxHQUFHLENBQUMsR0FBRyxDQUFDLGNBQWMsRUFBRSwwQkFBZ0IsQ0FBQyxDQUFDO0FBQzFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsY0FBYyxFQUFFLDBCQUFnQixDQUFDLENBQUM7QUFFMUMsZ0JBQWdCO0FBQ2hCLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUseUJBQVEsQ0FBQyxDQUFDO0FBQ3JDLEdBQUcsQ0FBQyxJQUFJLENBQUMsZ0JBQWdCLEVBQUUseUJBQVEsQ0FBQyxDQUFDO0FBQ3JDLEdBQUcsQ0FBQyxNQUFNLENBQUMsV0FBVyxFQUFFLDJCQUFVLENBQUMsQ0FBQztBQUNwQyxHQUFHLENBQUMsS0FBSyxDQUFDLGtCQUFrQixFQUFFLGlDQUFnQixDQUFDLENBQUM7QUFFaEQsR0FBRyxDQUFDLEdBQUcsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxHQUFHLEVBQUUsR0FBRyxFQUFFLEVBQUU7SUFDNUIsR0FBRyxDQUFDLElBQUksQ0FBQyxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO0FBQy9CLENBQUMsQ0FBQyxDQUFDO0FBRUgsa0JBQWUsR0FBRyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy8zaS1hMS0yMDIxLTAxNy9EZXNrdG9wL215LXByb2plY3Qvc3JjL21haW4vYXBwL2FwcC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZXhwcmVzcyBmcm9tICdleHByZXNzJztcbmltcG9ydCBjb3JzIGZyb20gJ2NvcnMnO1xuaW1wb3J0IHBhc3Nwb3J0IGZyb20gJy4vaW5mcmFzdHJ1Y3R1cmUvc2VjdXJpdHkvcGFzc3BvcnQnO1xuaW1wb3J0IGF1dGhDb250cm9sbGVyIGZyb20gJy4vZG9tYWlucy91c2Vycy9jb250cm9sbGVycy9hdXRoQ29udHJvbGxlcic7XG5pbXBvcnQgdGVzdENhc2VDb250cm9sbGVyIGZyb20gJy4vZG9tYWlucy90ZXN0Y2FzZXMvY29udHJvbGxlcnMvdGVzdENhc2VDb250cm9sbGVyJztcbmltcG9ydCByZWxlYXNlQ29udHJvbGxlciBmcm9tICcuL2RvbWFpbnMvcmVsZWFzZXMvY29udHJvbGxlcnMvcmVsZWFzZUNvbnRyb2xsZXInO1xuaW1wb3J0IGV4ZWN1dGlvbkNvbnRyb2xsZXIgZnJvbSAnLi9kb21haW5zL2V4ZWN1dGlvbnMvY29udHJvbGxlcnMvZXhlY3V0aW9uQ29udHJvbGxlcic7XG5pbXBvcnQgaW50ZWdyYXRpb25Db250cm9sbGVyIGZyb20gJy4vZG9tYWlucy9leGVjdXRpb25zL2NvbnRyb2xsZXJzL2ludGVncmF0aW9uQ29udHJvbGxlcic7XG5pbXBvcnQgZGFzaGJvYXJkQ29udHJvbGxlciBmcm9tICcuL2NvbnRyb2xsZXJzL2Rhc2hib2FyZENvbnRyb2xsZXInO1xuaW1wb3J0IGNvbW1lbnRDb250cm9sbGVyIGZyb20gJy4vZG9tYWlucy9jb21tZW50cy9jb250cm9sbGVycy9jb21tZW50Q29udHJvbGxlcic7XG5pbXBvcnQgZm9sZGVyQ29udHJvbGxlciBmcm9tICcuL2RvbWFpbnMvZm9sZGVycy9jb250cm9sbGVycy9mb2xkZXJDb250cm9sbGVyJztcbmltcG9ydCBkZWZlY3RDb250cm9sbGVyIGZyb20gJy4vZG9tYWlucy9kZWZlY3RzL2NvbnRyb2xsZXJzL2RlZmVjdENvbnRyb2xsZXInO1xuaW1wb3J0IHsgYnVsa01vdmUsIGJ1bGtDb3B5LCBidWxrRGVsZXRlLCBidWxrVXBkYXRlU3RhdHVzIH0gZnJvbSAnLi9jb250cm9sbGVycy9idWxrQ29udHJvbGxlcic7XG5cbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuYXBwLnVzZShleHByZXNzLmpzb24oKSk7XG5hcHAudXNlKGNvcnMoe1xuICBvcmlnaW46IFsnaHR0cDovL2xvY2FsaG9zdDo0MDAwJywgJ2h0dHA6Ly8xMjcuMC4wLjE6NDAwMCddLFxuICBjcmVkZW50aWFsczogdHJ1ZSxcbiAgbWV0aG9kczogWydHRVQnLCAnUE9TVCcsICdQVVQnLCAnREVMRVRFJywgJ09QVElPTlMnXSxcbiAgYWxsb3dlZEhlYWRlcnM6IFsnQ29udGVudC1UeXBlJywgJ0F1dGhvcml6YXRpb24nXVxufSkpO1xuYXBwLnVzZShwYXNzcG9ydC5pbml0aWFsaXplKCkpO1xuXG5hcHAudXNlKCcvYXBpL2F1dGgnLCBhdXRoQ29udHJvbGxlcik7XG5hcHAudXNlKCcvYXBpL3Rlc3RjYXNlcycsIHRlc3RDYXNlQ29udHJvbGxlcik7XG5hcHAudXNlKCcvYXBpL3JlbGVhc2VzJywgcmVsZWFzZUNvbnRyb2xsZXIpO1xuYXBwLnVzZSgnL2FwaS9leGVjdXRpb25zJywgZXhlY3V0aW9uQ29udHJvbGxlcik7XG5hcHAudXNlKCcvYXBpL2ludGVncmF0aW9ucycsIGludGVncmF0aW9uQ29udHJvbGxlcik7XG5hcHAudXNlKCcvYXBpL2Rhc2hib2FyZCcsIGRhc2hib2FyZENvbnRyb2xsZXIpO1xuYXBwLnVzZSgnL2FwaS9jb21tZW50cycsIGNvbW1lbnRDb250cm9sbGVyKTtcbmFwcC51c2UoJy9hcGkvZm9sZGVycycsIGZvbGRlckNvbnRyb2xsZXIpO1xuYXBwLnVzZSgnL2FwaS9kZWZlY3RzJywgZGVmZWN0Q29udHJvbGxlcik7XG5cbi8vIOydvOq0hCDsnpHsl4UgQVBJIOudvOyasO2KuFxuYXBwLnBvc3QoJy9hcGkvYnVsay9tb3ZlJywgYnVsa01vdmUpO1xuYXBwLnBvc3QoJy9hcGkvYnVsay9jb3B5JywgYnVsa0NvcHkpO1xuYXBwLmRlbGV0ZSgnL2FwaS9idWxrJywgYnVsa0RlbGV0ZSk7XG5hcHAucGF0Y2goJy9hcGkvYnVsay9zdGF0dXMnLCBidWxrVXBkYXRlU3RhdHVzKTtcblxuYXBwLmdldCgnL2hlYWx0aCcsIChyZXEsIHJlcykgPT4ge1xuICAgIHJlcy5qc29uKHsgc3RhdHVzOiAnb2snIH0pO1xufSk7XG5cbmV4cG9ydCBkZWZhdWx0IGFwcDsgIl0sInZlcnNpb24iOjN9