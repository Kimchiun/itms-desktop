{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/comments/services/commentService.ts","mappings":";;;AACA,yEAAsE;AAEzD,QAAA,cAAc,GAAG;IAC5B,KAAK,CAAC,aAAa,CAAC,IAAqD;QACvE,+CAA+C;QAC/C,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QAC5D,IAAI,CAAC,IAAI,CAAC,MAAM;YAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACpD,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,CAAC,QAAQ;YAAE,MAAM,IAAI,KAAK,CAAC,6BAA6B,CAAC,CAAC;QACvF,OAAO,qCAAiB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;IACxC,CAAC;IACD,KAAK,CAAC,WAAW,CAAC,UAAkB,EAAE,QAAgB;QACpD,OAAO,qCAAiB,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;IAC9D,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,EAAU,EAAE,OAAe,EAAE,QAAkB;QACjE,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE;YAAE,MAAM,IAAI,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACvD,OAAO,qCAAiB,CAAC,MAAM,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;IACzD,CAAC;IACD,KAAK,CAAC,aAAa,CAAC,EAAU;QAC5B,OAAO,qCAAiB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;IACtC,CAAC;CACF,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/comments/services/commentService.ts"],"sourcesContent":["import { Comment } from '../models/Comment';\nimport { commentRepository } from '../repositories/commentRepository';\n\nexport const commentService = {\n  async createComment(data: Omit<Comment, 'id' | 'createdAt' | 'updatedAt'>): Promise<Comment> {\n    // content, author, objectType, objectId 유효성 검사\n    if (!data.content.trim()) throw new Error('댓글 내용이 비어있습니다.');\n    if (!data.author) throw new Error('작성자 정보가 필요합니다.');\n    if (!data.objectType || !data.objectId) throw new Error('objectType/objectId가 필요합니다.');\n    return commentRepository.insert(data);\n  },\n  async getComments(objectType: string, objectId: number): Promise<Comment[]> {\n    return commentRepository.findByObject(objectType, objectId);\n  },\n  async updateComment(id: number, content: string, mentions: string[]): Promise<Comment | null> {\n    if (!content.trim()) throw new Error('댓글 내용이 비어있습니다.');\n    return commentRepository.update(id, content, mentions);\n  },\n  async deleteComment(id: number): Promise<boolean> {\n    return commentRepository.delete(id);\n  },\n}; "],"version":3}