6274dca665cfe1f2b59035c837f28645
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.ensurePgConnected = ensurePgConnected;
exports.testPgConnection = testPgConnection;
exports.getPgClient = getPgClient;
const pg_1 = require("pg");
let pgClient = null;
let isConnected = false;
function createClient() {
    return new pg_1.Client({
        user: process.env.PGUSER || 'postgres',
        host: process.env.PGHOST || 'localhost',
        database: process.env.PGDATABASE || 'quest',
        password: process.env.PGPASSWORD || 'password',
        port: Number(process.env.PGPORT) || 5432,
    });
}
async function ensurePgConnected() {
    if (!isConnected) {
        if (!pgClient) {
            pgClient = createClient();
        }
        await pgClient.connect();
        isConnected = true;
    }
}
async function testPgConnection() {
    try {
        await ensurePgConnected();
        if (pgClient) {
            await pgClient.query('SELECT NOW()');
        }
        return true;
    }
    catch (err) {
        return false;
    }
}
function getPgClient() {
    return pgClient;
}
exports.default = pgClient;
// users 테이블 생성 예시
// CREATE TABLE users (
//   id SERIAL PRIMARY KEY,
//   username VARCHAR(64) UNIQUE NOT NULL,
//   password VARCHAR(128) NOT NULL,
//   role VARCHAR(16) NOT NULL,
//   created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
// ); 
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0Rlc2t0b3AvbXktcHJvamVjdC9zcmMvbWFpbi9hcHAvaW5mcmFzdHJ1Y3R1cmUvZGF0YWJhc2UvcGdDbGllbnQudHMiLCJtYXBwaW5ncyI6Ijs7QUFlQSw4Q0FRQztBQUVELDRDQVVDO0FBRUQsa0NBRUM7QUF2Q0QsMkJBQTRCO0FBRTVCLElBQUksUUFBUSxHQUFrQixJQUFJLENBQUM7QUFDbkMsSUFBSSxXQUFXLEdBQUcsS0FBSyxDQUFDO0FBRXhCLFNBQVMsWUFBWTtJQUNqQixPQUFPLElBQUksV0FBTSxDQUFDO1FBQ2QsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLFVBQVU7UUFDdEMsSUFBSSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsTUFBTSxJQUFJLFdBQVc7UUFDdkMsUUFBUSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLE9BQU87UUFDM0MsUUFBUSxFQUFFLE9BQU8sQ0FBQyxHQUFHLENBQUMsVUFBVSxJQUFJLFVBQVU7UUFDOUMsSUFBSSxFQUFFLE1BQU0sQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLE1BQU0sQ0FBQyxJQUFJLElBQUk7S0FDM0MsQ0FBQyxDQUFDO0FBQ1AsQ0FBQztBQUVNLEtBQUssVUFBVSxpQkFBaUI7SUFDbkMsSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1FBQ2YsSUFBSSxDQUFDLFFBQVEsRUFBRSxDQUFDO1lBQ1osUUFBUSxHQUFHLFlBQVksRUFBRSxDQUFDO1FBQzlCLENBQUM7UUFDRCxNQUFNLFFBQVEsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUN6QixXQUFXLEdBQUcsSUFBSSxDQUFDO0lBQ3ZCLENBQUM7QUFDTCxDQUFDO0FBRU0sS0FBSyxVQUFVLGdCQUFnQjtJQUNsQyxJQUFJLENBQUM7UUFDRCxNQUFNLGlCQUFpQixFQUFFLENBQUM7UUFDMUIsSUFBSSxRQUFRLEVBQUUsQ0FBQztZQUNYLE1BQU0sUUFBUSxDQUFDLEtBQUssQ0FBQyxjQUFjLENBQUMsQ0FBQztRQUN6QyxDQUFDO1FBQ0QsT0FBTyxJQUFJLENBQUM7SUFDaEIsQ0FBQztJQUFDLE9BQU8sR0FBRyxFQUFFLENBQUM7UUFDWCxPQUFPLEtBQUssQ0FBQztJQUNqQixDQUFDO0FBQ0wsQ0FBQztBQUVELFNBQWdCLFdBQVc7SUFDdkIsT0FBTyxRQUFRLENBQUM7QUFDcEIsQ0FBQztBQUVELGtCQUFlLFFBQVEsQ0FBQztBQUV4QixrQkFBa0I7QUFDbEIsdUJBQXVCO0FBQ3ZCLDJCQUEyQjtBQUMzQiwwQ0FBMEM7QUFDMUMsb0NBQW9DO0FBQ3BDLCtCQUErQjtBQUMvQixtREFBbUQ7QUFDbkQsTUFBTSIsIm5hbWVzIjpbXSwic291cmNlcyI6WyIvVXNlcnMvM2ktYTEtMjAyMS0wMTcvRGVza3RvcC9teS1wcm9qZWN0L3NyYy9tYWluL2FwcC9pbmZyYXN0cnVjdHVyZS9kYXRhYmFzZS9wZ0NsaWVudC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDbGllbnQgfSBmcm9tICdwZyc7XG5cbmxldCBwZ0NsaWVudDogQ2xpZW50IHwgbnVsbCA9IG51bGw7XG5sZXQgaXNDb25uZWN0ZWQgPSBmYWxzZTtcblxuZnVuY3Rpb24gY3JlYXRlQ2xpZW50KCkge1xuICAgIHJldHVybiBuZXcgQ2xpZW50KHtcbiAgICAgICAgdXNlcjogcHJvY2Vzcy5lbnYuUEdVU0VSIHx8ICdwb3N0Z3JlcycsXG4gICAgICAgIGhvc3Q6IHByb2Nlc3MuZW52LlBHSE9TVCB8fCAnbG9jYWxob3N0JyxcbiAgICAgICAgZGF0YWJhc2U6IHByb2Nlc3MuZW52LlBHREFUQUJBU0UgfHwgJ3F1ZXN0JyxcbiAgICAgICAgcGFzc3dvcmQ6IHByb2Nlc3MuZW52LlBHUEFTU1dPUkQgfHwgJ3Bhc3N3b3JkJyxcbiAgICAgICAgcG9ydDogTnVtYmVyKHByb2Nlc3MuZW52LlBHUE9SVCkgfHwgNTQzMixcbiAgICB9KTtcbn1cblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGVuc3VyZVBnQ29ubmVjdGVkKCkge1xuICAgIGlmICghaXNDb25uZWN0ZWQpIHtcbiAgICAgICAgaWYgKCFwZ0NsaWVudCkge1xuICAgICAgICAgICAgcGdDbGllbnQgPSBjcmVhdGVDbGllbnQoKTtcbiAgICAgICAgfVxuICAgICAgICBhd2FpdCBwZ0NsaWVudC5jb25uZWN0KCk7XG4gICAgICAgIGlzQ29ubmVjdGVkID0gdHJ1ZTtcbiAgICB9XG59XG5cbmV4cG9ydCBhc3luYyBmdW5jdGlvbiB0ZXN0UGdDb25uZWN0aW9uKCkge1xuICAgIHRyeSB7XG4gICAgICAgIGF3YWl0IGVuc3VyZVBnQ29ubmVjdGVkKCk7XG4gICAgICAgIGlmIChwZ0NsaWVudCkge1xuICAgICAgICAgICAgYXdhaXQgcGdDbGllbnQucXVlcnkoJ1NFTEVDVCBOT1coKScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0UGdDbGllbnQoKSB7XG4gICAgcmV0dXJuIHBnQ2xpZW50O1xufVxuXG5leHBvcnQgZGVmYXVsdCBwZ0NsaWVudDtcblxuLy8gdXNlcnMg7YWM7J2067iUIOyDneyEsSDsmIjsi5xcbi8vIENSRUFURSBUQUJMRSB1c2VycyAoXG4vLyAgIGlkIFNFUklBTCBQUklNQVJZIEtFWSxcbi8vICAgdXNlcm5hbWUgVkFSQ0hBUig2NCkgVU5JUVVFIE5PVCBOVUxMLFxuLy8gICBwYXNzd29yZCBWQVJDSEFSKDEyOCkgTk9UIE5VTEwsXG4vLyAgIHJvbGUgVkFSQ0hBUigxNikgTk9UIE5VTEwsXG4vLyAgIGNyZWF0ZWRfYXQgVElNRVNUQU1QIERFRkFVTFQgQ1VSUkVOVF9USU1FU1RBTVBcbi8vICk7ICJdLCJ2ZXJzaW9uIjozfQ==