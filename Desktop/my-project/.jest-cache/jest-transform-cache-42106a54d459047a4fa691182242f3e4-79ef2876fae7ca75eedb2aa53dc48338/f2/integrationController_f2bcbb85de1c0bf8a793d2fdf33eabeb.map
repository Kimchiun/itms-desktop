{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/executions/controllers/integrationController.ts","mappings":";;AAAA,qCAAoD;AACpD,gFAAkF;AAClF,sFAAwF;AACxF,mEAAgE;AAEhE,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,oCAAoC;AACpC,MAAM,CAAC,IAAI,CAAC,aAAa,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAC7D,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IAC3G,IAAI,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAA,4BAAe,EAAC,EAAE,OAAO,EAAE,WAAW,EAAE,UAAU,EAAE,OAAO,EAAE,QAAQ,EAAE,QAAQ,EAAE,SAAS,EAAE,CAAC,CAAC;QACnH,kBAAkB;QAClB,MAAM,mCAAgB,CAAC,eAAe,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,SAAS,MAAM,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACvG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACjD,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,uCAAuC;AACvC,MAAM,CAAC,IAAI,CAAC,gBAAgB,EAAE,KAAK,EAAE,GAAY,EAAE,GAAa,EAAE,EAAE;IAChE,MAAM,EAAE,WAAW,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,GAAG,GAAG,CAAC,IAAI,CAAC;IACjG,IAAI,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,IAAA,kCAAkB,EAAC,EAAE,OAAO,EAAE,WAAW,EAAE,SAAS,EAAE,UAAU,EAAE,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;QAC5G,kBAAkB;QAClB,MAAM,mCAAgB,CAAC,eAAe,CAAC,WAAW,EAAE,EAAE,OAAO,EAAE,YAAY,MAAM,CAAC,EAAE,KAAK,MAAM,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;QACzG,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,GAAG,CAAC,OAAO,EAAE,CAAC,CAAC;IACjD,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/executions/controllers/integrationController.ts"],"sourcesContent":["import { Router, Request, Response } from 'express';\nimport { createJiraIssue } from '../../../infrastructure/integrations/jiraClient';\nimport { createRedmineIssue } from '../../../infrastructure/integrations/redmineClient';\nimport { executionService } from '../services/executionService';\n\nconst router = Router();\n\n// POST /api/integrations/jira-issue\nrouter.post('/jira-issue', async (req: Request, res: Response) => {\n    const { executionId, summary, description, projectKey, jiraUrl, username, apiToken, issueType } = req.body;\n    try {\n        const result = await createJiraIssue({ summary, description, projectKey, jiraUrl, username, apiToken, issueType });\n        // 실행 기록에 이슈 ID 저장\n        await executionService.updateExecution(executionId, { comment: `[Jira:${result.key}] ${result.url}` });\n        res.json(result);\n    } catch (err: any) {\n        res.status(500).json({ error: err.message });\n    }\n});\n\n// POST /api/integrations/redmine-issue\nrouter.post('/redmine-issue', async (req: Request, res: Response) => {\n    const { executionId, subject, description, projectId, redmineUrl, apiKey, trackerId } = req.body;\n    try {\n        const result = await createRedmineIssue({ subject, description, projectId, redmineUrl, apiKey, trackerId });\n        // 실행 기록에 이슈 ID 저장\n        await executionService.updateExecution(executionId, { comment: `[Redmine:${result.id}] ${result.url}` });\n        res.json(result);\n    } catch (err: any) {\n        res.status(500).json({ error: err.message });\n    }\n});\n\nexport default router; "],"version":3}