{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/defects/services/defectService.ts","mappings":";;;AACA,uEAAoE;AA+B7D,MAAM,YAAY,GAAG,KAAK,EAAE,IAAsB,EAAmB,EAAE;IAC1E,MAAM,MAAM,GAAG,MAAM,mCAAgB,CAAC,MAAM,CAAC;QACzC,GAAG,IAAI;QACP,SAAS,EAAE,IAAI,IAAI,EAAE;QACrB,SAAS,EAAE,IAAI,IAAI,EAAE;KACxB,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AAPW,QAAA,YAAY,gBAOvB;AAEK,MAAM,YAAY,GAAG,KAAK,EAAE,EAAU,EAAE,IAAsB,EAA0B,EAAE;IAC7F,MAAM,MAAM,GAAG,MAAM,mCAAgB,CAAC,MAAM,CAAC,EAAE,EAAE;QAC7C,GAAG,IAAI;QACP,SAAS,EAAE,IAAI,IAAI,EAAE;KACxB,CAAC,CAAC;IACH,OAAO,MAAM,CAAC;AAClB,CAAC,CAAC;AANW,QAAA,YAAY,gBAMvB;AAEK,MAAM,YAAY,GAAG,KAAK,EAAE,EAAU,EAAoB,EAAE;IAC/D,OAAO,MAAM,mCAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC7C,CAAC,CAAC;AAFW,QAAA,YAAY,gBAEvB;AAEK,MAAM,aAAa,GAAG,KAAK,EAAE,EAAU,EAA0B,EAAE;IACtE,OAAO,MAAM,mCAAgB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC/C,CAAC,CAAC;AAFW,QAAA,aAAa,iBAExB;AAEK,MAAM,WAAW,GAAG,KAAK,EAAE,MAAwB,EAKvD,EAAE;IACD,MAAM,EAAE,OAAO,EAAE,KAAK,EAAE,GAAG,MAAM,mCAAgB,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;IAC7E,OAAO;QACH,OAAO;QACP,KAAK;QACL,IAAI,EAAE,MAAM,CAAC,IAAI;QACjB,IAAI,EAAE,MAAM,CAAC,IAAI;KACpB,CAAC;AACN,CAAC,CAAC;AAbW,QAAA,WAAW,eAatB","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/defects/services/defectService.ts"],"sourcesContent":["import { Defect, DefectStatus, DefectPriority } from '../models/Defect';\nimport { defectRepository } from '../repositories/defectRepository';\n\nexport interface CreateDefectData {\n    title: string;\n    description: string;\n    status: DefectStatus;\n    priority: DefectPriority;\n    assignee?: string;\n    reporter: string;\n    createdBy: string;\n    testCaseId?: number;\n    releaseId?: number;\n}\n\nexport interface UpdateDefectData {\n    title?: string;\n    description?: string;\n    status?: DefectStatus;\n    priority?: DefectPriority;\n    assignee?: string;\n    updatedBy: string;\n}\n\nexport interface DefectListParams {\n    page: number;\n    size: number;\n    status?: string;\n    priority?: string;\n    assignee?: string;\n}\n\nexport const createDefect = async (data: CreateDefectData): Promise<Defect> => {\n    const defect = await defectRepository.create({\n        ...data,\n        createdAt: new Date(),\n        updatedAt: new Date()\n    });\n    return defect;\n};\n\nexport const updateDefect = async (id: number, data: UpdateDefectData): Promise<Defect | null> => {\n    const defect = await defectRepository.update(id, {\n        ...data,\n        updatedAt: new Date()\n    });\n    return defect;\n};\n\nexport const deleteDefect = async (id: number): Promise<boolean> => {\n    return await defectRepository.delete(id);\n};\n\nexport const getDefectById = async (id: number): Promise<Defect | null> => {\n    return await defectRepository.findById(id);\n};\n\nexport const listDefects = async (params: DefectListParams): Promise<{\n    defects: Defect[];\n    total: number;\n    page: number;\n    size: number;\n}> => {\n    const { defects, total } = await defectRepository.findWithPagination(params);\n    return {\n        defects,\n        total,\n        page: params.page,\n        size: params.size\n    };\n}; "],"version":3}