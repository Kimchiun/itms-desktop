{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/app/App.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/app/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { HashRouter as Router, Route, Routes, Link, useNavigate, Navigate } from 'react-router-dom';\nimport { Provider, useSelector, useDispatch } from 'react-redux';\nimport { store, RootState } from '../store';\nimport TestCaseList from '../features/TestCaseManagement/components/TestCaseList';\nimport ReleaseBoard from '../features/ReleasePlanning/components/ReleaseBoard';\nimport DashboardContainer from '../features/Dashboard/components/DashboardContainer';\nimport FolderManagementPage from '../features/FolderManagement/components/FolderManagementPage';\nimport NotificationBadge from '../features/ExecutionManagement/components/NotificationBadge';\nimport { ThemeProvider, createGlobalStyle } from 'styled-components';\nimport { theme } from '../shared/theme';\nimport GlobalStyle from '../shared/GlobalStyle';\nimport Icon from '../shared/components/Icon';\nimport LoginPage from '../features/Login/LoginPage';\nimport ReleaseSelection from '../features/ReleasePlanning/components/ReleaseSelection';\n\nconst SkipLinkStyle = createGlobalStyle`\n  .skip-link {\n    position: absolute;\n    left: -9999px;\n    top: auto;\n    width: 1px;\n    height: 1px;\n    overflow: hidden;\n    z-index: 10000;\n    background: #2563eb;\n    color: #fff;\n    font-weight: bold;\n    border-radius: 4px;\n    padding: 8px 16px;\n    transition: left 0.2s;\n  }\n  .skip-link:focus {\n    left: 16px;\n    top: 16px;\n    width: auto;\n    height: auto;\n    outline: 2px solid #fff;\n  }\n`;\n\nconst AppRoutes: React.FC<{ isLoggedIn: boolean; onLogin: () => void }> = ({ isLoggedIn, onLogin }) => {\n  const navigate = useNavigate();\n  return (\n    <>\n      <a href=\"#main-content\" className=\"skip-link\">본문 바로가기</a>\n      <nav style={{ padding: 16, borderBottom: '1px solid #eee', marginBottom: 24, display: 'flex', alignItems: 'center', justifyContent: 'space-between' }} aria-label=\"주요 메뉴\">\n        <div>\n          <Link to=\"/dashboard\" style={{ marginRight: 16 }}>Dashboard</Link>\n          <Link to=\"/testcases\" style={{ marginRight: 16 }}>테스트케이스</Link>\n          <Link to=\"/folders\" style={{ marginRight: 16 }}>폴더 관리</Link>\n          <Link to=\"/releases\" style={{ marginRight: 16 }}>릴리즈 관리</Link>\n          {/* 다른 메뉴 추가 가능 */}\n        </div>\n        <div style={{ display: 'flex', alignItems: 'center', gap: 16 }}>\n          <Icon name=\"logo\" size={32} />\n          <NotificationBadge />\n        </div>\n      </nav>\n      <main id=\"main-content\" role=\"main\" aria-label=\"주요 컨텐츠\">\n        <Routes>\n          <Route path=\"/login\" element={<LoginPage onLogin={() => { onLogin(); navigate('/dashboard'); }} />} />\n          <Route path=\"/dashboard\" element={isLoggedIn ? <DashboardContainer /> : <Navigate to=\"/login\" replace />} />\n          <Route path=\"/dashboard/:releaseId\" element={isLoggedIn ? <DashboardContainer /> : <Navigate to=\"/login\" replace />} />\n          <Route path=\"/releases\" element={isLoggedIn ? <ReleaseSelection /> : <Navigate to=\"/login\" replace />} />\n          <Route path=\"/testcases\" element={isLoggedIn ? <TestCaseList /> : <Navigate to=\"/login\" replace />} />\n          <Route path=\"/folders\" element={isLoggedIn ? <FolderManagementPage /> : <Navigate to=\"/login\" replace />} />\n          <Route path=\"/\" element={<Navigate to=\"/dashboard\" replace />} />\n          {/* 다른 라우트 추가 가능 */}\n        </Routes>\n      </main>\n    </>\n  );\n};\n\nconst AppInner: React.FC = () => {\n  const isLoggedIn = useSelector((state: RootState) => state.users.isLoggedIn);\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      <SkipLinkStyle />\n      <Router>\n        <AppRoutes isLoggedIn={isLoggedIn} onLogin={() => {}} />\n      </Router>\n    </ThemeProvider>\n  );\n};\n\nconst App: React.FC = () => (\n  <Provider store={store}>\n    <AppInner />\n  </Provider>\n);\n\nexport default App; "],"version":3}