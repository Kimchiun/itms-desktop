b0a8a19b34e14dc207e0c534bd1a845b
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.executionService = void 0;
const executionRepository_1 = require("../repositories/executionRepository");
exports.executionService = {
    async createExecution(data) {
        // 상태 유효성 검사
        if (!['Pass', 'Fail', 'Blocked', 'Untested'].includes(data.status)) {
            throw new Error('Invalid execution status');
        }
        // 파일 경로 등 추가 비즈니스 로직 필요시 삽입
        return executionRepository_1.executionRepository.insert(data);
    },
    async getExecutionById(id) {
        return executionRepository_1.executionRepository.findById(id);
    },
    async getExecutionsByTestCase(testcaseId) {
        return executionRepository_1.executionRepository.findByTestCase(testcaseId);
    },
    async updateExecution(id, update) {
        if (update.status && !['Pass', 'Fail', 'Blocked', 'Untested'].includes(update.status)) {
            throw new Error('Invalid execution status');
        }
        return executionRepository_1.executionRepository.update(id, update);
    },
    async deleteExecution(id) {
        await executionRepository_1.executionRepository.delete(id);
    }
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0Rlc2t0b3AvbXktcHJvamVjdC9zcmMvbWFpbi9hcHAvZG9tYWlucy9leGVjdXRpb25zL3NlcnZpY2VzL2V4ZWN1dGlvblNlcnZpY2UudHMiLCJtYXBwaW5ncyI6Ijs7O0FBQ0EsNkVBQTBFO0FBRTdELFFBQUEsZ0JBQWdCLEdBQUc7SUFDNUIsS0FBSyxDQUFDLGVBQWUsQ0FBQyxJQUF1RDtRQUN6RSxZQUFZO1FBQ1osSUFBSSxDQUFDLENBQUMsTUFBTSxFQUFFLE1BQU0sRUFBRSxTQUFTLEVBQUUsVUFBVSxDQUFDLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsRUFBRSxDQUFDO1lBQ2pFLE1BQU0sSUFBSSxLQUFLLENBQUMsMEJBQTBCLENBQUMsQ0FBQztRQUNoRCxDQUFDO1FBQ0QsNEJBQTRCO1FBQzVCLE9BQU8seUNBQW1CLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQzVDLENBQUM7SUFFRCxLQUFLLENBQUMsZ0JBQWdCLENBQUMsRUFBVTtRQUM3QixPQUFPLHlDQUFtQixDQUFDLFFBQVEsQ0FBQyxFQUFFLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQsS0FBSyxDQUFDLHVCQUF1QixDQUFDLFVBQWtCO1FBQzVDLE9BQU8seUNBQW1CLENBQUMsY0FBYyxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQzFELENBQUM7SUFFRCxLQUFLLENBQUMsZUFBZSxDQUFDLEVBQVUsRUFBRSxNQUFvRDtRQUNsRixJQUFJLE1BQU0sQ0FBQyxNQUFNLElBQUksQ0FBQyxDQUFDLE1BQU0sRUFBRSxNQUFNLEVBQUUsU0FBUyxFQUFFLFVBQVUsQ0FBQyxDQUFDLFFBQVEsQ0FBQyxNQUFNLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQztZQUNwRixNQUFNLElBQUksS0FBSyxDQUFDLDBCQUEwQixDQUFDLENBQUM7UUFDaEQsQ0FBQztRQUNELE9BQU8seUNBQW1CLENBQUMsTUFBTSxDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUNsRCxDQUFDO0lBRUQsS0FBSyxDQUFDLGVBQWUsQ0FBQyxFQUFVO1FBQzVCLE1BQU0seUNBQW1CLENBQUMsTUFBTSxDQUFDLEVBQUUsQ0FBQyxDQUFDO0lBQ3pDLENBQUM7Q0FDSixDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy8zaS1hMS0yMDIxLTAxNy9EZXNrdG9wL215LXByb2plY3Qvc3JjL21haW4vYXBwL2RvbWFpbnMvZXhlY3V0aW9ucy9zZXJ2aWNlcy9leGVjdXRpb25TZXJ2aWNlLnRzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEV4ZWN1dGlvbiB9IGZyb20gJy4uL21vZGVscy9FeGVjdXRpb24nO1xuaW1wb3J0IHsgZXhlY3V0aW9uUmVwb3NpdG9yeSB9IGZyb20gJy4uL3JlcG9zaXRvcmllcy9leGVjdXRpb25SZXBvc2l0b3J5JztcblxuZXhwb3J0IGNvbnN0IGV4ZWN1dGlvblNlcnZpY2UgPSB7XG4gICAgYXN5bmMgY3JlYXRlRXhlY3V0aW9uKGRhdGE6IE9taXQ8RXhlY3V0aW9uLCAnaWQnIHwgJ2NyZWF0ZWRBdCcgfCAndXBkYXRlZEF0Jz4pOiBQcm9taXNlPEV4ZWN1dGlvbj4ge1xuICAgICAgICAvLyDsg4Htg5wg7Jyg7Zqo7ISxIOqygOyCrFxuICAgICAgICBpZiAoIVsnUGFzcycsICdGYWlsJywgJ0Jsb2NrZWQnLCAnVW50ZXN0ZWQnXS5pbmNsdWRlcyhkYXRhLnN0YXR1cykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBleGVjdXRpb24gc3RhdHVzJyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8g7YyM7J28IOqyveuhnCDrk7Eg7LaU6rCAIOu5hOymiOuLiOyKpCDroZzsp4Eg7ZWE7JqU7IucIOyCveyehVxuICAgICAgICByZXR1cm4gZXhlY3V0aW9uUmVwb3NpdG9yeS5pbnNlcnQoZGF0YSk7XG4gICAgfSxcblxuICAgIGFzeW5jIGdldEV4ZWN1dGlvbkJ5SWQoaWQ6IG51bWJlcik6IFByb21pc2U8RXhlY3V0aW9uIHwgbnVsbD4ge1xuICAgICAgICByZXR1cm4gZXhlY3V0aW9uUmVwb3NpdG9yeS5maW5kQnlJZChpZCk7XG4gICAgfSxcblxuICAgIGFzeW5jIGdldEV4ZWN1dGlvbnNCeVRlc3RDYXNlKHRlc3RjYXNlSWQ6IG51bWJlcik6IFByb21pc2U8RXhlY3V0aW9uW10+IHtcbiAgICAgICAgcmV0dXJuIGV4ZWN1dGlvblJlcG9zaXRvcnkuZmluZEJ5VGVzdENhc2UodGVzdGNhc2VJZCk7XG4gICAgfSxcblxuICAgIGFzeW5jIHVwZGF0ZUV4ZWN1dGlvbihpZDogbnVtYmVyLCB1cGRhdGU6IFBhcnRpYWw8T21pdDxFeGVjdXRpb24sICdpZCcgfCAnY3JlYXRlZEF0Jz4+KTogUHJvbWlzZTxFeGVjdXRpb24gfCBudWxsPiB7XG4gICAgICAgIGlmICh1cGRhdGUuc3RhdHVzICYmICFbJ1Bhc3MnLCAnRmFpbCcsICdCbG9ja2VkJywgJ1VudGVzdGVkJ10uaW5jbHVkZXModXBkYXRlLnN0YXR1cykpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignSW52YWxpZCBleGVjdXRpb24gc3RhdHVzJyk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGV4ZWN1dGlvblJlcG9zaXRvcnkudXBkYXRlKGlkLCB1cGRhdGUpO1xuICAgIH0sXG5cbiAgICBhc3luYyBkZWxldGVFeGVjdXRpb24oaWQ6IG51bWJlcik6IFByb21pc2U8dm9pZD4ge1xuICAgICAgICBhd2FpdCBleGVjdXRpb25SZXBvc2l0b3J5LmRlbGV0ZShpZCk7XG4gICAgfVxufTsgIl0sInZlcnNpb24iOjN9