{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/release.suite.api.test.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/release.suite.api.test.ts"],"sourcesContent":["(global as any).setImmediate = ((fn: any, ...args: any[]) => setTimeout(fn, 0, ...args)) as any;\nif (typeof global.ReadableStream === 'undefined') {\n  global.ReadableStream = require('stream').Readable;\n}\n(global as any).TextEncoder = require('util').TextEncoder;\n(global as any).TextDecoder = require('util').TextDecoder;\nconst request = require('supertest');\nconst app = require('../src/main/app/app').default;\nconst pgClient = require('../src/main/app/infrastructure/database/pgClient').default;\nconst ensurePgConnected = require('../src/main/app/infrastructure/database/pgClient').ensurePgConnected;\n\ndescribe('릴리즈/스위트/케이스 할당 API', () => {\n  let releaseId: number;\n  let suiteId: number;\n  let testcaseId: number;\n\n  beforeAll(async () => {\n    await ensurePgConnected();\n    await pgClient.query('DELETE FROM suite_cases');\n    await pgClient.query('DELETE FROM suites');\n    await pgClient.query('DELETE FROM releases');\n    await pgClient.query('DELETE FROM testcases');\n    // 테스트케이스 생성\n    const tcRes = await pgClient.query(\n      `INSERT INTO testcases (title, steps, expected, priority, tags, status, created_by) VALUES ('TC', '[]', 'ok', 'High', '{}', 'Active', 'tester') RETURNING id`\n    );\n    testcaseId = tcRes.rows[0].id;\n  });\n\n  it('릴리즈 생성', async () => {\n    const res = await request(app).post('/api/releases').send({ name: 'R1', description: '릴리즈1' });\n    expect(res.status).toBe(201);\n    releaseId = res.body.id;\n  });\n\n  it('스위트 생성', async () => {\n    const res = await request(app).post(`/api/releases/${releaseId}/suites`).send({ name: 'S1', description: '스위트1' });\n    expect(res.status).toBe(201);\n    suiteId = res.body.id;\n  });\n\n  it('테스트케이스 할당', async () => {\n    const res = await request(app).post(`/api/releases/suites/${suiteId}/cases/${testcaseId}`);\n    expect(res.status).toBe(204);\n  });\n\n  it('스위트별 케이스 목록', async () => {\n    const res = await request(app).get(`/api/releases/suites/${suiteId}/cases`);\n    expect(res.status).toBe(200);\n    expect(res.body).toContain(testcaseId);\n  });\n\n  it('테스트케이스 할당 해제', async () => {\n    const res = await request(app).delete(`/api/releases/suites/${suiteId}/cases/${testcaseId}`);\n    expect(res.status).toBe(204);\n  });\n\n  afterAll(async () => {\n    await pgClient.query('DELETE FROM suite_cases');\n    await pgClient.query('DELETE FROM suites');\n    await pgClient.query('DELETE FROM releases');\n    await pgClient.end();\n  });\n}); "],"version":3}