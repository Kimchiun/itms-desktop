{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/components/NotificationBadge.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/components/NotificationBadge.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { useAppSelector, useAppDispatch } from '../store/hooks';\nimport { RootState } from '@/renderer/store';\nimport { markAsRead, markAllAsRead } from '../store/notificationSlice';\nimport Notification from '../../../shared/components/Notification';\n\nconst NotificationBadge: React.FC = () => {\n  const dispatch = useAppDispatch();\n  const notifications = useAppSelector((state: RootState) => state.notifications.notifications);\n  const unreadCount = notifications.filter((n: any) => !n.read).length;\n  const [open, setOpen] = useState(false);\n\n  const handleOpen = () => setOpen(true);\n  const handleClose = () => setOpen(false);\n  const handleMarkAsRead = (id: string) => dispatch(markAsRead(id));\n  const handleMarkAll = () => dispatch(markAllAsRead());\n\n  return (\n    <div style={{ position: 'relative', display: 'inline-block' }}>\n      <button onClick={handleOpen} style={{ position: 'relative' }}>\n        🔔\n        {unreadCount > 0 && (\n          <span style={{ position: 'absolute', top: -6, right: -6, background: 'red', color: 'white', borderRadius: '50%', padding: '2px 6px', fontSize: 12 }}>\n            {unreadCount}\n          </span>\n        )}\n      </button>\n      {open && (\n        <div style={{ position: 'absolute', right: 0, top: 32, width: 340, background: '#fff', border: '1px solid #ccc', borderRadius: 8, boxShadow: '0 2px 8px rgba(0,0,0,0.15)', zIndex: 100 }}>\n          <div style={{ padding: 12, borderBottom: '1px solid #eee', display: 'flex', justifyContent: 'space-between', alignItems: 'center' }}>\n            <b>알림</b>\n            <button onClick={handleMarkAll} style={{ fontSize: 12 }}>모두 읽음</button>\n            <button onClick={handleClose} style={{ fontSize: 12 }}>닫기</button>\n          </div>\n          <ul style={{ listStyle: 'none', margin: 0, padding: 0, maxHeight: 320, overflowY: 'auto' }}>\n            {notifications.length === 0 && <li style={{ padding: 16, color: '#888' }}>알림 없음</li>}\n            {notifications.map((n: any) => (\n              <li key={n.id} style={{ padding: 8, background: n.read ? '#f5f5f5' : '#e3f2fd', borderBottom: '1px solid #eee', cursor: 'pointer' }}\n                  onClick={() => handleMarkAsRead(n.id)}>\n                <Notification type={n.type}>{n.message}</Notification>\n                <div style={{ fontSize: 12, color: '#888', marginTop: 4 }}>{new Date(n.createdAt).toLocaleString()}</div>\n              </li>\n            ))}\n          </ul>\n        </div>\n      )}\n    </div>\n  );\n};\n\nexport default NotificationBadge; "],"version":3}