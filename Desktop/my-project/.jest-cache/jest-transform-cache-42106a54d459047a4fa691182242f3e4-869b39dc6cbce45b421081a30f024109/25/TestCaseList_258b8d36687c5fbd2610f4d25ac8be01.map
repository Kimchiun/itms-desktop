{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/components/TestCaseList.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/components/TestCaseList.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\nimport { TestCase } from '../store/testCaseSlice';\nimport { selectTestCase, deselectTestCase, selectAllTestCases, deselectAllTestCases } from '../store/selectionSlice';\nimport EditableCell from '../../../shared/components/EditableCell';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 20px;\n  padding: 16px;\n  background-color: #f8fafc;\n  border-radius: 8px;\n`;\n\nconst SelectionInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 12px;\n  font-size: 14px;\n  color: #64748b;\n`;\n\nconst SelectAllCheckbox = styled.input`\n  width: 18px;\n  height: 18px;\n  cursor: pointer;\n  accent-color: #3b82f6;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background-color: white;\n  border-radius: 8px;\n  overflow: hidden;\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);\n`;\n\nconst Th = styled.th`\n  padding: 12px 16px;\n  text-align: left;\n  background-color: #f1f5f9;\n  font-weight: 600;\n  color: #374151;\n  border-bottom: 1px solid #e5e7eb;\n  \n  &:first-child {\n    width: 50px;\n  }\n`;\n\nconst Td = styled.td`\n  padding: 12px 16px;\n  border-bottom: 1px solid #f3f4f6;\n  vertical-align: middle;\n  \n  &:first-child {\n    width: 50px;\n    text-align: center;\n  }\n`;\n\nconst Row = styled.tr<{ isSelected: boolean }>`\n  background-color: ${props => props.isSelected ? '#eff6ff' : 'white'};\n  \n  &:hover {\n    background-color: ${props => props.isSelected ? '#dbeafe' : '#f9fafb'};\n  }\n`;\n\nconst Checkbox = styled.input`\n  width: 16px;\n  height: 16px;\n  cursor: pointer;\n  accent-color: #3b82f6;\n`;\n\nconst StatusBadge = styled.span<{ status: string }>`\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    switch (props.status) {\n      case 'Active': return '#dcfce7';\n      case 'Inactive': return '#fef2f2';\n      default: return '#f3f4f6';\n    }\n  }};\n  color: ${props => {\n    switch (props.status) {\n      case 'Active': return '#166534';\n      case 'Inactive': return '#dc2626';\n      default: return '#6b7280';\n    }\n  }};\n`;\n\nconst PriorityBadge = styled.span<{ priority: string }>`\n  padding: 4px 8px;\n  border-radius: 12px;\n  font-size: 12px;\n  font-weight: 500;\n  background-color: ${props => {\n    switch (props.priority) {\n      case 'High': return '#fef2f2';\n      case 'Medium': return '#fffbeb';\n      case 'Low': return '#f0fdf4';\n      default: return '#f3f4f6';\n    }\n  }};\n  color: ${props => {\n    switch (props.priority) {\n      case 'High': return '#dc2626';\n      case 'Medium': return '#d97706';\n      case 'Low': return '#16a34a';\n      default: return '#6b7280';\n    }\n  }};\n`;\n\nconst TestCaseList: React.FC = () => {\n  const dispatch = useDispatch();\n  const testCases = useSelector((state: RootState) => state.testcases.list) || [];\n  const { selectedTestCases = [] } = useSelector((state: RootState) => state.selection);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    // 테스트 케이스 데이터 로드\n    setLoading(false);\n  }, []);\n\n  const handleSelectAll = () => {\n    if (selectedTestCases.length === testCases.length) {\n      dispatch(deselectAllTestCases());\n    } else {\n      const allTestCaseIds = testCases.map((tc: TestCase) => tc.id);\n      dispatch(selectAllTestCases(allTestCaseIds));\n    }\n  };\n\n  const handleSelectTestCase = (testCaseId: number, index: number, isShiftKey: boolean) => {\n    dispatch(selectTestCase({ id: testCaseId, index, isShiftKey }));\n  };\n\n  const handleDeselectTestCase = (testCaseId: number) => {\n    dispatch(deselectTestCase(testCaseId));\n  };\n\n  const handleSaveField = (testCaseId: number, field: string, value: any) => {\n    // 필드 저장 로직\n    console.log('Saving field:', { testCaseId, field, value });\n  };\n\n  const handleBulkEdit = () => {\n    // 일괄 편집 로직\n    console.log('Bulk edit for:', selectedTestCases);\n  };\n\n  if (loading) {\n    return <div>로딩 중...</div>;\n  }\n\n  return (\n    <Container>\n      <Header>\n        <div>\n          <h2>테스트케이스 목록</h2>\n          {selectedTestCases.length > 0 && (\n            <SelectionInfo>\n              <span>{selectedTestCases.length}개 선택됨</span>\n              <button onClick={handleBulkEdit}>일괄 편집</button>\n            </SelectionInfo>\n          )}\n        </div>\n      </Header>\n\n      <Table>\n        <thead>\n          <tr>\n            <Th>\n              <SelectAllCheckbox\n                type=\"checkbox\"\n                checked={selectedTestCases.length === testCases.length && testCases.length > 0}\n                onChange={handleSelectAll}\n              />\n            </Th>\n            <Th>제목</Th>\n            <Th>상태</Th>\n            <Th>우선순위</Th>\n            <Th>생성자</Th>\n            <Th>생성일</Th>\n          </tr>\n        </thead>\n        <tbody>\n          {testCases.map((testCase: TestCase, index: number) => (\n            <Row key={testCase.id} isSelected={selectedTestCases.includes(testCase.id)}>\n              <Td>\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={selectedTestCases.includes(testCase.id)}\n                  onChange={(e) => {\n                    if (e.target.checked) {\n                      handleSelectTestCase(testCase.id, index, false);\n                    } else {\n                      handleDeselectTestCase(testCase.id);\n                    }\n                  }}\n                  onClick={(e) => {\n                    if (e.shiftKey) {\n                      e.preventDefault();\n                      handleSelectTestCase(testCase.id, index, true);\n                    }\n                  }}\n                />\n              </Td>\n              <Td>\n                <EditableCell\n                  value={testCase.title}\n                  onSave={(value) => handleSaveField(testCase.id, 'title', value)}\n                  type=\"text\"\n                />\n              </Td>\n              <Td>\n                <EditableCell\n                  value={testCase.status}\n                  onSave={(value) => handleSaveField(testCase.id, 'status', value)}\n                  type=\"select\"\n                  options={[\n                    { value: 'Active', label: 'Active' },\n                    { value: 'Inactive', label: 'Inactive' }\n                  ]}\n                />\n              </Td>\n              <Td>\n                <EditableCell\n                  value={testCase.priority}\n                  onSave={(value) => handleSaveField(testCase.id, 'priority', value)}\n                  type=\"select\"\n                  options={[\n                    { value: 'High', label: 'High' },\n                    { value: 'Medium', label: 'Medium' },\n                    { value: 'Low', label: 'Low' }\n                  ]}\n                />\n              </Td>\n              <Td>\n                <EditableCell\n                  value={testCase.createdBy}\n                  onSave={(value) => handleSaveField(testCase.id, 'createdBy', value)}\n                  type=\"text\"\n                />\n              </Td>\n              <Td>\n                {new Date(testCase.createdAt).toLocaleDateString()}\n              </Td>\n            </Row>\n          ))}\n        </tbody>\n      </Table>\n    </Container>\n  );\n};\n\nexport default TestCaseList; "],"version":3}