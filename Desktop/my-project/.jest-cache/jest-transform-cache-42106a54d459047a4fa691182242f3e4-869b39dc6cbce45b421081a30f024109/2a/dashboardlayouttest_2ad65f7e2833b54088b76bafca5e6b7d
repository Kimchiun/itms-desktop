b9f661f2113c7a6bc9077114bedc92f4
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("@testing-library/react");
const react_redux_1 = require("react-redux");
const styled_components_1 = require("styled-components");
const toolkit_1 = require("@reduxjs/toolkit");
const DashboardLayout_1 = __importDefault(require("../src/renderer/features/Dashboard/components/DashboardLayout"));
const dashboardLayoutSlice_1 = __importDefault(require("../src/renderer/store/dashboardLayoutSlice"));
const theme_1 = require("../src/renderer/shared/theme");
// 테스트용 스토어 설정
const createTestStore = (initialState = {}) => {
    return (0, toolkit_1.configureStore)({
        reducer: {
            dashboardLayout: dashboardLayoutSlice_1.default
        },
        preloadedState: {
            dashboardLayout: {
                leftPanel: { isCollapsed: false, width: 280 },
                rightPanel: { isCollapsed: false, width: 320 },
                centerPanel: { isFullWidth: false },
                activeTab: 'overview',
                ...initialState
            }
        }
    });
};
// 컴포넌트 렌더링 헬퍼
const renderDashboardLayout = (initialState = {}) => {
    const store = createTestStore(initialState);
    const result = (0, react_1.render)((0, jsx_runtime_1.jsx)(react_redux_1.Provider, { store: store, children: (0, jsx_runtime_1.jsx)(styled_components_1.ThemeProvider, { theme: theme_1.theme, children: (0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}) }) }));
    return { ...result, store };
};
describe('DashboardLayout - 3분할 레이아웃', () => {
    describe('기본 렌더링 테스트', () => {
        it('3분할 레이아웃이 정상적으로 렌더링되어야 함', () => {
            renderDashboardLayout();
            // 좌측 패널 확인
            expect(react_1.screen.getByText('ITMS')).toBeInTheDocument();
            expect(react_1.screen.getByText('대시보드')).toBeInTheDocument();
            expect(react_1.screen.getByText('테스트 케이스')).toBeInTheDocument();
            // 중앙 패널 확인
            expect(react_1.screen.getByText('대시보드')).toBeInTheDocument();
            expect(react_1.screen.getByText('프로젝트 현황 및 최근 활동을 확인하세요')).toBeInTheDocument();
            // 우측 패널 확인
            expect(react_1.screen.getByText('개인 작업')).toBeInTheDocument();
            expect(react_1.screen.getByText('내 작업 목록')).toBeInTheDocument();
        });
        it('모든 패널이 기본 상태로 표시되어야 함', () => {
            renderDashboardLayout();
            // 좌측 패널 토글 버튼
            const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
            expect(leftToggleButton).toBeInTheDocument();
            // 우측 패널 토글 버튼
            const rightToggleButton = react_1.screen.getByRole('button', { name: /→/ });
            expect(rightToggleButton).toBeInTheDocument();
        });
    });
    describe('패널 토글 기능 테스트', () => {
        it('좌측 패널 토글 버튼 클릭 시 패널이 축소되어야 함', async () => {
            renderDashboardLayout();
            const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
            react_1.fireEvent.click(leftToggleButton);
            await (0, react_1.waitFor)(() => {
                // 축소된 상태의 토글 버튼 확인
                expect(react_1.screen.getByRole('button', { name: /→/ })).toBeInTheDocument();
            });
        });
        it('우측 패널 토글 버튼 클릭 시 패널이 축소되어야 함', async () => {
            renderDashboardLayout();
            const rightToggleButton = react_1.screen.getByRole('button', { name: /→/ });
            react_1.fireEvent.click(rightToggleButton);
            await (0, react_1.waitFor)(() => {
                // 축소된 상태의 토글 버튼 확인
                expect(react_1.screen.getByRole('button', { name: /←/ })).toBeInTheDocument();
            });
        });
        it('축소된 패널을 다시 토글하면 확장되어야 함', async () => {
            renderDashboardLayout({
                leftPanel: { isCollapsed: true, width: 280 },
                rightPanel: { isCollapsed: true, width: 320 }
            });
            // 좌측 패널 확장
            const leftToggleButton = react_1.screen.getByRole('button', { name: /→/ });
            react_1.fireEvent.click(leftToggleButton);
            await (0, react_1.waitFor)(() => {
                expect(react_1.screen.getByText('ITMS')).toBeInTheDocument();
            });
            // 우측 패널 확장
            const rightToggleButton = react_1.screen.getByRole('button', { name: /←/ });
            react_1.fireEvent.click(rightToggleButton);
            await (0, react_1.waitFor)(() => {
                expect(react_1.screen.getByText('개인 작업')).toBeInTheDocument();
            });
        });
    });
    describe('반응형 레이아웃 테스트', () => {
        it('다양한 화면 크기에서 레이아웃이 정상적으로 표시되어야 함', () => {
            // 1280x720 해상도 시뮬레이션
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 1280,
            });
            Object.defineProperty(window, 'innerHeight', {
                writable: true,
                configurable: true,
                value: 720,
            });
            renderDashboardLayout();
            // 레이아웃 컨테이너가 존재하는지 확인
            const layoutContainer = document.querySelector('[style*="grid-template-columns"]');
            expect(layoutContainer).toBeInTheDocument();
        });
        it('1920x1080 해상도에서도 정상 동작해야 함', () => {
            // 1920x1080 해상도 시뮬레이션
            Object.defineProperty(window, 'innerWidth', {
                writable: true,
                configurable: true,
                value: 1920,
            });
            Object.defineProperty(window, 'innerHeight', {
                writable: true,
                configurable: true,
                value: 1080,
            });
            renderDashboardLayout();
            // 모든 패널이 정상적으로 렌더링되는지 확인
            expect(react_1.screen.getByText('ITMS')).toBeInTheDocument();
            expect(react_1.screen.getByText('대시보드')).toBeInTheDocument();
            expect(react_1.screen.getByText('개인 작업')).toBeInTheDocument();
        });
    });
    describe('접근성 테스트', () => {
        it('키보드로 모든 토글 버튼에 접근할 수 있어야 함', () => {
            renderDashboardLayout();
            // Tab 키로 포커스 이동
            const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
            const rightToggleButton = react_1.screen.getByRole('button', { name: /→/ });
            leftToggleButton.focus();
            expect(leftToggleButton).toHaveFocus();
            // Enter 키로 토글 동작
            react_1.fireEvent.keyDown(leftToggleButton, { key: 'Enter', code: 'Enter' });
            rightToggleButton.focus();
            expect(rightToggleButton).toHaveFocus();
            react_1.fireEvent.keyDown(rightToggleButton, { key: 'Enter', code: 'Enter' });
        });
        it('스크린 리더가 레이아웃 구조를 인식할 수 있어야 함', () => {
            renderDashboardLayout();
            // 랜드마크 역할 확인
            const mainContent = react_1.screen.getByRole('main') || document.querySelector('main');
            expect(mainContent).toBeInTheDocument();
            // 네비게이션 영역 확인
            const navigation = react_1.screen.getByRole('navigation') || document.querySelector('nav');
            expect(navigation).toBeInTheDocument();
        });
    });
    describe('성능 테스트', () => {
        it('패널 토글 시 애니메이션이 부드럽게 동작해야 함', async () => {
            const startTime = performance.now();
            renderDashboardLayout();
            const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
            react_1.fireEvent.click(leftToggleButton);
            // 애니메이션 완료 대기 (300ms)
            await (0, react_1.waitFor)(() => {
                const endTime = performance.now();
                expect(endTime - startTime).toBeLessThan(500); // 500ms 이내 완료
            }, { timeout: 1000 });
        });
        it('대량의 데이터가 있어도 렌더링 성능이 유지되어야 함', () => {
            const renderStart = performance.now();
            renderDashboardLayout();
            const renderEnd = performance.now();
            // 초기 렌더링이 100ms 이내에 완료되어야 함
            expect(renderEnd - renderStart).toBeLessThan(100);
        });
    });
    describe('상태 관리 테스트', () => {
        it('Redux 스토어의 상태가 UI와 동기화되어야 함', () => {
            const { store } = renderDashboardLayout();
            // 초기 상태 확인
            let state = store.getState();
            expect(state.dashboardLayout.leftPanel.isCollapsed).toBe(false);
            expect(state.dashboardLayout.rightPanel.isCollapsed).toBe(false);
            // 좌측 패널 토글
            const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
            react_1.fireEvent.click(leftToggleButton);
            // 상태 변경 확인
            state = store.getState();
            expect(state.dashboardLayout.leftPanel.isCollapsed).toBe(true);
        });
        it('패널 너비 설정이 정상적으로 동작해야 함', () => {
            const { store } = renderDashboardLayout({
                leftPanel: { isCollapsed: false, width: 300 },
                rightPanel: { isCollapsed: false, width: 350 }
            });
            const state = store.getState();
            expect(state.dashboardLayout.leftPanel.width).toBe(300);
            expect(state.dashboardLayout.rightPanel.width).toBe(350);
        });
    });
    describe('에러 처리 테스트', () => {
        it('잘못된 상태로 렌더링되어도 에러가 발생하지 않아야 함', () => {
            // 잘못된 초기 상태로 렌더링
            expect(() => {
                renderDashboardLayout({
                    leftPanel: { isCollapsed: null, width: -100 },
                    rightPanel: { isCollapsed: undefined, width: 0 }
                });
            }).not.toThrow();
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,