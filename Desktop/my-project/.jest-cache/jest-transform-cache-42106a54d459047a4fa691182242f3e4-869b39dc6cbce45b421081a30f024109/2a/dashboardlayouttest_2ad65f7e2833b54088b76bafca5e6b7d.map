{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/dashboard.layout.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/dashboard.layout.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { configureStore } from '@reduxjs/toolkit';\nimport DashboardLayout from '../src/renderer/features/Dashboard/components/DashboardLayout';\nimport dashboardLayoutReducer from '../src/renderer/store/dashboardLayoutSlice';\nimport { theme } from '../src/renderer/shared/theme';\n\n// 테스트용 스토어 설정\nconst createTestStore = (initialState = {}) => {\n  return configureStore({\n    reducer: {\n      dashboardLayout: dashboardLayoutReducer\n    },\n    preloadedState: {\n      dashboardLayout: {\n        leftPanel: { isCollapsed: false, width: 280 },\n        rightPanel: { isCollapsed: false, width: 320 },\n        centerPanel: { isFullWidth: false },\n        activeTab: 'overview',\n        ...initialState\n      }\n    }\n  });\n};\n\n// 컴포넌트 렌더링 헬퍼\nconst renderDashboardLayout = (initialState = {}) => {\n  const store = createTestStore(initialState);\n  const result = render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <DashboardLayout />\n      </ThemeProvider>\n    </Provider>\n  );\n  return { ...result, store };\n};\n\ndescribe('DashboardLayout - 3분할 레이아웃', () => {\n  describe('기본 렌더링 테스트', () => {\n    it('3분할 레이아웃이 정상적으로 렌더링되어야 함', () => {\n      renderDashboardLayout();\n      \n      // 좌측 패널 확인\n      expect(screen.getByText('ITMS')).toBeInTheDocument();\n      expect(screen.getByText('대시보드')).toBeInTheDocument();\n      expect(screen.getByText('테스트 케이스')).toBeInTheDocument();\n      \n      // 중앙 패널 확인\n      expect(screen.getByText('대시보드')).toBeInTheDocument();\n      expect(screen.getByText('프로젝트 현황 및 최근 활동을 확인하세요')).toBeInTheDocument();\n      \n      // 우측 패널 확인\n      expect(screen.getByText('개인 작업')).toBeInTheDocument();\n      expect(screen.getByText('내 작업 목록')).toBeInTheDocument();\n    });\n\n    it('모든 패널이 기본 상태로 표시되어야 함', () => {\n      renderDashboardLayout();\n      \n      // 좌측 패널 토글 버튼\n      const leftToggleButton = screen.getByRole('button', { name: /←/ });\n      expect(leftToggleButton).toBeInTheDocument();\n      \n      // 우측 패널 토글 버튼\n      const rightToggleButton = screen.getByRole('button', { name: /→/ });\n      expect(rightToggleButton).toBeInTheDocument();\n    });\n  });\n\n  describe('패널 토글 기능 테스트', () => {\n    it('좌측 패널 토글 버튼 클릭 시 패널이 축소되어야 함', async () => {\n      renderDashboardLayout();\n      \n      const leftToggleButton = screen.getByRole('button', { name: /←/ });\n      fireEvent.click(leftToggleButton);\n      \n      await waitFor(() => {\n        // 축소된 상태의 토글 버튼 확인\n        expect(screen.getByRole('button', { name: /→/ })).toBeInTheDocument();\n      });\n    });\n\n    it('우측 패널 토글 버튼 클릭 시 패널이 축소되어야 함', async () => {\n      renderDashboardLayout();\n      \n      const rightToggleButton = screen.getByRole('button', { name: /→/ });\n      fireEvent.click(rightToggleButton);\n      \n      await waitFor(() => {\n        // 축소된 상태의 토글 버튼 확인\n        expect(screen.getByRole('button', { name: /←/ })).toBeInTheDocument();\n      });\n    });\n\n    it('축소된 패널을 다시 토글하면 확장되어야 함', async () => {\n      renderDashboardLayout({\n        leftPanel: { isCollapsed: true, width: 280 },\n        rightPanel: { isCollapsed: true, width: 320 }\n      });\n      \n      // 좌측 패널 확장\n      const leftToggleButton = screen.getByRole('button', { name: /→/ });\n      fireEvent.click(leftToggleButton);\n      \n      await waitFor(() => {\n        expect(screen.getByText('ITMS')).toBeInTheDocument();\n      });\n      \n      // 우측 패널 확장\n      const rightToggleButton = screen.getByRole('button', { name: /←/ });\n      fireEvent.click(rightToggleButton);\n      \n      await waitFor(() => {\n        expect(screen.getByText('개인 작업')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('반응형 레이아웃 테스트', () => {\n    it('다양한 화면 크기에서 레이아웃이 정상적으로 표시되어야 함', () => {\n      // 1280x720 해상도 시뮬레이션\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 1280,\n      });\n      Object.defineProperty(window, 'innerHeight', {\n        writable: true,\n        configurable: true,\n        value: 720,\n      });\n      \n      renderDashboardLayout();\n      \n      // 레이아웃 컨테이너가 존재하는지 확인\n      const layoutContainer = document.querySelector('[style*=\"grid-template-columns\"]');\n      expect(layoutContainer).toBeInTheDocument();\n    });\n\n    it('1920x1080 해상도에서도 정상 동작해야 함', () => {\n      // 1920x1080 해상도 시뮬레이션\n      Object.defineProperty(window, 'innerWidth', {\n        writable: true,\n        configurable: true,\n        value: 1920,\n      });\n      Object.defineProperty(window, 'innerHeight', {\n        writable: true,\n        configurable: true,\n        value: 1080,\n      });\n      \n      renderDashboardLayout();\n      \n      // 모든 패널이 정상적으로 렌더링되는지 확인\n      expect(screen.getByText('ITMS')).toBeInTheDocument();\n      expect(screen.getByText('대시보드')).toBeInTheDocument();\n      expect(screen.getByText('개인 작업')).toBeInTheDocument();\n    });\n  });\n\n  describe('접근성 테스트', () => {\n    it('키보드로 모든 토글 버튼에 접근할 수 있어야 함', () => {\n      renderDashboardLayout();\n      \n      // Tab 키로 포커스 이동\n      const leftToggleButton = screen.getByRole('button', { name: /←/ });\n      const rightToggleButton = screen.getByRole('button', { name: /→/ });\n      \n      leftToggleButton.focus();\n      expect(leftToggleButton).toHaveFocus();\n      \n      // Enter 키로 토글 동작\n      fireEvent.keyDown(leftToggleButton, { key: 'Enter', code: 'Enter' });\n      \n      rightToggleButton.focus();\n      expect(rightToggleButton).toHaveFocus();\n      \n      fireEvent.keyDown(rightToggleButton, { key: 'Enter', code: 'Enter' });\n    });\n\n    it('스크린 리더가 레이아웃 구조를 인식할 수 있어야 함', () => {\n      renderDashboardLayout();\n      \n      // 랜드마크 역할 확인\n      const mainContent = screen.getByRole('main') || document.querySelector('main');\n      expect(mainContent).toBeInTheDocument();\n      \n      // 네비게이션 영역 확인\n      const navigation = screen.getByRole('navigation') || document.querySelector('nav');\n      expect(navigation).toBeInTheDocument();\n    });\n  });\n\n  describe('성능 테스트', () => {\n    it('패널 토글 시 애니메이션이 부드럽게 동작해야 함', async () => {\n      const startTime = performance.now();\n      \n      renderDashboardLayout();\n      \n      const leftToggleButton = screen.getByRole('button', { name: /←/ });\n      fireEvent.click(leftToggleButton);\n      \n      // 애니메이션 완료 대기 (300ms)\n      await waitFor(() => {\n        const endTime = performance.now();\n        expect(endTime - startTime).toBeLessThan(500); // 500ms 이내 완료\n      }, { timeout: 1000 });\n    });\n\n    it('대량의 데이터가 있어도 렌더링 성능이 유지되어야 함', () => {\n      const renderStart = performance.now();\n      \n      renderDashboardLayout();\n      \n      const renderEnd = performance.now();\n      \n      // 초기 렌더링이 100ms 이내에 완료되어야 함\n      expect(renderEnd - renderStart).toBeLessThan(100);\n    });\n  });\n\n  describe('상태 관리 테스트', () => {\n    it('Redux 스토어의 상태가 UI와 동기화되어야 함', () => {\n      const { store } = renderDashboardLayout();\n      \n      // 초기 상태 확인\n      let state = store.getState();\n      expect(state.dashboardLayout.leftPanel.isCollapsed).toBe(false);\n      expect(state.dashboardLayout.rightPanel.isCollapsed).toBe(false);\n      \n      // 좌측 패널 토글\n      const leftToggleButton = screen.getByRole('button', { name: /←/ });\n      fireEvent.click(leftToggleButton);\n      \n      // 상태 변경 확인\n      state = store.getState();\n      expect(state.dashboardLayout.leftPanel.isCollapsed).toBe(true);\n    });\n\n    it('패널 너비 설정이 정상적으로 동작해야 함', () => {\n      const { store } = renderDashboardLayout({\n        leftPanel: { isCollapsed: false, width: 300 },\n        rightPanel: { isCollapsed: false, width: 350 }\n      });\n      \n      const state = store.getState();\n      expect(state.dashboardLayout.leftPanel.width).toBe(300);\n      expect(state.dashboardLayout.rightPanel.width).toBe(350);\n    });\n  });\n\n  describe('에러 처리 테스트', () => {\n    it('잘못된 상태로 렌더링되어도 에러가 발생하지 않아야 함', () => {\n      // 잘못된 초기 상태로 렌더링\n      expect(() => {\n        renderDashboardLayout({\n          leftPanel: { isCollapsed: null as any, width: -100 },\n          rightPanel: { isCollapsed: undefined as any, width: 0 }\n        });\n      }).not.toThrow();\n    });\n  });\n}); "],"version":3}