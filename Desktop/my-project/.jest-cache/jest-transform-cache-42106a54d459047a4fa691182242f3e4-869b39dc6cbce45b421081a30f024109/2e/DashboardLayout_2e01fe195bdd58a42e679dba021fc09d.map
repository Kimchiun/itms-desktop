{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Dashboard/components/DashboardLayout.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Dashboard/components/DashboardLayout.tsx"],"sourcesContent":["import React, { useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { RootState } from '../../../store';\nimport { toggleLeftPanel, toggleRightPanel } from '../../../store/dashboardLayoutSlice';\nimport LeftPanel from './LeftPanel';\nimport CenterPanel from './CenterPanel';\nimport RightPanel from './RightPanel';\n\ninterface LayoutContainerProps {\n  layout: {\n    leftPanel: {\n      isCollapsed: boolean;\n      width: number;\n    };\n    rightPanel: {\n      isCollapsed: boolean;\n      width: number;\n    };\n  };\n}\n\nconst LayoutContainer = styled.div<LayoutContainerProps>`\n  display: grid;\n  grid-template-columns: ${props => {\n    const { leftPanel, rightPanel } = props.layout;\n    const leftWidth = leftPanel.isCollapsed ? '60px' : `${leftPanel.width}px`;\n    const rightWidth = rightPanel.isCollapsed ? '60px' : `${rightPanel.width}px`;\n    return `${leftWidth} 1fr ${rightWidth}`;\n  }};\n  height: 100vh;\n  transition: grid-template-columns 0.3s ease;\n  overflow: hidden;\n`;\n\nconst ToggleButton = styled.button<{ position: 'left' | 'right' }>`\n  position: absolute;\n  top: 50%;\n  ${props => props.position === 'left' ? 'right: -15px' : 'left: -15px'};\n  transform: translateY(-50%);\n  width: 30px;\n  height: 30px;\n  border-radius: 50%;\n  background: #3b82f6;\n  color: white;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-size: 12px;\n  z-index: 10;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.1);\n  \n  &:hover {\n    background: #2563eb;\n  }\n\n  &:focus {\n    outline: 2px solid #3b82f6;\n    outline-offset: 2px;\n  }\n`;\n\nconst PanelContainer = styled.div<{ isCollapsed: boolean }>`\n  position: relative;\n  background: ${props => props.isCollapsed ? '#f8fafc' : 'white'};\n  border-right: ${props => props.isCollapsed ? '1px solid #e2e8f0' : '1px solid #e2e8f0'};\n  overflow: hidden;\n  transition: all 0.3s ease;\n`;\n\nconst DashboardLayout: React.FC = () => {\n  const dispatch = useDispatch();\n  const layout = useSelector((state: RootState) => state.dashboardLayout);\n\n  // 메모이제이션된 콜백 함수들\n  const handleToggleLeftPanel = useCallback(() => {\n    dispatch(toggleLeftPanel());\n  }, [dispatch]);\n\n  const handleToggleRightPanel = useCallback(() => {\n    dispatch(toggleRightPanel());\n  }, [dispatch]);\n\n  // 메모이제이션된 레이아웃 설정\n  const layoutConfig = useMemo(() => ({\n    leftPanel: layout.leftPanel,\n    rightPanel: layout.rightPanel\n  }), [layout.leftPanel, layout.rightPanel]);\n\n  // 메모이제이션된 토글 버튼 텍스트\n  const leftToggleText = useMemo(() => \n    layout.leftPanel.isCollapsed ? '→' : '←', \n    [layout.leftPanel.isCollapsed]\n  );\n\n  const rightToggleText = useMemo(() => \n    layout.rightPanel.isCollapsed ? '←' : '→', \n    [layout.rightPanel.isCollapsed]\n  );\n\n  return (\n    <LayoutContainer \n      layout={layoutConfig}\n      data-testid=\"dashboard-layout\"\n    >\n      <PanelContainer \n        isCollapsed={layout.leftPanel.isCollapsed}\n        data-testid=\"left-panel\"\n        className={layout.leftPanel.isCollapsed ? 'collapsed' : ''}\n      >\n        <LeftPanel />\n        <ToggleButton \n          position=\"left\" \n          onClick={handleToggleLeftPanel}\n          aria-label={layout.leftPanel.isCollapsed ? '좌측 패널 확장' : '좌측 패널 축소'}\n          data-testid=\"left-toggle-button\"\n        >\n          {leftToggleText}\n        </ToggleButton>\n      </PanelContainer>\n      \n      <div data-testid=\"center-panel\">\n        <CenterPanel />\n      </div>\n      \n      <PanelContainer \n        isCollapsed={layout.rightPanel.isCollapsed}\n        data-testid=\"right-panel\"\n        className={layout.rightPanel.isCollapsed ? 'collapsed' : ''}\n      >\n        <RightPanel />\n        <ToggleButton \n          position=\"right\" \n          onClick={handleToggleRightPanel}\n          aria-label={layout.rightPanel.isCollapsed ? '우측 패널 확장' : '우측 패널 축소'}\n          data-testid=\"right-toggle-button\"\n        >\n          {rightToggleText}\n        </ToggleButton>\n      </PanelContainer>\n    </LayoutContainer>\n  );\n};\n\nexport default React.memo(DashboardLayout); "],"version":3}