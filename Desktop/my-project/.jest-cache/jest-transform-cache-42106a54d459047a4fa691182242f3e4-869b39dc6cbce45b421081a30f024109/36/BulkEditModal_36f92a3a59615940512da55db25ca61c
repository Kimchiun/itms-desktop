c0d384503454dcf20907f4f24958bbb3
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const ModalOverlay = styled_components_1.default.div `
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: rgba(0, 0, 0, 0.5);
  display: ${props => props.isOpen ? 'flex' : 'none'};
  align-items: center;
  justify-content: center;
  z-index: 1000;
`;
const ModalContent = styled_components_1.default.div `
  background-color: white;
  border-radius: 8px;
  padding: 24px;
  width: 90%;
  max-width: 600px;
  max-height: 80vh;
  overflow-y: auto;
  box-shadow: 0 20px 25px -5px rgba(0, 0, 0, 0.1);
`;
const ModalHeader = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 16px;
  border-bottom: 1px solid #e5e7eb;
`;
const ModalTitle = styled_components_1.default.h2 `
  margin: 0;
  font-size: 18px;
  font-weight: 600;
  color: #111827;
`;
const CloseButton = styled_components_1.default.button `
  background: none;
  border: none;
  font-size: 24px;
  cursor: pointer;
  color: #6b7280;
  
  &:hover {
    color: #374151;
  }
`;
const FormGroup = styled_components_1.default.div `
  margin-bottom: 20px;
`;
const Label = styled_components_1.default.label `
  display: block;
  margin-bottom: 8px;
  font-weight: 500;
  color: #374151;
`;
const Select = styled_components_1.default.select `
  width: 100%;
  padding: 8px 12px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  font-size: 14px;
  
  &:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
`;
const Input = styled_components_1.default.input `
  width: 100%;
  padding: 8px 12px;
  border: 1px solid #d1d5db;
  border-radius: 6px;
  font-size: 14px;
  
  &:focus {
    outline: none;
    border-color: #3b82f6;
    box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
  }
`;
const Checkbox = styled_components_1.default.input `
  width: 18px;
  height: 18px;
  margin-right: 8px;
  accent-color: #3b82f6;
`;
const CheckboxLabel = styled_components_1.default.label `
  display: flex;
  align-items: center;
  font-size: 14px;
  color: #374151;
  cursor: pointer;
`;
const SelectedCasesList = styled_components_1.default.div `
  max-height: 200px;
  overflow-y: auto;
  border: 1px solid #e5e7eb;
  border-radius: 6px;
  padding: 12px;
  background-color: #f9fafb;
  margin-bottom: 20px;
`;
const CaseItem = styled_components_1.default.div `
  padding: 8px;
  border-bottom: 1px solid #f3f4f6;
  font-size: 14px;
  
  &:last-child {
    border-bottom: none;
  }
`;
const ButtonGroup = styled_components_1.default.div `
  display: flex;
  gap: 12px;
  justify-content: flex-end;
  margin-top: 24px;
  padding-top: 16px;
  border-top: 1px solid #e5e7eb;
`;
const Button = styled_components_1.default.button `
  padding: 8px 16px;
  border: none;
  border-radius: 6px;
  font-size: 14px;
  font-weight: 500;
  cursor: pointer;
  transition: background-color 0.2s ease;
  
  background-color: ${props => props.variant === 'primary' ? '#3b82f6' : '#f3f4f6'};
  color: ${props => props.variant === 'primary' ? 'white' : '#374151'};
  
  &:hover {
    background-color: ${props => props.variant === 'primary' ? '#2563eb' : '#e5e7eb'};
  }
  
  &:disabled {
    background-color: #9ca3af;
    cursor: not-allowed;
  }
`;
const BulkEditModal = ({ isOpen, onClose, selectedCases, onApply }) => {
    const [updates, setUpdates] = (0, react_1.useState)({});
    const [fieldSelections, setFieldSelections] = (0, react_1.useState)(new Set());
    const handleFieldToggle = (0, react_1.useCallback)((field) => {
        const newSelections = new Set(fieldSelections);
        if (newSelections.has(field)) {
            newSelections.delete(field);
            const newUpdates = { ...updates };
            delete newUpdates[field];
            setUpdates(newUpdates);
        }
        else {
            newSelections.add(field);
        }
        setFieldSelections(newSelections);
    }, [fieldSelections, updates]);
    const handleUpdateChange = (0, react_1.useCallback)((field, value) => {
        setUpdates(prev => ({
            ...prev,
            [field]: value
        }));
    }, []);
    const handleApply = (0, react_1.useCallback)(() => {
        if (Object.keys(updates).length === 0)
            return;
        onApply(updates);
        onClose();
        // 초기화
        setUpdates({});
        setFieldSelections(new Set());
    }, [updates, onApply, onClose]);
    const handleCancel = (0, react_1.useCallback)(() => {
        onClose();
        setUpdates({});
        setFieldSelections(new Set());
    }, [onClose]);
    if (!isOpen)
        return null;
    return ((0, jsx_runtime_1.jsx)(ModalOverlay, { isOpen: isOpen, children: (0, jsx_runtime_1.jsxs)(ModalContent, { children: [(0, jsx_runtime_1.jsxs)(ModalHeader, { children: [(0, jsx_runtime_1.jsxs)(ModalTitle, { children: ["\uC77C\uAD04 \uD3B8\uC9D1 (", selectedCases.length, "\uAC1C \uC120\uD0DD)"] }), (0, jsx_runtime_1.jsx)(CloseButton, { onClick: onClose, children: "\u00D7" })] }), (0, jsx_runtime_1.jsxs)(SelectedCasesList, { children: [(0, jsx_runtime_1.jsx)("strong", { children: "\uC120\uD0DD\uB41C \uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4:" }), selectedCases.map(case_ => ((0, jsx_runtime_1.jsx)(CaseItem, { children: case_.title }, case_.id)))] }), (0, jsx_runtime_1.jsxs)(FormGroup, { children: [(0, jsx_runtime_1.jsxs)(CheckboxLabel, { children: [(0, jsx_runtime_1.jsx)(Checkbox, { type: "checkbox", checked: fieldSelections.has('status'), onChange: () => handleFieldToggle('status') }), "\uC0C1\uD0DC \uBCC0\uACBD"] }), fieldSelections.has('status') && ((0, jsx_runtime_1.jsxs)(Select, { value: updates.status || '', onChange: (e) => handleUpdateChange('status', e.target.value), children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "\uC120\uD0DD\uD558\uC138\uC694" }), (0, jsx_runtime_1.jsx)("option", { value: "Active", children: "\uD65C\uC131" }), (0, jsx_runtime_1.jsx)("option", { value: "Inactive", children: "\uBE44\uD65C\uC131" }), (0, jsx_runtime_1.jsx)("option", { value: "Draft", children: "\uCD08\uC548" })] }))] }), (0, jsx_runtime_1.jsxs)(FormGroup, { children: [(0, jsx_runtime_1.jsxs)(CheckboxLabel, { children: [(0, jsx_runtime_1.jsx)(Checkbox, { type: "checkbox", checked: fieldSelections.has('priority'), onChange: () => handleFieldToggle('priority') }), "\uC6B0\uC120\uC21C\uC704 \uBCC0\uACBD"] }), fieldSelections.has('priority') && ((0, jsx_runtime_1.jsxs)(Select, { value: updates.priority || '', onChange: (e) => handleUpdateChange('priority', e.target.value), children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "\uC120\uD0DD\uD558\uC138\uC694" }), (0, jsx_runtime_1.jsx)("option", { value: "High", children: "\uB192\uC74C" }), (0, jsx_runtime_1.jsx)("option", { value: "Medium", children: "\uBCF4\uD1B5" }), (0, jsx_runtime_1.jsx)("option", { value: "Low", children: "\uB0AE\uC74C" })] }))] }), (0, jsx_runtime_1.jsxs)(FormGroup, { children: [(0, jsx_runtime_1.jsxs)(CheckboxLabel, { children: [(0, jsx_runtime_1.jsx)(Checkbox, { type: "checkbox", checked: fieldSelections.has('createdBy'), onChange: () => handleFieldToggle('createdBy') }), "\uB2F4\uB2F9\uC790 \uBCC0\uACBD"] }), fieldSelections.has('createdBy') && ((0, jsx_runtime_1.jsx)(Input, { type: "text", placeholder: "\uB2F4\uB2F9\uC790 \uC774\uB984", value: updates.createdBy || '', onChange: (e) => handleUpdateChange('createdBy', e.target.value) }))] }), (0, jsx_runtime_1.jsxs)(ButtonGroup, { children: [(0, jsx_runtime_1.jsx)(Button, { onClick: handleCancel, children: "\uCDE8\uC18C" }), (0, jsx_runtime_1.jsxs)(Button, { variant: "primary", onClick: handleApply, disabled: Object.keys(updates).length === 0, children: ["\uC801\uC6A9 (", Object.keys(updates).length, "\uAC1C \uD544\uB4DC)"] })] })] }) }));
};
exports.default = BulkEditModal;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,