{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/folders/controllers/folderController.ts","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,qCAAiC;AACjC,yEAA2D;AAE3D,sEAA0C;AAE1C,MAAM,MAAM,GAAG,IAAA,gBAAM,GAAE,CAAC;AAExB,eAAe;AACf,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,wBAAU,CAAC,CAAC;AAEhC,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,OAAO,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACnC,IAAI,CAAC;QACD,MAAM,IAAI,GAAG,MAAM,aAAa,CAAC,aAAa,EAAE,CAAC;QACjD,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACnB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACrC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAC3D,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC/B,IAAI,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,aAAa,EAAE,CAAC;QACpD,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;IACtB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACrC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,mBAAmB,EAAE,CAAC,CAAC;IAC3D,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,WAAW;AACX,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAClC,IAAI,CAAC;QACD,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC/D,CAAC;QACD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAClC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;IACxD,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ;AACR,MAAM,CAAC,IAAI,CAAC,GAAG,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAChC,IAAI,CAAC;QACD,MAAM,OAAO,GAAwB;YACjC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;YACnB,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;YACjC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;YAC3B,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,QAAQ;SAC5C,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,YAAY,CAAC,OAAO,CAAC,CAAC;QACzD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACjC,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,CAAC;aAAM,CAAC;YACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ;AACR,MAAM,CAAC,GAAG,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAClC,IAAI,CAAC;QACD,MAAM,OAAO,GAAwB;YACjC,IAAI,EAAE,GAAG,CAAC,IAAI,CAAC,IAAI;YACnB,WAAW,EAAE,GAAG,CAAC,IAAI,CAAC,WAAW;YACjC,QAAQ,EAAE,GAAG,CAAC,IAAI,CAAC,QAAQ;YAC3B,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,QAAQ;SAC5C,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;QAChF,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC/D,CAAC;QACD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,CAAC;aAAM,CAAC;YACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ;AACR,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACrC,IAAI,CAAC;QACD,MAAM,OAAO,GAAG,MAAM,aAAa,CAAC,YAAY,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,OAAO,EAAE,CAAC;YACX,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC/D,CAAC;QACD,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,CAAC;aAAM,CAAC;YACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ;AACR,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACxC,IAAI,CAAC;QACD,MAAM,OAAO,GAAsB;YAC/B,cAAc,EAAE,GAAG,CAAC,IAAI,CAAC,cAAc;YACvC,SAAS,EAAE,GAAG,CAAC,IAAI,CAAC,SAAS,IAAI,QAAQ;SAC5C,CAAC;QAEF,MAAM,MAAM,GAAG,MAAM,aAAa,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;QAC9E,IAAI,CAAC,MAAM,EAAE,CAAC;YACV,OAAO,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QAC/D,CAAC;QACD,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;IACrB,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;QAClC,IAAI,KAAK,YAAY,KAAK,IAAI,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC;YAC5D,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,KAAK,CAAC,OAAO,EAAE,CAAC,CAAC;QACrD,CAAC;aAAM,CAAC;YACJ,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,gBAAgB,EAAE,CAAC,CAAC;QACxD,CAAC;IACL,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,qBAAqB;AACrB,MAAM,CAAC,GAAG,CAAC,gBAAgB,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC5C,IAAI,CAAC;QACD,MAAM,WAAW,GAAG,MAAM,aAAa,CAAC,oBAAoB,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC,CAAC;QACpF,GAAG,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;IAC1B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,qBAAqB,EAAE,KAAK,CAAC,CAAC;QAC5C,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;IAC7D,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAkB;AAClB,MAAM,CAAC,IAAI,CAAC,4BAA4B,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IACzD,IAAI,CAAC;QACD,MAAM,aAAa,CAAC,mBAAmB,CACnC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAC7B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CACxB,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACvC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;IAC7D,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,mBAAmB;AACnB,MAAM,CAAC,MAAM,CAAC,4BAA4B,EAAE,KAAK,EAAE,GAAG,EAAE,GAAG,EAAE,EAAE;IAC3D,IAAI,CAAC;QACD,MAAM,aAAa,CAAC,wBAAwB,CACxC,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,EAC7B,MAAM,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CACxB,CAAC;QACF,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,CAAC;IAC3B,CAAC;IAAC,OAAO,KAAK,EAAE,CAAC;QACb,OAAO,CAAC,KAAK,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;QACvC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,EAAE,OAAO,EAAE,qBAAqB,EAAE,CAAC,CAAC;IAC7D,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,kBAAe,MAAM,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/folders/controllers/folderController.ts"],"sourcesContent":["import { Router } from 'express';\nimport * as folderService from '../services/folderService';\nimport { CreateFolderRequest, UpdateFolderRequest, MoveFolderRequest, MoveTestCaseRequest } from '../models/Folder';\nimport bulkRouter from './bulkController';\n\nconst router = Router();\n\n// 일괄 작업 라우터 등록\nrouter.use('/bulk', bulkRouter);\n\n// 폴더 트리 조회\nrouter.get('/tree', async (req, res) => {\n    try {\n        const tree = await folderService.getFolderTree();\n        res.json(tree);\n    } catch (error) {\n        console.error('폴더 트리 조회 실패:', error);\n        res.status(500).json({ message: '폴더 트리 조회에 실패했습니다.' });\n    }\n});\n\n// 모든 폴더 조회\nrouter.get('/', async (req, res) => {\n    try {\n        const folders = await folderService.getAllFolders();\n        res.json(folders);\n    } catch (error) {\n        console.error('폴더 목록 조회 실패:', error);\n        res.status(500).json({ message: '폴더 목록 조회에 실패했습니다.' });\n    }\n});\n\n// 특정 폴더 조회\nrouter.get('/:id', async (req, res) => {\n    try {\n        const folder = await folderService.getFolderById(Number(req.params.id));\n        if (!folder) {\n            return res.status(404).json({ message: '폴더를 찾을 수 없습니다.' });\n        }\n        res.json(folder);\n    } catch (error) {\n        console.error('폴더 조회 실패:', error);\n        res.status(500).json({ message: '폴더 조회에 실패했습니다.' });\n    }\n});\n\n// 폴더 생성\nrouter.post('/', async (req, res) => {\n    try {\n        const request: CreateFolderRequest = {\n            name: req.body.name,\n            description: req.body.description,\n            parentId: req.body.parentId,\n            createdBy: req.body.createdBy || 'system'\n        };\n        \n        const folder = await folderService.createFolder(request);\n        res.status(201).json(folder);\n    } catch (error) {\n        console.error('폴더 생성 실패:', error);\n        if (error instanceof Error && error.message.includes('순환 참조')) {\n            res.status(400).json({ message: error.message });\n        } else {\n            res.status(500).json({ message: '폴더 생성에 실패했습니다.' });\n        }\n    }\n});\n\n// 폴더 수정\nrouter.put('/:id', async (req, res) => {\n    try {\n        const request: UpdateFolderRequest = {\n            name: req.body.name,\n            description: req.body.description,\n            parentId: req.body.parentId,\n            updatedBy: req.body.updatedBy || 'system'\n        };\n        \n        const folder = await folderService.updateFolder(Number(req.params.id), request);\n        if (!folder) {\n            return res.status(404).json({ message: '폴더를 찾을 수 없습니다.' });\n        }\n        res.json(folder);\n    } catch (error) {\n        console.error('폴더 수정 실패:', error);\n        if (error instanceof Error && error.message.includes('순환 참조')) {\n            res.status(400).json({ message: error.message });\n        } else {\n            res.status(500).json({ message: '폴더 수정에 실패했습니다.' });\n        }\n    }\n});\n\n// 폴더 삭제\nrouter.delete('/:id', async (req, res) => {\n    try {\n        const success = await folderService.deleteFolder(Number(req.params.id));\n        if (!success) {\n            return res.status(404).json({ message: '폴더를 찾을 수 없습니다.' });\n        }\n        res.status(204).send();\n    } catch (error) {\n        console.error('폴더 삭제 실패:', error);\n        if (error instanceof Error && error.message.includes('루트 폴더')) {\n            res.status(400).json({ message: error.message });\n        } else {\n            res.status(500).json({ message: '폴더 삭제에 실패했습니다.' });\n        }\n    }\n});\n\n// 폴더 이동\nrouter.post('/:id/move', async (req, res) => {\n    try {\n        const request: MoveFolderRequest = {\n            targetParentId: req.body.targetParentId,\n            updatedBy: req.body.updatedBy || 'system'\n        };\n        \n        const folder = await folderService.moveFolder(Number(req.params.id), request);\n        if (!folder) {\n            return res.status(404).json({ message: '폴더를 찾을 수 없습니다.' });\n        }\n        res.json(folder);\n    } catch (error) {\n        console.error('폴더 이동 실패:', error);\n        if (error instanceof Error && error.message.includes('순환 참조')) {\n            res.status(400).json({ message: error.message });\n        } else {\n            res.status(500).json({ message: '폴더 이동에 실패했습니다.' });\n        }\n    }\n});\n\n// 폴더 내 테스트 케이스 목록 조회\nrouter.get('/:id/testcases', async (req, res) => {\n    try {\n        const testCaseIds = await folderService.getTestCasesInFolder(Number(req.params.id));\n        res.json(testCaseIds);\n    } catch (error) {\n        console.error('폴더 내 테스트 케이스 조회 실패:', error);\n        res.status(500).json({ message: '테스트 케이스 조회에 실패했습니다.' });\n    }\n});\n\n// 테스트 케이스를 폴더에 추가\nrouter.post('/:id/testcases/:testCaseId', async (req, res) => {\n    try {\n        await folderService.addTestCaseToFolder(\n            Number(req.params.testCaseId),\n            Number(req.params.id)\n        );\n        res.status(204).send();\n    } catch (error) {\n        console.error('테스트 케이스 추가 실패:', error);\n        res.status(500).json({ message: '테스트 케이스 추가에 실패했습니다.' });\n    }\n});\n\n// 테스트 케이스를 폴더에서 제거\nrouter.delete('/:id/testcases/:testCaseId', async (req, res) => {\n    try {\n        await folderService.removeTestCaseFromFolder(\n            Number(req.params.testCaseId),\n            Number(req.params.id)\n        );\n        res.status(204).send();\n    } catch (error) {\n        console.error('테스트 케이스 제거 실패:', error);\n        res.status(500).json({ message: '테스트 케이스 제거에 실패했습니다.' });\n    }\n});\n\nexport default router; "],"version":3}