{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/release-integration.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/release-integration.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { configureStore } from '@reduxjs/toolkit';\nimport DashboardLayout from '../src/renderer/features/Dashboard/components/DashboardLayout';\nimport dashboardLayoutReducer from '../src/renderer/store/dashboardLayoutSlice';\nimport { theme } from '../src/renderer/shared/theme';\nimport '@testing-library/jest-dom';\n\n// axios 모킹\njest.mock('../src/renderer/utils/axios', () => ({\n  get: jest.fn()\n}));\n\nconst mockAxios = require('../src/renderer/utils/axios');\n\n// 테스트용 스토어 설정\nconst createTestStore = (initialState = {}) => {\n  return configureStore({\n    reducer: {\n      dashboardLayout: dashboardLayoutReducer\n    },\n    preloadedState: {\n      dashboardLayout: {\n        leftPanel: { isCollapsed: false, width: 280 },\n        rightPanel: { isCollapsed: false, width: 320 },\n        centerPanel: { isFullWidth: false },\n        activeTab: 'overview',\n        selectedReleaseId: null,\n        ...initialState\n      }\n    }\n  });\n};\n\n// 컴포넌트 렌더링 헬퍼\nconst renderDashboardLayout = (initialState = {}) => {\n  const store = createTestStore(initialState);\n  const result = render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <DashboardLayout />\n      </ThemeProvider>\n    </Provider>\n  );\n  return { ...result, store };\n};\n\nconst mockReleases = [\n  { id: '1', title: 'v2.1.0 - 기능 개선', status: 'active', description: '새로운 기능 추가' },\n  { id: '2', title: 'v2.0.5 - 버그 수정', status: 'pending', description: '중요한 버그 수정' },\n  { id: '3', title: 'v2.0.4 - 보안 패치', status: 'completed', description: '보안 취약점 수정' }\n];\n\nconst mockReleaseDetail = {\n  id: '1',\n  title: 'v2.1.0 - 기능 개선',\n  status: 'active',\n  description: '새로운 기능 추가',\n  version: '2.1.0',\n  createdAt: '2024-01-15T10:00:00Z',\n  updatedAt: '2024-01-20T14:30:00Z'\n};\n\ndescribe('ReleaseList-CenterPanel 연동 테스트', () => {\n  beforeEach(() => {\n    mockAxios.get.mockClear();\n  });\n\n  describe('릴리즈 선택 시 중앙 패널 업데이트', () => {\n    it('릴리즈 선택 시 중앙 패널에 상세 정보가 표시되어야 함', async () => {\n      // 릴리즈 목록 API 모킹\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/1') {\n          return Promise.resolve({ data: mockReleaseDetail });\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      const { store } = renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-1');\n      fireEvent.click(releaseItem);\n\n      // 선택된 릴리즈 ID가 store에 저장되었는지 확인\n      const state = store.getState();\n      expect(state.dashboardLayout.selectedReleaseId).toBe('1');\n\n      // 중앙 패널에 상세 정보가 표시되는지 확인\n      await waitFor(() => {\n        expect(screen.getByTestId('selected-release-info')).toBeInTheDocument();\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n        expect(screen.getByText('새로운 기능 추가')).toBeInTheDocument();\n        expect(screen.getByText('진행 중')).toBeInTheDocument();\n      });\n    });\n\n    it('릴리즈 선택 시 API 호출이 정상적으로 이루어져야 함', async () => {\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/2') {\n          return Promise.resolve({ data: { ...mockReleaseDetail, id: '2' } });\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.0.5 - 버그 수정')).toBeInTheDocument();\n      });\n\n      // 다른 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-2');\n      fireEvent.click(releaseItem);\n\n      // API 호출 확인\n      await waitFor(() => {\n        expect(mockAxios.get).toHaveBeenCalledWith('/api/releases/2');\n      });\n    });\n\n    it('API 오류 시 중앙 패널에 오류 메시지가 표시되어야 함', async () => {\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/1') {\n          return Promise.reject(new Error('API Error'));\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-1');\n      fireEvent.click(releaseItem);\n\n      // 오류 메시지 확인\n      await waitFor(() => {\n        expect(screen.getByText('릴리즈 정보를 불러올 수 없습니다')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('릴리즈 선택 해제 시 중앙 패널 상태', () => {\n    it('릴리즈가 선택되지 않았을 때 안내 메시지가 표시되어야 함', async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n\n      renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 중앙 패널에 안내 메시지 확인\n      expect(screen.getByText('릴리즈를 선택해주세요')).toBeInTheDocument();\n      expect(screen.getByText('좌측 패널에서 릴리즈를 선택하면 상세 정보를 확인할 수 있습니다.')).toBeInTheDocument();\n    });\n  });\n\n  describe('로딩 상태 처리', () => {\n    it('릴리즈 상세 정보 로딩 중 로딩 메시지가 표시되어야 함', async () => {\n      // 릴리즈 목록은 즉시 반환, 상세 정보는 지연\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/1') {\n          return new Promise(resolve => {\n            setTimeout(() => resolve({ data: mockReleaseDetail }), 100);\n          });\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-1');\n      fireEvent.click(releaseItem);\n\n      // 로딩 메시지 확인\n      expect(screen.getByText('릴리즈 정보를 불러오는 중...')).toBeInTheDocument();\n\n      // 로딩 완료 후 상세 정보 확인\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      }, { timeout: 200 });\n    });\n  });\n\n  describe('릴리즈 메타데이터 표시', () => {\n    it('릴리즈의 메타데이터가 올바르게 표시되어야 함', async () => {\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/1') {\n          return Promise.resolve({ data: mockReleaseDetail });\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-1');\n      fireEvent.click(releaseItem);\n\n      // 메타데이터 확인\n      await waitFor(() => {\n        expect(screen.getByText('버전')).toBeInTheDocument();\n        expect(screen.getByText('2.1.0')).toBeInTheDocument();\n        expect(screen.getByText('생성일')).toBeInTheDocument();\n        expect(screen.getByText('수정일')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('상태 라벨 표시', () => {\n    it('릴리즈 상태가 올바른 라벨로 표시되어야 함', async () => {\n      const completedRelease = {\n        ...mockReleaseDetail,\n        status: 'completed'\n      };\n\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/1') {\n          return Promise.resolve({ data: completedRelease });\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-1');\n      fireEvent.click(releaseItem);\n\n      // 상태 라벨 확인\n      await waitFor(() => {\n        expect(screen.getByText('완료')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('키보드 네비게이션', () => {\n    it('키보드로 릴리즈를 선택할 수 있어야 함', async () => {\n      mockAxios.get.mockImplementation((url: string) => {\n        if (url === '/api/releases') {\n          return Promise.resolve({ data: mockReleases });\n        }\n        if (url === '/api/releases/1') {\n          return Promise.resolve({ data: mockReleaseDetail });\n        }\n        return Promise.reject(new Error('Not found'));\n      });\n\n      const { store } = renderDashboardLayout();\n\n      // 릴리즈 목록 로드 대기\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n\n      // 키보드로 릴리즈 선택\n      const releaseItem = screen.getByTestId('release-item-1');\n      fireEvent.keyDown(releaseItem, { key: 'Enter', code: 'Enter' });\n\n      // 선택 상태 확인\n      const state = store.getState();\n      expect(state.dashboardLayout.selectedReleaseId).toBe('1');\n    });\n  });\n}); "],"version":3}