{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/release-list.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/release-list.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { ThemeProvider } from 'styled-components';\nimport { configureStore } from '@reduxjs/toolkit';\nimport ReleaseList from '../src/renderer/features/Dashboard/components/ReleaseList';\nimport dashboardLayoutReducer from '../src/renderer/store/dashboardLayoutSlice';\nimport { theme } from '../src/renderer/shared/theme';\nimport '@testing-library/jest-dom';\n\n// axios 모킹\njest.mock('../src/renderer/utils/axios', () => ({\n  get: jest.fn()\n}));\n\nconst mockAxios = require('../src/renderer/utils/axios');\n\n// 테스트용 스토어 설정\nconst createTestStore = (initialState = {}) => {\n  return configureStore({\n    reducer: {\n      dashboardLayout: dashboardLayoutReducer\n    },\n    preloadedState: {\n      dashboardLayout: {\n        leftPanel: { isCollapsed: false, width: 280 },\n        rightPanel: { isCollapsed: false, width: 320 },\n        centerPanel: { isFullWidth: false },\n        activeTab: 'overview',\n        selectedReleaseId: null,\n        ...initialState\n      }\n    }\n  });\n};\n\n// 컴포넌트 렌더링 헬퍼\nconst renderReleaseList = (initialState = {}) => {\n  const store = createTestStore(initialState);\n  const result = render(\n    <Provider store={store}>\n      <ThemeProvider theme={theme}>\n        <ReleaseList />\n      </ThemeProvider>\n    </Provider>\n  );\n  return { ...result, store };\n};\n\nconst mockReleases = [\n  { id: '1', title: 'v2.1.0 - 기능 개선', status: 'active', description: '새로운 기능 추가' },\n  { id: '2', title: 'v2.0.5 - 버그 수정', status: 'pending', description: '중요한 버그 수정' },\n  { id: '3', title: 'v2.0.4 - 보안 패치', status: 'completed', description: '보안 취약점 수정' },\n  { id: '4', title: 'v2.0.3 - 성능 최적화', status: 'completed', description: '성능 개선' }\n];\n\ndescribe('ReleaseList - 릴리즈 리스트/검색/전환 기능', () => {\n  beforeEach(() => {\n    mockAxios.get.mockClear();\n  });\n\n  describe('기본 렌더링 테스트', () => {\n    it('릴리즈 목록이 정상적으로 로드되어야 함', async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      \n      renderReleaseList();\n      \n      // 로딩 상태 확인\n      expect(screen.getByText('로딩 중...')).toBeInTheDocument();\n      \n      // 데이터 로드 후 확인\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n        expect(screen.getByText('v2.0.5 - 버그 수정')).toBeInTheDocument();\n        expect(screen.getByText('v2.0.4 - 보안 패치')).toBeInTheDocument();\n        expect(screen.getByText('v2.0.3 - 성능 최적화')).toBeInTheDocument();\n      });\n    });\n\n    it('API 호출이 정상적으로 이루어져야 함', async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      \n      renderReleaseList();\n      \n      expect(mockAxios.get).toHaveBeenCalledWith('/api/releases');\n    });\n\n    it('API 오류 시 빈 목록을 표시해야 함', async () => {\n      mockAxios.get.mockRejectedValue(new Error('API Error'));\n      \n      renderReleaseList();\n      \n      await waitFor(() => {\n        expect(screen.getByText('릴리즈가 없습니다.')).toBeInTheDocument();\n      });\n    });\n  });\n\n  describe('검색 기능 테스트', () => {\n    beforeEach(async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      renderReleaseList();\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n    });\n\n    it('검색어 입력 시 필터링이 정상 동작해야 함', async () => {\n      const searchInput = screen.getByTestId('release-search-input');\n      \n      // 검색어 입력\n      fireEvent.change(searchInput, { target: { value: '기능' } });\n      \n      // 필터링 결과 확인\n      expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      expect(screen.queryByText('v2.0.5 - 버그 수정')).not.toBeInTheDocument();\n    });\n\n    it('대소문자 구분 없이 검색이 동작해야 함', async () => {\n      const searchInput = screen.getByTestId('release-search-input');\n      \n      // 대문자로 검색\n      fireEvent.change(searchInput, { target: { value: 'V2.1' } });\n      \n      // 필터링 결과 확인\n      expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n    });\n\n    it('설명에서도 검색이 가능해야 함', async () => {\n      const searchInput = screen.getByTestId('release-search-input');\n      \n      // 설명에서 검색\n      fireEvent.change(searchInput, { target: { value: '새로운' } });\n      \n      // 필터링 결과 확인\n      expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n    });\n  });\n\n  describe('필터 기능 테스트', () => {\n    beforeEach(async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      renderReleaseList();\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n    });\n\n    it('전체 필터 버튼이 정상 동작해야 함', () => {\n      const allFilterButton = screen.getByTestId('release-filter-all');\n      \n      fireEvent.click(allFilterButton);\n      \n      // 모든 릴리즈가 표시되어야 함\n      expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      expect(screen.getByText('v2.0.5 - 버그 수정')).toBeInTheDocument();\n      expect(screen.getByText('v2.0.4 - 보안 패치')).toBeInTheDocument();\n      expect(screen.getByText('v2.0.3 - 성능 최적화')).toBeInTheDocument();\n    });\n\n    it('진행 중 필터가 정상 동작해야 함', () => {\n      const activeFilterButton = screen.getByTestId('release-filter-active');\n      \n      fireEvent.click(activeFilterButton);\n      \n      // 진행 중인 릴리즈만 표시\n      expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      expect(screen.queryByText('v2.0.5 - 버그 수정')).not.toBeInTheDocument();\n    });\n\n    it('완료 필터가 정상 동작해야 함', () => {\n      const completedFilterButton = screen.getByTestId('release-filter-completed');\n      \n      fireEvent.click(completedFilterButton);\n      \n      // 완료된 릴리즈만 표시\n      expect(screen.getByText('v2.0.4 - 보안 패치')).toBeInTheDocument();\n      expect(screen.getByText('v2.0.3 - 성능 최적화')).toBeInTheDocument();\n      expect(screen.queryByText('v2.1.0 - 기능 개선')).not.toBeInTheDocument();\n    });\n  });\n\n  describe('선택 기능 테스트', () => {\n    beforeEach(async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      renderReleaseList();\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n    });\n\n    it('릴리즈 클릭 시 선택 상태가 변경되어야 함', async () => {\n      const releaseItems = screen.getAllByTestId('release-item-1');\n      const releaseItem = releaseItems[0]; // 첫 번째 요소 사용\n      \n      fireEvent.click(releaseItem);\n      \n      // 선택된 릴리즈가 하이라이트되어야 함 (aria-label로 확인)\n      expect(releaseItem).toHaveAttribute('aria-label', '릴리즈 v2.1.0 - 기능 개선');\n    });\n\n    it('선택된 릴리즈 ID가 store에 저장되어야 함', async () => {\n      const { store } = renderReleaseList();\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n      \n      const releaseItems = screen.getAllByTestId('release-item-2');\n      const releaseItem = releaseItems[0]; // 첫 번째 요소 사용\n      fireEvent.click(releaseItem);\n      \n      // store 상태 확인 (비동기 업데이트 대기)\n      await waitFor(() => {\n        const state = store.getState();\n        expect(state.dashboardLayout.selectedReleaseId).toBe('2');\n      });\n    });\n\n    it('키보드로도 릴리즈를 선택할 수 있어야 함', async () => {\n      const releaseItems = screen.getAllByTestId('release-item-1');\n      const releaseItem = releaseItems[0]; // 첫 번째 요소 사용\n      \n      // Enter 키로 선택\n      fireEvent.keyDown(releaseItem, { key: 'Enter', code: 'Enter' });\n      \n      // 선택 상태 확인 (배경색 대신 선택된 상태 확인)\n      expect(releaseItem).toHaveAttribute('aria-label', '릴리즈 v2.1.0 - 기능 개선');\n    });\n  });\n\n  describe('검색과 필터 조합 테스트', () => {\n    beforeEach(async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      renderReleaseList();\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n    });\n\n    it('검색어와 필터가 동시에 적용되어야 함', () => {\n      const searchInput = screen.getByTestId('release-search-input');\n      const completedFilterButton = screen.getByTestId('release-filter-completed');\n      \n      // 완료 필터 적용\n      fireEvent.click(completedFilterButton);\n      \n      // 검색어 입력\n      fireEvent.change(searchInput, { target: { value: '보안' } });\n      \n      // 결과 확인 (완료 + 보안 포함)\n      expect(screen.getByText('v2.0.4 - 보안 패치')).toBeInTheDocument();\n      expect(screen.queryByText('v2.0.3 - 성능 최적화')).not.toBeInTheDocument();\n    });\n\n    it('검색어를 지우면 필터만 적용된 결과가 표시되어야 함', () => {\n      const searchInput = screen.getByTestId('release-search-input');\n      const completedFilterButton = screen.getByTestId('release-filter-completed');\n      \n      // 완료 필터 적용\n      fireEvent.click(completedFilterButton);\n      \n      // 검색어 입력 후 지우기\n      fireEvent.change(searchInput, { target: { value: '보안' } });\n      fireEvent.change(searchInput, { target: { value: '' } });\n      \n      // 완료된 모든 릴리즈가 표시되어야 함\n      expect(screen.getByText('v2.0.4 - 보안 패치')).toBeInTheDocument();\n      expect(screen.getByText('v2.0.3 - 성능 최적화')).toBeInTheDocument();\n    });\n  });\n\n  describe('접근성 테스트', () => {\n    beforeEach(async () => {\n      mockAxios.get.mockResolvedValue({ data: mockReleases });\n      renderReleaseList();\n      await waitFor(() => {\n        expect(screen.getByText('v2.1.0 - 기능 개선')).toBeInTheDocument();\n      });\n    });\n\n    it('검색 입력창에 접근성 속성이 있어야 함', () => {\n      const searchInput = screen.getByTestId('release-search-input');\n      expect(searchInput).toHaveAttribute('placeholder', '릴리즈 검색...');\n    });\n\n    it('릴리즈 아이템에 접근성 속성이 있어야 함', () => {\n      const releaseItems = screen.getAllByTestId('release-item-1');\n      const releaseItem = releaseItems[0]; // 첫 번째 요소 사용\n      expect(releaseItem).toHaveAttribute('aria-label', '릴리즈 v2.1.0 - 기능 개선');\n      expect(releaseItem).toHaveAttribute('tabIndex', '0');\n    });\n\n    it('필터 버튼들이 접근 가능해야 함', () => {\n      const allFilterButton = screen.getByTestId('release-filter-all');\n      const activeFilterButton = screen.getByTestId('release-filter-active');\n      \n      expect(allFilterButton).toBeInTheDocument();\n      expect(activeFilterButton).toBeInTheDocument();\n    });\n  });\n}); "],"version":3}