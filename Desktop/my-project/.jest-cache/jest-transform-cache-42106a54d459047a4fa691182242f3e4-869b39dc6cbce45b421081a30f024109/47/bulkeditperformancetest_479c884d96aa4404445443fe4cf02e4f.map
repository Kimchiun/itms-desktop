{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/bulk-edit.performance.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/bulk-edit.performance.test.tsx"],"sourcesContent":["import React from 'react';\nimport { render, screen, fireEvent, waitFor } from '@testing-library/react';\nimport '@testing-library/jest-dom';\nimport TestCaseList from '../src/renderer/features/TestCaseManagement/components/TestCaseList';\nimport BulkEditModal from '../src/renderer/features/TestCaseManagement/components/BulkEditModal';\n\n// Mock Redux store\njest.mock('react-redux', () => ({\n  useDispatch: () => jest.fn(),\n  useSelector: (selector: any) => {\n    // 1000개의 테스트케이스 생성\n    const testCases = Array.from({ length: 1000 }, (_, i) => ({\n      id: i + 1,\n      title: `테스트케이스 ${i + 1}`,\n      status: 'Active' as const,\n      priority: 'Medium' as const,\n      createdBy: 'tester',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      steps: ['스텝 1', '스텝 2'],\n      expected: '기대결과',\n      tags: ['tag1', 'tag2']\n    }));\n    \n    return {\n      testcases: {\n        list: testCases,\n        loading: false,\n        error: null\n      }\n    };\n  }\n}));\n\ndescribe('대용량 데이터 성능 테스트', () => {\n  beforeEach(() => {\n    jest.clearAllMocks();\n  });\n\n  describe('TestCaseList 렌더링 성능', () => {\n    it('1000개 테스트케이스를 2초 이내에 렌더링한다', () => {\n      const startTime = performance.now();\n      \n      render(<TestCaseList />);\n      \n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n      \n      expect(renderTime).toBeLessThan(2000);\n      expect(screen.getByText('테스트 케이스 목록')).toBeInTheDocument();\n    });\n\n    it('체크박스 선택 시 즉시 반응한다', async () => {\n      render(<TestCaseList />);\n      \n      const startTime = performance.now();\n      \n      const checkboxes = screen.getAllByRole('checkbox');\n      fireEvent.click(checkboxes[1]); // 첫 번째 행 선택\n      \n      const endTime = performance.now();\n      const responseTime = endTime - startTime;\n      \n      expect(responseTime).toBeLessThan(100); // 100ms 이내\n      expect(checkboxes[1]).toBeChecked();\n    });\n\n    it('Shift+클릭 범위 선택이 빠르게 동작한다', async () => {\n      render(<TestCaseList />);\n      \n      const checkboxes = screen.getAllByRole('checkbox');\n      \n      const startTime = performance.now();\n      \n      // 첫 번째 행 선택\n      fireEvent.click(checkboxes[1]);\n      \n      // Shift+클릭으로 10번째 행까지 범위 선택\n      fireEvent.click(checkboxes[10], { shiftKey: true });\n      \n      const endTime = performance.now();\n      const responseTime = endTime - startTime;\n      \n      expect(responseTime).toBeLessThan(200); // 200ms 이내\n      \n      // 1번부터 10번까지 모두 선택되었는지 확인\n      for (let i = 1; i <= 10; i++) {\n        expect(checkboxes[i]).toBeChecked();\n      }\n    });\n  });\n\n  describe('BulkEditModal 성능', () => {\n    const mockSelectedCases = Array.from({ length: 100 }, (_, i) => ({\n      id: i + 1,\n      title: `테스트케이스 ${i + 1}`,\n      status: 'Active' as const,\n      priority: 'Medium' as const,\n      createdBy: 'tester',\n      createdAt: new Date(),\n      updatedAt: new Date(),\n      steps: ['스텝 1', '스텝 2'],\n      expected: '기대결과',\n      tags: ['tag1', 'tag2']\n    }));\n\n    it('100개 선택된 케이스로 모달을 1초 이내에 렌더링한다', () => {\n      const startTime = performance.now();\n      \n      render(\n        <BulkEditModal\n          isOpen={true}\n          onClose={jest.fn()}\n          selectedCases={mockSelectedCases}\n          onApply={jest.fn()}\n        />\n      );\n      \n      const endTime = performance.now();\n      const renderTime = endTime - startTime;\n      \n      expect(renderTime).toBeLessThan(1000);\n      expect(screen.getByText('일괄 편집 (100개 선택)')).toBeInTheDocument();\n    });\n\n    it('일괄 편집 적용이 빠르게 동작한다', async () => {\n      const mockOnApply = jest.fn();\n      \n      render(\n        <BulkEditModal\n          isOpen={true}\n          onClose={jest.fn()}\n          selectedCases={mockSelectedCases}\n          onApply={mockOnApply}\n        />\n      );\n\n      // 상태 변경 체크박스 선택\n      const statusCheckbox = screen.getByLabelText('상태 변경');\n      fireEvent.click(statusCheckbox);\n\n      // 상태 선택\n      const statusSelect = screen.getByDisplayValue('선택하세요');\n      fireEvent.change(statusSelect, { target: { value: 'Inactive' } });\n\n      const startTime = performance.now();\n      \n      // 적용 버튼 클릭\n      const applyButton = screen.getByText('적용 (1개 필드)');\n      fireEvent.click(applyButton);\n      \n      const endTime = performance.now();\n      const responseTime = endTime - startTime;\n      \n      expect(responseTime).toBeLessThan(500); // 500ms 이내\n      expect(mockOnApply).toHaveBeenCalledWith({ status: 'Inactive' });\n    });\n  });\n\n  describe('메모리 사용량', () => {\n    it('1000개 테스트케이스 렌더링 후 메모리 누수가 없다', () => {\n      const initialMemory = (performance as any).memory?.usedJSHeapSize || 0;\n      \n      const { unmount } = render(<TestCaseList />);\n      \n      // 컴포넌트 언마운트\n      unmount();\n      \n      // 가비지 컬렉션 강제 실행 (실제로는 불가능하지만 테스트 목적)\n      if (global.gc) {\n        global.gc();\n      }\n      \n      const finalMemory = (performance as any).memory?.usedJSHeapSize || 0;\n      const memoryIncrease = finalMemory - initialMemory;\n      \n      // 메모리 증가가 10MB 이내여야 함\n      expect(memoryIncrease).toBeLessThan(10 * 1024 * 1024);\n    });\n  });\n\n  describe('인라인 편집 성능', () => {\n    it('편집 모드 진입이 100ms 이내에 완료된다', () => {\n      render(<TestCaseList />);\n      \n      const editableCells = screen.getAllByText(/테스트케이스/);\n      \n      const startTime = performance.now();\n      \n      fireEvent.click(editableCells[0]);\n      \n      const endTime = performance.now();\n      const responseTime = endTime - startTime;\n      \n      expect(responseTime).toBeLessThan(100);\n      expect(screen.getByDisplayValue('테스트케이스 1')).toBeInTheDocument();\n    });\n\n    it('자동저장 debounce가 정확히 500ms로 동작한다', async () => {\n      jest.useFakeTimers();\n      \n      render(<TestCaseList />);\n      \n      const editableCells = screen.getAllByText(/테스트케이스/);\n      fireEvent.click(editableCells[0]);\n      \n      const input = screen.getByDisplayValue('테스트케이스 1');\n      fireEvent.change(input, { target: { value: '새 제목' } });\n      \n      // 499ms 후에는 저장되지 않음\n      jest.advanceTimersByTime(499);\n      expect(screen.getByDisplayValue('새 제목')).toBeInTheDocument();\n      \n      // 500ms 후 저장됨\n      jest.advanceTimersByTime(1);\n      await waitFor(() => {\n        expect(screen.getByText('저장됨')).toBeInTheDocument();\n      });\n      \n      jest.useRealTimers();\n    });\n  });\n}); "],"version":3}