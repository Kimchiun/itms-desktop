{"file":"/Users/3i-a1-2021-017/Desktop/my-project/tests/dashboard.layout.test.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/tests/dashboard.layout.test.tsx"],"sourcesContent":["import '@testing-library/jest-dom';\nimport React from 'react';\nimport { render, screen, fireEvent } from '@testing-library/react';\nimport { Provider } from 'react-redux';\nimport { store } from '../src/renderer/store';\nimport DashboardLayout from '../src/renderer/features/Dashboard/components/DashboardLayout';\n\n// Mock the panel components\njest.mock('../src/renderer/features/Dashboard/components/LeftPanel', () => {\n  return function MockLeftPanel() {\n    return <div data-testid=\"left-panel\">Left Panel</div>;\n  };\n});\n\njest.mock('../src/renderer/features/Dashboard/components/CenterPanel', () => {\n  return function MockCenterPanel() {\n    return <div data-testid=\"center-panel\">Center Panel</div>;\n  };\n});\n\njest.mock('../src/renderer/features/Dashboard/components/RightPanel', () => {\n  return function MockRightPanel() {\n    return <div data-testid=\"right-panel\">Right Panel</div>;\n  };\n});\n\ndescribe('DashboardLayout', () => {\n  const renderWithProvider = (component: React.ReactElement) => {\n    return render(\n      <Provider store={store}>\n        {component}\n      </Provider>\n    );\n  };\n\n  it('3분할 레이아웃이 정상적으로 렌더링된다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    expect(screen.getByTestId('left-panel')).toBeInTheDocument();\n    expect(screen.getByTestId('center-panel')).toBeInTheDocument();\n    expect(screen.getByTestId('right-panel')).toBeInTheDocument();\n  });\n\n  it('좌측 패널 토글 버튼이 존재한다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const toggleButtons = screen.getAllByRole('button');\n    const leftToggleButton = toggleButtons.find(button => \n      button.getAttribute('position') === 'left'\n    );\n    expect(leftToggleButton).toBeInTheDocument();\n  });\n\n  it('우측 패널 토글 버튼이 존재한다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const toggleButtons = screen.getAllByRole('button');\n    const rightToggleButton = toggleButtons.find(button => \n      button.getAttribute('position') === 'right'\n    );\n    expect(rightToggleButton).toBeInTheDocument();\n  });\n\n  it('좌측 패널 토글 버튼 클릭 시 상태가 변경된다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const toggleButtons = screen.getAllByRole('button');\n    const leftToggleButton = toggleButtons.find(button => \n      button.getAttribute('position') === 'left'\n    );\n    \n    if (leftToggleButton) {\n      fireEvent.click(leftToggleButton);\n      \n      // 버튼이 존재하는지 확인 (상태 변경 후에도 버튼이 유지됨)\n      expect(screen.getAllByRole('button')).toHaveLength(2);\n    }\n  });\n\n  it('우측 패널 토글 버튼 클릭 시 상태가 변경된다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const toggleButtons = screen.getAllByRole('button');\n    const rightToggleButton = toggleButtons.find(button => \n      button.getAttribute('position') === 'right'\n    );\n    \n    if (rightToggleButton) {\n      fireEvent.click(rightToggleButton);\n      \n      // 버튼이 존재하는지 확인 (상태 변경 후에도 버튼이 유지됨)\n      expect(screen.getAllByRole('button')).toHaveLength(2);\n    }\n  });\n\n  it('레이아웃이 100vh 높이를 가진다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const layoutContainer = screen.getByTestId('left-panel').parentElement?.parentElement;\n    expect(layoutContainer).toHaveStyle({ height: '100vh' });\n  });\n\n  it('접근성 속성이 포함되어 있다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const toggleButtons = screen.getAllByRole('button');\n    expect(toggleButtons).toHaveLength(2);\n    \n    toggleButtons.forEach(button => {\n      expect(button).toBeInTheDocument();\n    });\n  });\n\n  it('패널 축소/확장 애니메이션이 적용되어 있다', () => {\n    renderWithProvider(<DashboardLayout />);\n    \n    const layoutContainer = screen.getByTestId('left-panel').parentElement?.parentElement;\n    expect(layoutContainer).toHaveStyle({ transition: 'grid-template-columns 0.3s ease' });\n  });\n}); "],"version":3}