d8f89aee078bd26de935440b84b8addb
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const react_redux_1 = require("react-redux");
const axios_1 = __importDefault(require("../../../utils/axios"));
const TestCaseList_1 = __importDefault(require("./TestCaseList"));
const DefectList_1 = __importDefault(require("./DefectList"));
const ReportOverview_1 = __importDefault(require("./ReportOverview"));
const Container = styled_components_1.default.div `
  padding: 20px;
  height: 100%;
  overflow-y: auto;
`;
const Header = styled_components_1.default.div `
  margin-bottom: 24px;
`;
const Title = styled_components_1.default.h1 `
  margin: 0 0 8px 0;
  font-size: 24px;
  font-weight: 600;
  color: #1e293b;
`;
const Subtitle = styled_components_1.default.p `
  margin: 0;
  color: #64748b;
  font-size: 14px;
`;
const TabContainer = styled_components_1.default.div `
  margin-bottom: 20px;
`;
const TabList = styled_components_1.default.div `
  display: flex;
  border-bottom: 1px solid #e2e8f0;
  margin-bottom: 20px;
`;
const TabButton = styled_components_1.default.button `
  padding: 12px 24px;
  border: none;
  background: ${({ active }) => (active ? '#3b82f6' : 'transparent')};
  color: ${({ active }) => (active ? 'white' : '#64748b')};
  font-weight: 500;
  cursor: pointer;
  border-radius: 6px 6px 0 0;
  transition: all 0.2s;
  
  &:hover {
    background: ${({ active }) => (active ? '#2563eb' : '#f1f5f9')};
    color: ${({ active }) => (active ? 'white' : '#1e293b')};
  }
`;
const TabContent = styled_components_1.default.div `
  min-height: 400px;
`;
const LoadingSpinner = styled_components_1.default.div `
  text-align: center;
  padding: 40px;
  color: #64748b;
`;
const ErrorMessage = styled_components_1.default.div `
  text-align: center;
  padding: 40px;
  color: #ef4444;
`;
const NoSelection = styled_components_1.default.div `
  text-align: center;
  padding: 40px;
  color: #64748b;
`;
const tabs = [
    { id: 'testcases', label: '테스트케이스', icon: '🧪' },
    { id: 'defects', label: '결함', icon: '🐛' },
    { id: 'reports', label: '보고서', icon: '📊' }
];
const CentralReleaseDetail = () => {
    const selectedReleaseId = (0, react_redux_1.useSelector)((state) => state.dashboardLayout.selectedReleaseId);
    const [selectedRelease, setSelectedRelease] = (0, react_1.useState)(null);
    const [activeTab, setActiveTab] = (0, react_1.useState)('testcases');
    const [tabData, setTabData] = (0, react_1.useState)({
        testCases: [],
        defects: [],
        reports: {}
    });
    const [loading, setLoading] = (0, react_1.useState)(false);
    const [error, setError] = (0, react_1.useState)(null);
    // 릴리즈 상세 정보 로드
    (0, react_1.useEffect)(() => {
        if (selectedReleaseId) {
            setLoading(true);
            setError(null);
            axios_1.default.get(`/api/releases/${selectedReleaseId}`)
                .then((res) => {
                setSelectedRelease(res.data);
                setLoading(false);
            })
                .catch(() => {
                setSelectedRelease(null);
                setError('릴리즈 정보를 불러올 수 없습니다.');
                setLoading(false);
            });
        }
        else {
            setSelectedRelease(null);
            setTabData({ testCases: [], defects: [], reports: {} });
        }
    }, [selectedReleaseId]);
    // 탭별 데이터 로드
    (0, react_1.useEffect)(() => {
        if (selectedReleaseId && activeTab) {
            loadTabData(selectedReleaseId, activeTab);
        }
    }, [selectedReleaseId, activeTab]);
    const loadTabData = async (releaseId, tab) => {
        try {
            switch (tab) {
                case 'testcases':
                    const testCasesRes = await axios_1.default.get(`/api/releases/${releaseId}/testcases`);
                    setTabData(prev => ({ ...prev, testCases: testCasesRes.data }));
                    break;
                case 'defects':
                    const defectsRes = await axios_1.default.get(`/api/releases/${releaseId}/defects`);
                    setTabData(prev => ({ ...prev, defects: defectsRes.data }));
                    break;
                case 'reports':
                    const reportsRes = await axios_1.default.get(`/api/releases/${releaseId}/reports`);
                    setTabData(prev => ({ ...prev, reports: reportsRes.data }));
                    break;
            }
        }
        catch (error) {
            console.error(`${tab} 데이터 로드 실패:`, error);
        }
    };
    const handleTabChange = (tabId) => {
        setActiveTab(tabId);
    };
    const renderTabContent = () => {
        if (!selectedReleaseId) {
            return ((0, jsx_runtime_1.jsxs)(NoSelection, { children: [(0, jsx_runtime_1.jsx)("h3", { children: "\uB9B4\uB9AC\uC988\uB97C \uC120\uD0DD\uD574\uC8FC\uC138\uC694" }), (0, jsx_runtime_1.jsx)("p", { children: "\uC88C\uCE21 \uD328\uB110\uC5D0\uC11C \uB9B4\uB9AC\uC988\uB97C \uC120\uD0DD\uD558\uBA74 \uC0C1\uC138 \uC815\uBCF4\uB97C \uD655\uC778\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4." })] }));
        }
        if (loading) {
            return (0, jsx_runtime_1.jsx)(LoadingSpinner, { children: "\uB370\uC774\uD130\uB97C \uBD88\uB7EC\uC624\uB294 \uC911..." });
        }
        if (error) {
            return (0, jsx_runtime_1.jsx)(ErrorMessage, { children: error });
        }
        switch (activeTab) {
            case 'testcases':
                return ((0, jsx_runtime_1.jsx)(TestCaseList_1.default, { releaseId: selectedReleaseId, testCases: tabData.testCases, onDataChange: () => loadTabData(selectedReleaseId, 'testcases') }));
            case 'defects':
                return ((0, jsx_runtime_1.jsx)(DefectList_1.default, { releaseId: selectedReleaseId, defects: tabData.defects, onDataChange: () => loadTabData(selectedReleaseId, 'defects') }));
            case 'reports':
                return ((0, jsx_runtime_1.jsx)(ReportOverview_1.default, { releaseId: selectedReleaseId, reports: tabData.reports }));
            default:
                return (0, jsx_runtime_1.jsx)("div", { children: "\uC54C \uC218 \uC5C6\uB294 \uD0ED\uC785\uB2C8\uB2E4." });
        }
    };
    const statusLabels = {
        active: '진행 중',
        pending: '대기 중',
        completed: '완료'
    };
    if (!selectedReleaseId) {
        return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsxs)(Header, { children: [(0, jsx_runtime_1.jsx)(Title, { children: "\uB9B4\uB9AC\uC988 \uC0C1\uC138" }), (0, jsx_runtime_1.jsx)(Subtitle, { children: "\uB9B4\uB9AC\uC988\uBCC4 \uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4, \uACB0\uD568, \uBCF4\uACE0\uC11C\uB97C \uD655\uC778\uD558\uC138\uC694" })] }), (0, jsx_runtime_1.jsxs)(NoSelection, { children: [(0, jsx_runtime_1.jsx)("h3", { children: "\uB9B4\uB9AC\uC988\uB97C \uC120\uD0DD\uD574\uC8FC\uC138\uC694" }), (0, jsx_runtime_1.jsx)("p", { children: "\uC88C\uCE21 \uD328\uB110\uC5D0\uC11C \uB9B4\uB9AC\uC988\uB97C \uC120\uD0DD\uD558\uBA74 \uC0C1\uC138 \uC815\uBCF4\uB97C \uD655\uC778\uD560 \uC218 \uC788\uC2B5\uB2C8\uB2E4." })] })] }));
    }
    return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsxs)(Header, { children: [(0, jsx_runtime_1.jsx)(Title, { children: "\uB9B4\uB9AC\uC988 \uC0C1\uC138" }), (0, jsx_runtime_1.jsx)(Subtitle, { children: "\uB9B4\uB9AC\uC988\uBCC4 \uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4, \uACB0\uD568, \uBCF4\uACE0\uC11C\uB97C \uD655\uC778\uD558\uC138\uC694" })] }), selectedRelease && ((0, jsx_runtime_1.jsxs)("div", { style: { marginBottom: '20px', padding: '16px', background: 'white', borderRadius: '8px', border: '1px solid #e2e8f0' }, children: [(0, jsx_runtime_1.jsxs)("div", { style: { display: 'flex', justifyContent: 'space-between', alignItems: 'center', marginBottom: '8px' }, children: [(0, jsx_runtime_1.jsx)("h2", { style: { margin: 0, fontSize: '18px', fontWeight: 600 }, children: selectedRelease.title }), (0, jsx_runtime_1.jsx)("span", { style: {
                                    padding: '4px 12px',
                                    borderRadius: '12px',
                                    fontSize: '12px',
                                    fontWeight: 500,
                                    color: selectedRelease.status === 'active' ? '#059669' : selectedRelease.status === 'pending' ? '#d97706' : '#7c3aed',
                                    background: selectedRelease.status === 'active' ? '#d1fae5' : selectedRelease.status === 'pending' ? '#fed7aa' : '#e9d5ff'
                                }, children: statusLabels[selectedRelease.status] })] }), selectedRelease.description && ((0, jsx_runtime_1.jsx)("p", { style: { margin: 0, color: '#64748b', fontSize: '14px' }, children: selectedRelease.description }))] })), (0, jsx_runtime_1.jsxs)(TabContainer, { children: [(0, jsx_runtime_1.jsx)(TabList, { children: tabs.map((tab) => ((0, jsx_runtime_1.jsxs)(TabButton, { active: activeTab === tab.id, onClick: () => handleTabChange(tab.id), "data-testid": `tab-${tab.id}`, children: [tab.icon, " ", tab.label] }, tab.id))) }), (0, jsx_runtime_1.jsx)(TabContent, { children: renderTabContent() })] })] }));
};
exports.default = CentralReleaseDetail;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,