559768d5cbeeabac643a9cd4dff40d79
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
// Mock the panel components
jest.mock('../src/renderer/features/Dashboard/components/LeftPanel', () => {
    return function MockLeftPanel() {
        return (0, jsx_runtime_1.jsx)("div", { "data-testid": "left-panel", children: "Left Panel" });
    };
});
jest.mock('../src/renderer/features/Dashboard/components/CenterPanel', () => {
    return function MockCenterPanel() {
        return (0, jsx_runtime_1.jsx)("div", { "data-testid": "center-panel", children: "Center Panel" });
    };
});
jest.mock('../src/renderer/features/Dashboard/components/RightPanel', () => {
    return function MockRightPanel() {
        return (0, jsx_runtime_1.jsx)("div", { "data-testid": "right-panel", children: "Right Panel" });
    };
});
require("@testing-library/jest-dom");
const react_1 = require("@testing-library/react");
const react_redux_1 = require("react-redux");
const store_1 = require("../src/renderer/store");
const DashboardLayout_1 = __importDefault(require("../src/renderer/features/Dashboard/components/DashboardLayout"));
describe('DashboardLayout', () => {
    const renderWithProvider = (component) => {
        return (0, react_1.render)((0, jsx_runtime_1.jsx)(react_redux_1.Provider, { store: store_1.store, children: component }));
    };
    it('3분할 레이아웃이 정상적으로 렌더링된다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        expect(react_1.screen.getByTestId('left-panel')).toBeInTheDocument();
        expect(react_1.screen.getByTestId('center-panel')).toBeInTheDocument();
        expect(react_1.screen.getByTestId('right-panel')).toBeInTheDocument();
    });
    it('좌측 패널 토글 버튼이 존재한다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
        expect(leftToggleButton).toBeInTheDocument();
    });
    it('우측 패널 토글 버튼이 존재한다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        const rightToggleButton = react_1.screen.getByRole('button', { name: /→/ });
        expect(rightToggleButton).toBeInTheDocument();
    });
    it('좌측 패널 토글 버튼 클릭 시 상태가 변경된다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        const leftToggleButton = react_1.screen.getByRole('button', { name: /←/ });
        react_1.fireEvent.click(leftToggleButton);
        // 버튼 텍스트가 변경되는지 확인
        expect(react_1.screen.getByRole('button', { name: /→/ })).toBeInTheDocument();
    });
    it('우측 패널 토글 버튼 클릭 시 상태가 변경된다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        const rightToggleButton = react_1.screen.getByRole('button', { name: /→/ });
        react_1.fireEvent.click(rightToggleButton);
        // 버튼 텍스트가 변경되는지 확인
        expect(react_1.screen.getByRole('button', { name: /←/ })).toBeInTheDocument();
    });
    it('레이아웃이 100vh 높이를 가진다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        const layoutContainer = react_1.screen.getByTestId('left-panel').parentElement?.parentElement;
        expect(layoutContainer).toHaveStyle({ height: '100vh' });
    });
    it('접근성 속성이 포함되어 있다', () => {
        renderWithProvider((0, jsx_runtime_1.jsx)(DashboardLayout_1.default, {}));
        const toggleButtons = react_1.screen.getAllByRole('button');
        toggleButtons.forEach(button => {
            expect(button).toBeInTheDocument();
        });
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,