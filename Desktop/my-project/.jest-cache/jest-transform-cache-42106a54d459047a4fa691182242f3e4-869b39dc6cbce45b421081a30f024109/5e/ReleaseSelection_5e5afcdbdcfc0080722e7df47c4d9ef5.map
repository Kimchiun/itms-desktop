{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ReleasePlanning/components/ReleaseSelection.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ReleasePlanning/components/ReleaseSelection.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Typography from '../../../shared/components/Typography';\nimport Container from '../../../shared/components/Container';\nimport Grid from '../../../shared/components/Grid';\nimport Button from '../../../shared/components/Button';\nimport Input from '../../../shared/components/Input';\n\nconst PageContainer = styled.div`\n  padding: 24px;\n  background: #f8fafc;\n  min-height: 100vh;\n`;\n\nconst ReleaseCard = styled.div`\n  padding: 16px;\n  background: white;\n  border-radius: 8px;\n  border: 1px solid #e2e8f0;\n  margin-bottom: 16px;\n  cursor: pointer;\n  transition: all 0.2s ease;\n\n  &:hover {\n    box-shadow: 0 4px 12px rgba(0,0,0,0.1);\n  }\n`;\n\nconst ReleaseTitle = styled.div`\n  font-size: 18px;\n  font-weight: 600;\n  color: #1e293b;\n  margin-bottom: 8px;\n`;\n\nconst ReleaseInfo = styled.div`\n  font-size: 14px;\n  color: #64748b;\n`;\n\nconst ReleaseSelection: React.FC = () => {\n  const [releases, setReleases] = useState<any[]>([]);\n  const [selectedRelease, setSelectedRelease] = useState<any>(null);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    fetchReleases();\n  }, []);\n\n  const fetchReleases = async () => {\n    setLoading(true);\n    try {\n      const response = await fetch('http://localhost:3000/api/releases');\n      if (response.ok) {\n        const data = await response.json();\n        setReleases(data);\n      }\n    } catch (error) {\n      console.error('릴리즈 로드 실패:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleReleaseSelect = (release: any) => {\n    setSelectedRelease(release);\n  };\n\n  const handleCreateRelease = async (formData: any) => {\n    try {\n      const response = await fetch('http://localhost:3000/api/releases', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify(formData)\n      });\n      if (response.ok) {\n        await fetchReleases();\n      }\n    } catch (error) {\n      console.error('릴리즈 생성 실패:', error);\n    }\n  };\n\n  return (\n    <PageContainer>\n      <Container\n        $maxWidth=\"1200px\"\n        $padding=\"24px\"\n        $background=\"white\"\n        $radius=\"8px\"\n        style={{ margin: '0 auto', boxShadow: '0 2px 16px rgba(0,0,0,0.08)' }}\n      >\n        <Grid\n          $columns={1}\n          $gap=\"16px\"\n        >\n          <Typography $variant=\"h2\" style={{ marginBottom: '24px' }}>\n            릴리즈 계획\n          </Typography>\n\n          {loading ? (\n            <Typography $variant=\"body\">로딩 중...</Typography>\n          ) : (\n            <Grid\n              $columns={2}\n              $gap=\"16px\"\n            >\n              <div>\n                <Typography $variant=\"h4\" style={{ marginBottom: '16px' }}>\n                  릴리즈 목록\n                </Typography>\n                {releases.map((release) => (\n                  <ReleaseCard\n                    key={release.id}\n                    onClick={() => handleReleaseSelect(release)}\n                    style={{\n                      borderColor: selectedRelease?.id === release.id ? '#2563eb' : '#e2e8f0'\n                    }}\n                  >\n                    <ReleaseTitle>{release.name}</ReleaseTitle>\n                    <ReleaseInfo>\n                      시작일: {release.startDate} | 종료일: {release.endDate}\n                    </ReleaseInfo>\n                  </ReleaseCard>\n                ))}\n              </div>\n\n              <div>\n                <Typography $variant=\"h4\" style={{ marginBottom: '16px' }}>\n                  선택된 릴리즈\n                </Typography>\n                {selectedRelease ? (\n                  <ReleaseCard>\n                    <ReleaseTitle>{selectedRelease.name}</ReleaseTitle>\n                    <ReleaseInfo>\n                      <div>시작일: {selectedRelease.startDate}</div>\n                      <div>종료일: {selectedRelease.endDate}</div>\n                      <div>상태: {selectedRelease.status}</div>\n                    </ReleaseInfo>\n                  </ReleaseCard>\n                ) : (\n                  <Typography $variant=\"body\" style={{ color: '#64748b' }}>\n                    릴리즈를 선택해주세요\n                  </Typography>\n                )}\n              </div>\n            </Grid>\n          )}\n        </Grid>\n      </Container>\n    </PageContainer>\n  );\n};\n\nexport default ReleaseSelection; "],"version":3}