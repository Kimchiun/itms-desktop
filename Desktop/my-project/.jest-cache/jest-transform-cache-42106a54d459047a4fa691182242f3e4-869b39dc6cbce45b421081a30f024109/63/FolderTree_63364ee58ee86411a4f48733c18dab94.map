{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/FolderManagement/components/FolderTree.tsx","mappings":";;;;;;AAAA,iCAAmD;AACnD,sDAA2B;AAC3B,0EAAuC;AAGvC,MAAM,aAAa,GAAG,2BAAM,CAAC,GAAG,CAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA8B/B,CAAC;AAEF,MAAM,UAAU,GAAG,2BAAM,CAAC,GAAG,CAAA;;;;CAI5B,CAAC;AAEF,MAAM,UAAU,GAAG,2BAAM,CAAC,IAAI,CAAA;;CAE7B,CAAC;AAEF,MAAM,aAAa,GAAG,2BAAM,CAAC,IAAI,CAAA;;;;;;;CAOhC,CAAC;AAOF,MAAM,mBAAmB,GAA8B,CAAC,EACtD,cAAc,EACd,gBAAgB,EACjB,EAAE,EAAE;IACH,MAAM,CAAC,QAAQ,EAAE,WAAW,CAAC,GAAG,IAAA,gBAAQ,EAAQ,EAAE,CAAC,CAAC;IACpD,MAAM,CAAC,OAAO,EAAE,UAAU,CAAC,GAAG,IAAA,gBAAQ,EAAC,IAAI,CAAC,CAAC;IAE7C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,eAAe,EAAE,CAAC;IACpB,CAAC,EAAE,EAAE,CAAC,CAAC;IAEP,MAAM,eAAe,GAAG,KAAK,IAAI,EAAE;QACjC,IAAI,CAAC;YACH,MAAM,QAAQ,GAAG,MAAM,KAAK,CAAC,wCAAwC,CAAC,CAAC;YACvE,IAAI,QAAQ,CAAC,EAAE,EAAE,CAAC;gBAChB,MAAM,IAAI,GAAG,MAAM,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACnC,MAAM,aAAa,GAAG,cAAc,CAAC,IAAI,CAAC,CAAC;gBAC3C,WAAW,CAAC,aAAa,CAAC,CAAC;YAC7B,CAAC;iBAAM,CAAC;gBACN,OAAO,CAAC,KAAK,CAAC,aAAa,CAAC,CAAC;YAC/B,CAAC;QACH,CAAC;QAAC,OAAO,KAAK,EAAE,CAAC;YACf,OAAO,CAAC,KAAK,CAAC,cAAc,EAAE,KAAK,CAAC,CAAC;QACvC,CAAC;gBAAS,CAAC;YACT,UAAU,CAAC,KAAK,CAAC,CAAC;QACpB,CAAC;IACH,CAAC,CAAC;IAEF,MAAM,cAAc,GAAG,CAAC,OAAqB,EAAS,EAAE;QACtD,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,EAAE,MAAM,CAAC,EAAE,CAAC,QAAQ,EAAE;YACzB,KAAK,EAAE,CACL,wBAAC,UAAU,eACT,uBAAC,UAAU,cAAE,MAAM,CAAC,IAAI,GAAc,EACrC,MAAM,CAAC,aAAa,GAAG,CAAC,IAAI,CAC3B,uBAAC,aAAa,cAAE,MAAM,CAAC,aAAa,GAAiB,CACtD,IACU,CACd;YACD,QAAQ,EAAE,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,SAAS;YACvE,MAAM,EAAE,MAAM,CAAC,QAAQ,CAAC,MAAM,KAAK,CAAC;SACrC,CAAC,CAAC,CAAC;IACN,CAAC,CAAC;IAEF,MAAM,YAAY,GAAG,CAAC,YAAyB,EAAE,EAAE;QACjD,IAAI,YAAY,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;YAC5B,MAAM,QAAQ,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC,CAAC;YACtD,cAAc,CAAC,QAAQ,CAAC,CAAC;QAC3B,CAAC;IACH,CAAC,CAAC;IAEF,IAAI,OAAO,EAAE,CAAC;QACZ,OAAO,kFAAqB,CAAC;IAC/B,CAAC;IAED,OAAO,CACL,uBAAC,aAAa,cACZ,uBAAC,iBAAI,IACH,QAAQ,EAAE,QAAQ,EAClB,QAAQ,EAAE,YAAY,EACtB,YAAY,EAAE,gBAAgB,CAAC,CAAC,CAAC,CAAC,gBAAgB,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC,EAAE,EACnE,gBAAgB,EAAE,KAAK,EACvB,QAAQ,EAAE,IAAI,EACd,QAAQ,EAAE,KAAK,GACf,GACY,CACjB,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,mBAAmB,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/FolderManagement/components/FolderTree.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Tree from 'rc-tree';\nimport styled from 'styled-components';\nimport { FolderTree } from '@/main/app/domains/folders/models/Folder';\n\nconst TreeContainer = styled.div`\n  .rc-tree {\n    background: #fff;\n    border: 1px solid #e1e5e9;\n    border-radius: 8px;\n    padding: 16px;\n  }\n  \n  .rc-tree-node-content-wrapper {\n    padding: 8px 12px;\n    border-radius: 4px;\n    transition: background-color 0.2s;\n    \n    &:hover {\n      background-color: #f8f9fa;\n    }\n    \n    &.rc-tree-node-selected {\n      background-color: #e3f2fd;\n    }\n  }\n  \n  .rc-tree-title {\n    font-size: 14px;\n    color: #333;\n  }\n  \n  .rc-tree-switcher {\n    color: #666;\n  }\n`;\n\nconst FolderInfo = styled.div`\n  display: flex;\n  align-items: center;\n  gap: 8px;\n`;\n\nconst FolderName = styled.span`\n  font-weight: 500;\n`;\n\nconst TestCaseCount = styled.span`\n  background: #e3f2fd;\n  color: #1976d2;\n  padding: 2px 6px;\n  border-radius: 10px;\n  font-size: 12px;\n  font-weight: 500;\n`;\n\ninterface FolderTreeProps {\n  onFolderSelect: (folderId: number) => void;\n  selectedFolderId?: number;\n}\n\nconst FolderTreeComponent: React.FC<FolderTreeProps> = ({ \n  onFolderSelect, \n  selectedFolderId \n}) => {\n  const [treeData, setTreeData] = useState<any[]>([]);\n  const [loading, setLoading] = useState(true);\n\n  useEffect(() => {\n    fetchFolderTree();\n  }, []);\n\n  const fetchFolderTree = async () => {\n    try {\n      const response = await fetch('http://localhost:3000/api/folders/tree');\n      if (response.ok) {\n        const data = await response.json();\n        const formattedData = formatTreeData(data);\n        setTreeData(formattedData);\n      } else {\n        console.error('폴더 트리 조회 실패');\n      }\n    } catch (error) {\n      console.error('폴더 트리 조회 오류:', error);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const formatTreeData = (folders: FolderTree[]): any[] => {\n    return folders.map(folder => ({\n      key: folder.id.toString(),\n      title: (\n        <FolderInfo>\n          <FolderName>{folder.name}</FolderName>\n          {folder.testCaseCount > 0 && (\n            <TestCaseCount>{folder.testCaseCount}</TestCaseCount>\n          )}\n        </FolderInfo>\n      ),\n      children: folder.children ? formatTreeData(folder.children) : undefined,\n      isLeaf: folder.children.length === 0\n    }));\n  };\n\n  const handleSelect = (selectedKeys: React.Key[]) => {\n    if (selectedKeys.length > 0) {\n      const folderId = parseInt(selectedKeys[0].toString());\n      onFolderSelect(folderId);\n    }\n  };\n\n  if (loading) {\n    return <div>폴더 로딩 중...</div>;\n  }\n\n  return (\n    <TreeContainer>\n      <Tree\n        treeData={treeData}\n        onSelect={handleSelect}\n        selectedKeys={selectedFolderId ? [selectedFolderId.toString()] : []}\n        defaultExpandAll={false}\n        showLine={true}\n        showIcon={false}\n      />\n    </TreeContainer>\n  );\n};\n\nexport default FolderTreeComponent; "],"version":3}