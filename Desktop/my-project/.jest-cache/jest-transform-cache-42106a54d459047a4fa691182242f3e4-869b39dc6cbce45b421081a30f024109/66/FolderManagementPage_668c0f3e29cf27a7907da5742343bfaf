0507b65edc5227d17a28386ba9997726
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const FolderTree_1 = __importDefault(require("./FolderTree"));
const Container = styled_components_1.default.div `
  display: flex;
  height: 100vh;
  gap: 24px;
  padding: 24px;
`;
const Sidebar = styled_components_1.default.div `
  width: 300px;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 16px rgba(0,0,0,0.06);
  padding: 20px;
`;
const MainContent = styled_components_1.default.div `
  flex: 1;
  background: #fff;
  border-radius: 12px;
  box-shadow: 0 2px 16px rgba(0,0,0,0.06);
  padding: 20px;
`;
const Header = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding-bottom: 16px;
  border-bottom: 1px solid #e1e5e9;
`;
const Title = styled_components_1.default.h2 `
  margin: 0;
  color: #333;
  font-size: 24px;
  font-weight: 600;
`;
const FolderInfo = styled_components_1.default.div `
  margin-bottom: 20px;
  padding: 16px;
  background: #f8f9fa;
  border-radius: 8px;
  border-left: 4px solid #1976d2;
`;
const FolderName = styled_components_1.default.h3 `
  margin: 0 0 8px 0;
  color: #1976d2;
  font-size: 18px;
  font-weight: 600;
`;
const FolderDescription = styled_components_1.default.p `
  margin: 0;
  color: #666;
  font-size: 14px;
`;
const FolderManagementPage = () => {
    const [selectedFolderId, setSelectedFolderId] = (0, react_1.useState)();
    const [selectedFolder, setSelectedFolder] = (0, react_1.useState)(null);
    const [testCases, setTestCases] = (0, react_1.useState)([]);
    (0, react_1.useEffect)(() => {
        if (selectedFolderId) {
            fetchFolderDetails(selectedFolderId);
            fetchTestCasesInFolder(selectedFolderId);
        }
    }, [selectedFolderId]);
    const fetchFolderDetails = async (folderId) => {
        try {
            const response = await fetch(`http://localhost:3000/api/folders/${folderId}`);
            if (response.ok) {
                const folder = await response.json();
                setSelectedFolder(folder);
            }
        }
        catch (error) {
            console.error('폴더 상세 정보 조회 실패:', error);
        }
    };
    const fetchTestCasesInFolder = async (folderId) => {
        try {
            const response = await fetch(`http://localhost:3000/api/folders/${folderId}/testcases`);
            if (response.ok) {
                const testCaseIds = await response.json();
                // 실제 테스트 케이스 데이터를 가져오는 로직
                const testCasesData = await fetchTestCasesByIds(testCaseIds);
                setTestCases(testCasesData);
            }
        }
        catch (error) {
            console.error('폴더 내 테스트 케이스 조회 실패:', error);
        }
    };
    const fetchTestCasesByIds = async (testCaseIds) => {
        if (testCaseIds.length === 0)
            return [];
        try {
            const promises = testCaseIds.map(id => fetch(`http://localhost:3000/api/testcases/${id}`).then(res => res.json()));
            const results = await Promise.all(promises);
            return results.filter(Boolean);
        }
        catch (error) {
            console.error('테스트 케이스 상세 정보 조회 실패:', error);
            return [];
        }
    };
    const handleFolderSelect = (folderId) => {
        setSelectedFolderId(folderId);
    };
    return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsxs)(Sidebar, { children: [(0, jsx_runtime_1.jsx)(Header, { children: (0, jsx_runtime_1.jsx)(Title, { children: "\uD3F4\uB354 \uAD6C\uC870" }) }), (0, jsx_runtime_1.jsx)(FolderTree_1.default, { onFolderSelect: handleFolderSelect, selectedFolderId: selectedFolderId })] }), (0, jsx_runtime_1.jsxs)(MainContent, { children: [(0, jsx_runtime_1.jsx)(Header, { children: (0, jsx_runtime_1.jsx)(Title, { children: selectedFolder ? selectedFolder.name : '폴더를 선택하세요' }) }), selectedFolder && ((0, jsx_runtime_1.jsxs)(FolderInfo, { children: [(0, jsx_runtime_1.jsx)(FolderName, { children: selectedFolder.name }), selectedFolder.description && ((0, jsx_runtime_1.jsx)(FolderDescription, { children: selectedFolder.description }))] })), selectedFolderId && ((0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsxs)("h3", { children: ["\uD14C\uC2A4\uD2B8 \uCF00\uC774\uC2A4 \uBAA9\uB85D (", testCases.length, "\uAC1C)"] }), testCases.length > 0 ? ((0, jsx_runtime_1.jsx)("div", { style: { display: 'grid', gap: '12px' }, children: testCases.map(testCase => ((0, jsx_runtime_1.jsxs)("div", { style: {
                                        padding: '12px',
                                        border: '1px solid #e1e5e9',
                                        borderRadius: '8px',
                                        background: '#fff'
                                    }, children: [(0, jsx_runtime_1.jsx)("div", { style: { fontWeight: '600', marginBottom: '4px' }, children: testCase.title }), (0, jsx_runtime_1.jsxs)("div", { style: { fontSize: '14px', color: '#666' }, children: ["\uC6B0\uC120\uC21C\uC704: ", testCase.priority, " | \uC0C1\uD0DC: ", testCase.status] })] }, testCase.id))) })) : ((0, jsx_runtime_1.jsx)("div", { style: { textAlign: 'center', color: '#666', padding: '40px' }, children: "\uC774 \uD3F4\uB354\uC5D0 \uD14C\uC2A4\uD2B8 \uCF00\uC774\uC2A4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4." }))] })), !selectedFolderId && ((0, jsx_runtime_1.jsx)("div", { style: { textAlign: 'center', color: '#666', marginTop: '100px' }, children: "\uD3F4\uB354\uB97C \uC120\uD0DD\uD558\uC5EC \uD14C\uC2A4\uD2B8 \uCF00\uC774\uC2A4\uB97C \uD655\uC778\uD558\uC138\uC694" }))] })] }));
};
exports.default = FolderManagementPage;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,