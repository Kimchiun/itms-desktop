{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/store/dashboardLayoutSlice.ts","mappings":";;;;AAAA,8CAA8D;AAiB9D,MAAM,YAAY,GAAyB;IACzC,SAAS,EAAE;QACT,WAAW,EAAE,KAAK;QAClB,KAAK,EAAE,GAAG;KACX;IACD,UAAU,EAAE;QACV,WAAW,EAAE,KAAK;QAClB,KAAK,EAAE,GAAG;KACX;IACD,WAAW,EAAE;QACX,WAAW,EAAE,KAAK;KACnB;IACD,SAAS,EAAE,UAAU;CACtB,CAAC;AAEF,MAAM,oBAAoB,GAAG,IAAA,qBAAW,EAAC;IACvC,IAAI,EAAE,iBAAiB;IACvB,YAAY;IACZ,QAAQ,EAAE;QACR,eAAe,EAAE,CAAC,KAAK,EAAE,EAAE;YACzB,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,SAAS,CAAC,WAAW,CAAC;YAC3D,IAAI,KAAK,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;gBAChC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;YACvC,CAAC;QACH,CAAC;QACD,gBAAgB,EAAE,CAAC,KAAK,EAAE,EAAE;YAC1B,KAAK,CAAC,UAAU,CAAC,WAAW,GAAG,CAAC,KAAK,CAAC,UAAU,CAAC,WAAW,CAAC;YAC7D,IAAI,KAAK,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;gBACjC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,IAAI,CAAC;YACvC,CAAC;QACH,CAAC;QACD,iBAAiB,EAAE,CAAC,KAAK,EAAE,MAA6B,EAAE,EAAE;YAC1D,KAAK,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;QACzC,CAAC;QACD,kBAAkB,EAAE,CAAC,KAAK,EAAE,MAA6B,EAAE,EAAE;YAC3D,KAAK,CAAC,UAAU,CAAC,KAAK,GAAG,MAAM,CAAC,OAAO,CAAC;QAC1C,CAAC;QACD,YAAY,EAAE,CAAC,KAAK,EAAE,MAA6B,EAAE,EAAE;YACrD,KAAK,CAAC,SAAS,GAAG,MAAM,CAAC,OAAO,CAAC;QACnC,CAAC;QACD,WAAW,EAAE,CAAC,KAAK,EAAE,EAAE;YACrB,KAAK,CAAC,SAAS,CAAC,WAAW,GAAG,KAAK,CAAC;YACpC,KAAK,CAAC,UAAU,CAAC,WAAW,GAAG,KAAK,CAAC;YACrC,KAAK,CAAC,WAAW,CAAC,WAAW,GAAG,KAAK,CAAC;QACxC,CAAC;KACF;CACF,CAAC,CAAC;AAEU,KAOT,oBAAoB,CAAC,OAAO,EAN9B,uBAAe,uBACf,wBAAgB,wBAChB,yBAAiB,yBACjB,0BAAkB,0BAClB,oBAAY,oBACZ,mBAAW,kBACoB;AAEjC,kBAAe,oBAAoB,CAAC,OAAO,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/store/dashboardLayoutSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface DashboardLayoutState {\n  leftPanel: {\n    isCollapsed: boolean;\n    width: number;\n  };\n  rightPanel: {\n    isCollapsed: boolean;\n    width: number;\n  };\n  centerPanel: {\n    isFullWidth: boolean;\n  };\n  activeTab: string;\n}\n\nconst initialState: DashboardLayoutState = {\n  leftPanel: {\n    isCollapsed: false,\n    width: 280\n  },\n  rightPanel: {\n    isCollapsed: false,\n    width: 320\n  },\n  centerPanel: {\n    isFullWidth: false\n  },\n  activeTab: 'overview'\n};\n\nconst dashboardLayoutSlice = createSlice({\n  name: 'dashboardLayout',\n  initialState,\n  reducers: {\n    toggleLeftPanel: (state) => {\n      state.leftPanel.isCollapsed = !state.leftPanel.isCollapsed;\n      if (state.leftPanel.isCollapsed) {\n        state.centerPanel.isFullWidth = true;\n      }\n    },\n    toggleRightPanel: (state) => {\n      state.rightPanel.isCollapsed = !state.rightPanel.isCollapsed;\n      if (state.rightPanel.isCollapsed) {\n        state.centerPanel.isFullWidth = true;\n      }\n    },\n    setLeftPanelWidth: (state, action: PayloadAction<number>) => {\n      state.leftPanel.width = action.payload;\n    },\n    setRightPanelWidth: (state, action: PayloadAction<number>) => {\n      state.rightPanel.width = action.payload;\n    },\n    setActiveTab: (state, action: PayloadAction<string>) => {\n      state.activeTab = action.payload;\n    },\n    resetLayout: (state) => {\n      state.leftPanel.isCollapsed = false;\n      state.rightPanel.isCollapsed = false;\n      state.centerPanel.isFullWidth = false;\n    }\n  }\n});\n\nexport const {\n  toggleLeftPanel,\n  toggleRightPanel,\n  setLeftPanelWidth,\n  setRightPanelWidth,\n  setActiveTab,\n  resetLayout\n} = dashboardLayoutSlice.actions;\n\nexport default dashboardLayoutSlice.reducer; "],"version":3}