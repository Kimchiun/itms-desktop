38292a141ddd0001db90bca1892c38fe
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const axios_1 = __importDefault(require("../../../utils/axios"));
const Container = styled_components_1.default.div `
  display: flex;
  flex-direction: column;
  gap: 16px;
`;
const Header = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 16px;
`;
const Title = styled_components_1.default.h3 `
  margin: 0;
  font-size: 18px;
  font-weight: 600;
  color: #1e293b;
`;
const ActionButton = styled_components_1.default.button `
  padding: 8px 16px;
  background: #3b82f6;
  color: white;
  border: none;
  border-radius: 6px;
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s;
  
  &:hover {
    background: #2563eb;
  }
`;
const SearchRow = styled_components_1.default.div `
  display: flex;
  gap: 12px;
  margin-bottom: 16px;
`;
const SearchInput = styled_components_1.default.input `
  flex: 1;
  padding: 8px 12px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
`;
const FilterSelect = styled_components_1.default.select `
  padding: 8px 12px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
  background: white;
`;
const Table = styled_components_1.default.table `
  width: 100%;
  border-collapse: collapse;
  background: white;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
`;
const Th = styled_components_1.default.th `
  background: #f8fafc;
  padding: 12px;
  text-align: left;
  font-weight: 600;
  color: #374151;
  border-bottom: 1px solid #e5e7eb;
`;
const Td = styled_components_1.default.td `
  padding: 12px;
  border-bottom: 1px solid #f3f4f6;
  vertical-align: middle;
`;
const PriorityBadge = styled_components_1.default.span `
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 500;
  color: ${({ priority }) => {
    switch (priority) {
        case 'High': return '#dc2626';
        case 'Medium': return '#d97706';
        case 'Low': return '#059669';
        default: return '#6b7280';
    }
}};
  background: ${({ priority }) => {
    switch (priority) {
        case 'High': return '#fef2f2';
        case 'Medium': return '#fffbeb';
        case 'Low': return '#f0fdf4';
        default: return '#f9fafb';
    }
}};
`;
const StatusBadge = styled_components_1.default.span `
  padding: 4px 8px;
  border-radius: 4px;
  font-size: 12px;
  font-weight: 500;
  color: ${({ status }) => status === 'Active' ? '#059669' : '#6b7280'};
  background: ${({ status }) => status === 'Active' ? '#f0fdf4' : '#f9fafb'};
`;
const EmptyState = styled_components_1.default.div `
  text-align: center;
  padding: 40px;
  color: #6b7280;
`;
const TestCaseList = ({ releaseId, testCases, onDataChange }) => {
    const [searchTerm, setSearchTerm] = (0, react_1.useState)('');
    const [priorityFilter, setPriorityFilter] = (0, react_1.useState)('');
    const [statusFilter, setStatusFilter] = (0, react_1.useState)('');
    const filteredTestCases = (0, react_1.useMemo)(() => {
        return testCases.filter(testCase => {
            const matchesSearch = testCase.title.toLowerCase().includes(searchTerm.toLowerCase());
            const matchesPriority = !priorityFilter || testCase.priority === priorityFilter;
            const matchesStatus = !statusFilter || testCase.status === statusFilter;
            return matchesSearch && matchesPriority && matchesStatus;
        });
    }, [testCases, searchTerm, priorityFilter, statusFilter]);
    const handleCreateTestCase = async () => {
        try {
            await axios_1.default.post('/api/testcases', {
                title: '새 테스트케이스',
                priority: 'Medium',
                status: 'Active',
                createdBy: 'current-user',
                steps: ['1. 테스트 스텝'],
                expected: '예상 결과'
            });
            onDataChange();
        }
        catch (error) {
            console.error('테스트케이스 생성 실패:', error);
        }
    };
    const handleDeleteTestCase = async (id) => {
        try {
            await axios_1.default.delete(`/api/testcases/${id}`);
            onDataChange();
        }
        catch (error) {
            console.error('테스트케이스 삭제 실패:', error);
        }
    };
    return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsxs)(Header, { children: [(0, jsx_runtime_1.jsx)(Title, { children: "\uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4 \uBAA9\uB85D" }), (0, jsx_runtime_1.jsx)(ActionButton, { onClick: handleCreateTestCase, "data-testid": "create-testcase-btn", children: "+ \uC0C8 \uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4" })] }), (0, jsx_runtime_1.jsxs)(SearchRow, { children: [(0, jsx_runtime_1.jsx)(SearchInput, { placeholder: "\uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4 \uAC80\uC0C9...", value: searchTerm, onChange: (e) => setSearchTerm(e.target.value), "data-testid": "testcase-search-input" }), (0, jsx_runtime_1.jsxs)(FilterSelect, { value: priorityFilter, onChange: (e) => setPriorityFilter(e.target.value), "data-testid": "priority-filter", children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "\uBAA8\uB4E0 \uC6B0\uC120\uC21C\uC704" }), (0, jsx_runtime_1.jsx)("option", { value: "High", children: "\uB192\uC74C" }), (0, jsx_runtime_1.jsx)("option", { value: "Medium", children: "\uBCF4\uD1B5" }), (0, jsx_runtime_1.jsx)("option", { value: "Low", children: "\uB0AE\uC74C" })] }), (0, jsx_runtime_1.jsxs)(FilterSelect, { value: statusFilter, onChange: (e) => setStatusFilter(e.target.value), "data-testid": "status-filter", children: [(0, jsx_runtime_1.jsx)("option", { value: "", children: "\uBAA8\uB4E0 \uC0C1\uD0DC" }), (0, jsx_runtime_1.jsx)("option", { value: "Active", children: "\uD65C\uC131" }), (0, jsx_runtime_1.jsx)("option", { value: "Archived", children: "\uBCF4\uAD00" })] })] }), filteredTestCases.length === 0 ? ((0, jsx_runtime_1.jsx)(EmptyState, { children: testCases.length === 0 ? '테스트케이스가 없습니다.' : '검색 결과가 없습니다.' })) : ((0, jsx_runtime_1.jsxs)(Table, { children: [(0, jsx_runtime_1.jsx)("thead", { children: (0, jsx_runtime_1.jsxs)("tr", { children: [(0, jsx_runtime_1.jsx)(Th, { children: "\uC81C\uBAA9" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC6B0\uC120\uC21C\uC704" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC0C1\uD0DC" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC0DD\uC131\uC790" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC0DD\uC131\uC77C" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC791\uC5C5" })] }) }), (0, jsx_runtime_1.jsx)("tbody", { children: filteredTestCases.map((testCase) => ((0, jsx_runtime_1.jsxs)("tr", { "data-testid": `testcase-row-${testCase.id}`, children: [(0, jsx_runtime_1.jsx)(Td, { children: testCase.title }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(PriorityBadge, { priority: testCase.priority, children: testCase.priority === 'High' ? '높음' :
                                            testCase.priority === 'Medium' ? '보통' : '낮음' }) }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(StatusBadge, { status: testCase.status, children: testCase.status === 'Active' ? '활성' : '보관' }) }), (0, jsx_runtime_1.jsx)(Td, { children: testCase.createdBy }), (0, jsx_runtime_1.jsx)(Td, { children: new Date(testCase.createdAt).toLocaleDateString() }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)("button", { onClick: () => handleDeleteTestCase(testCase.id), style: {
                                            padding: '4px 8px',
                                            background: '#ef4444',
                                            color: 'white',
                                            border: 'none',
                                            borderRadius: '4px',
                                            fontSize: '12px',
                                            cursor: 'pointer'
                                        }, "data-testid": `delete-testcase-${testCase.id}`, children: "\uC0AD\uC81C" }) })] }, testCase.id))) })] }))] }));
};
exports.default = TestCaseList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,