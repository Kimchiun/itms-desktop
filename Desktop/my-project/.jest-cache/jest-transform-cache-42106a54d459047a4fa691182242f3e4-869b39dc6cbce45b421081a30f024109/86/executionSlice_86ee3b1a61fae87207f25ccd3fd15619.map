{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/store/executionSlice.ts","mappings":";;;;;;;AAAA,8CAAgF;AAEhF,iEAAuC;AASvC,MAAM,YAAY,GAAmB;IACjC,UAAU,EAAE,EAAE;IACd,OAAO,EAAE,KAAK;IACd,KAAK,EAAE,IAAI;IACX,YAAY,EAAE,EAAE;CACnB,CAAC;AAEW,QAAA,eAAe,GAAG,IAAA,0BAAgB,EAC3C,kBAAkB,EAClB,KAAK,EAAE,UAAkB,EAAE,EAAE;IACzB,MAAM,GAAG,GAAG,MAAM,eAAG,CAAC,GAAG,CAAC,4BAA4B,UAAU,EAAE,CAAC,CAAC;IACpE,OAAO,GAAG,CAAC,IAAmB,CAAC;AACnC,CAAC,CACJ,CAAC;AAEW,QAAA,YAAY,GAAG,IAAA,0BAAgB,EACxC,gBAAgB,EAChB,KAAK,EAAE,IAAuD,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE;IACnF,IAAI,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,eAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;QACpD,OAAO,GAAG,CAAC,IAAiB,CAAC;IACjC,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,OAAO,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;AACL,CAAC,CACJ,CAAC;AAEW,QAAA,eAAe,GAAG,IAAA,0BAAgB,EAC3C,mBAAmB,EACnB,KAAK,EAAE,EAAE,EAAE,EAAE,MAAM,EAAwE,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE;IAChH,IAAI,CAAC;QACD,MAAM,GAAG,GAAG,MAAM,eAAG,CAAC,GAAG,CAAC,mBAAmB,EAAE,EAAE,EAAE,MAAM,CAAC,CAAC;QAC3D,OAAO,GAAG,CAAC,IAAiB,CAAC;IACjC,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,OAAO,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;AACL,CAAC,CACJ,CAAC;AAEW,QAAA,eAAe,GAAG,IAAA,0BAAgB,EAC3C,mBAAmB,EACnB,KAAK,EAAE,EAAU,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE;IACtC,IAAI,CAAC;QACD,MAAM,eAAG,CAAC,MAAM,CAAC,mBAAmB,EAAE,EAAE,CAAC,CAAC;QAC1C,OAAO,EAAE,CAAC;IACd,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,OAAO,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;AACL,CAAC,CACJ,CAAC;AAEW,QAAA,qBAAqB,GAAG,IAAA,0BAAgB,EACjD,wBAAwB,EACxB,KAAK,EAAE,UAA+D,EAAE,EAAE,eAAe,EAAE,EAAE,EAAE;IAC3F,IAAI,CAAC;QACD,MAAM,OAAO,GAAgB,EAAE,CAAC;QAChC,KAAK,MAAM,IAAI,IAAI,UAAU,EAAE,CAAC;YAC5B,MAAM,GAAG,GAAG,MAAM,eAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,IAAI,CAAC,CAAC;YACpD,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,IAAiB,CAAC,CAAC;QACxC,CAAC;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAAC,OAAO,GAAQ,EAAE,CAAC;QAChB,OAAO,eAAe,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,EAAE,KAAK,IAAI,GAAG,CAAC,OAAO,CAAC,CAAC;IACrE,CAAC;AACL,CAAC,CACJ,CAAC;AAEF,MAAM,cAAc,GAAG,IAAA,qBAAW,EAAC;IAC/B,IAAI,EAAE,YAAY;IAClB,YAAY;IACZ,QAAQ,EAAE;QACN,uBAAuB,CAAC,KAAK,EAAE,MAAwE;YACnG,KAAK,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC5C,CAAC;QACD,iBAAiB,CAAC,KAAK;YACnB,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;QAC5B,CAAC;KACJ;IACD,aAAa,EAAE,OAAO,CAAC,EAAE;QACrB,OAAO;aACF,OAAO,CAAC,uBAAe,CAAC,OAAO,EAAE,KAAK,CAAC,EAAE,GAAG,KAAK,CAAC,OAAO,GAAG,IAAI,CAAC,CAAC,KAAK,CAAC,KAAK,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC;aACxF,OAAO,CAAC,uBAAe,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAClD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YACtB,KAAK,CAAC,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC;QACtC,CAAC,CAAC;aACD,OAAO,CAAC,uBAAe,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACjD,KAAK,CAAC,OAAO,GAAG,KAAK,CAAC;YACtB,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,OAAO,IAAI,IAAI,CAAC;QAC/C,CAAC,CAAC;aACD,OAAO,CAAC,oBAAY,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAC/C,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC1C,CAAC,CAAC;aACD,OAAO,CAAC,oBAAY,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAC9C,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAiB,CAAC;QAC3C,CAAC,CAAC;aACD,OAAO,CAAC,uBAAe,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAClD,MAAM,GAAG,GAAG,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YACxE,IAAI,GAAG,KAAK,CAAC,CAAC;gBAAE,KAAK,CAAC,UAAU,CAAC,GAAG,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC;QAC3D,CAAC,CAAC;aACD,OAAO,CAAC,uBAAe,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACjD,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAiB,CAAC;QAC3C,CAAC,CAAC;aACD,OAAO,CAAC,uBAAe,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YAClD,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC;QAC7E,CAAC,CAAC;aACD,OAAO,CAAC,uBAAe,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACjD,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAiB,CAAC;QAC3C,CAAC,CAAC;aACD,OAAO,CAAC,6BAAqB,CAAC,SAAS,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACxD,KAAK,CAAC,UAAU,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC,OAAO,CAAC,CAAC;YACzC,KAAK,CAAC,YAAY,GAAG,EAAE,CAAC;QAC5B,CAAC,CAAC;aACD,OAAO,CAAC,6BAAqB,CAAC,QAAQ,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,EAAE;YACvD,KAAK,CAAC,KAAK,GAAG,MAAM,CAAC,OAAiB,CAAC;QAC3C,CAAC,CAAC,CAAC;IACX,CAAC;CACJ,CAAC,CAAC;AAEU,KAAiD,cAAc,CAAC,OAAO,EAArE,+BAAuB,+BAAE,yBAAiB,wBAA4B;AACrF,kBAAe,cAAc,CAAC,OAAO,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/store/executionSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport { Execution } from '@/main/app/domains/executions/models/Execution';\nimport api from '../../../utils/axios';\n\nexport interface ExecutionState {\n    executions: Execution[];\n    loading: boolean;\n    error: string | null;\n    offlineQueue: Omit<Execution, 'id' | 'createdAt' | 'updatedAt'>[];\n}\n\nconst initialState: ExecutionState = {\n    executions: [],\n    loading: false,\n    error: null,\n    offlineQueue: [],\n};\n\nexport const fetchExecutions = createAsyncThunk(\n    'executions/fetch',\n    async (testcaseId: number) => {\n        const res = await api.get(`/api/executions/testcase/${testcaseId}`);\n        return res.data as Execution[];\n    }\n);\n\nexport const addExecution = createAsyncThunk(\n    'executions/add',\n    async (data: Omit<Execution, 'id' | 'createdAt' | 'updatedAt'>, { rejectWithValue }) => {\n        try {\n            const res = await api.post('/api/executions', data);\n            return res.data as Execution;\n        } catch (err: any) {\n            return rejectWithValue(err.response?.data?.error || err.message);\n        }\n    }\n);\n\nexport const updateExecution = createAsyncThunk(\n    'executions/update',\n    async ({ id, update }: { id: number; update: Partial<Omit<Execution, 'id' | 'createdAt'>> }, { rejectWithValue }) => {\n        try {\n            const res = await api.put(`/api/executions/${id}`, update);\n            return res.data as Execution;\n        } catch (err: any) {\n            return rejectWithValue(err.response?.data?.error || err.message);\n        }\n    }\n);\n\nexport const deleteExecution = createAsyncThunk(\n    'executions/delete',\n    async (id: number, { rejectWithValue }) => {\n        try {\n            await api.delete(`/api/executions/${id}`);\n            return id;\n        } catch (err: any) {\n            return rejectWithValue(err.response?.data?.error || err.message);\n        }\n    }\n);\n\nexport const syncOfflineExecutions = createAsyncThunk(\n    'executions/syncOffline',\n    async (executions: Omit<Execution, 'id' | 'createdAt' | 'updatedAt'>[], { rejectWithValue }) => {\n        try {\n            const results: Execution[] = [];\n            for (const exec of executions) {\n                const res = await api.post('/api/executions', exec);\n                results.push(res.data as Execution);\n            }\n            return results;\n        } catch (err: any) {\n            return rejectWithValue(err.response?.data?.error || err.message);\n        }\n    }\n);\n\nconst executionSlice = createSlice({\n    name: 'executions',\n    initialState,\n    reducers: {\n        enqueueOfflineExecution(state, action: PayloadAction<Omit<Execution, 'id' | 'createdAt' | 'updatedAt'>>) {\n            state.offlineQueue.push(action.payload);\n        },\n        clearOfflineQueue(state) {\n            state.offlineQueue = [];\n        },\n    },\n    extraReducers: builder => {\n        builder\n            .addCase(fetchExecutions.pending, state => { state.loading = true; state.error = null; })\n            .addCase(fetchExecutions.fulfilled, (state, action) => {\n                state.loading = false;\n                state.executions = action.payload;\n            })\n            .addCase(fetchExecutions.rejected, (state, action) => {\n                state.loading = false;\n                state.error = action.error.message || null;\n            })\n            .addCase(addExecution.fulfilled, (state, action) => {\n                state.executions.push(action.payload);\n            })\n            .addCase(addExecution.rejected, (state, action) => {\n                state.error = action.payload as string;\n            })\n            .addCase(updateExecution.fulfilled, (state, action) => {\n                const idx = state.executions.findIndex(e => e.id === action.payload.id);\n                if (idx !== -1) state.executions[idx] = action.payload;\n            })\n            .addCase(updateExecution.rejected, (state, action) => {\n                state.error = action.payload as string;\n            })\n            .addCase(deleteExecution.fulfilled, (state, action) => {\n                state.executions = state.executions.filter(e => e.id !== action.payload);\n            })\n            .addCase(deleteExecution.rejected, (state, action) => {\n                state.error = action.payload as string;\n            })\n            .addCase(syncOfflineExecutions.fulfilled, (state, action) => {\n                state.executions.push(...action.payload);\n                state.offlineQueue = [];\n            })\n            .addCase(syncOfflineExecutions.rejected, (state, action) => {\n                state.error = action.payload as string;\n            });\n    }\n});\n\nexport const { enqueueOfflineExecution, clearOfflineQueue } = executionSlice.actions;\nexport default executionSlice.reducer; "],"version":3}