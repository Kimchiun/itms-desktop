fb91b8349a73191769783a86bfbea462
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const react_redux_1 = require("react-redux");
const axios_1 = __importDefault(require("../../../utils/axios"));
const dashboardLayoutSlice_1 = require("../../../store/dashboardLayoutSlice");
const Container = styled_components_1.default.div `
  display: flex;
  flex-direction: column;
  gap: 8px;
`;
const SearchRow = styled_components_1.default.div `
  display: flex;
  gap: 8px;
  margin-bottom: 8px;
`;
const SearchInput = styled_components_1.default.input `
  flex: 1;
  padding: 6px 10px;
  border: 1px solid #e2e8f0;
  border-radius: 6px;
  font-size: 14px;
`;
const FilterButton = styled_components_1.default.button `
  padding: 6px 12px;
  border-radius: 6px;
  border: 1px solid #e2e8f0;
  background: ${({ active }) => (active ? '#3b82f6' : '#f1f5f9')};
  color: ${({ active }) => (active ? 'white' : '#64748b')};
  font-weight: 500;
  cursor: pointer;
  transition: background 0.2s;
  &:hover {
    background: #2563eb;
    color: white;
  }
`;
const List = styled_components_1.default.div `
  display: flex;
  flex-direction: column;
  gap: 4px;
  max-height: 220px;
  overflow-y: auto;
`;
const Item = styled_components_1.default.div `
  padding: 10px 12px;
  border-radius: 6px;
  background: ${({ selected }) => (selected ? '#dbeafe' : 'white')};
  border: 1px solid ${({ selected }) => (selected ? '#3b82f6' : '#e2e8f0')};
  color: #1e293b;
  font-weight: ${({ selected }) => (selected ? 600 : 400)};
  cursor: pointer;
  display: flex;
  flex-direction: column;
  gap: 2px;
  transition: background 0.2s, border 0.2s;
  &:hover {
    background: #eff6ff;
    border-color: #3b82f6;
  }
`;
const Status = styled_components_1.default.span `
  font-size: 12px;
  color: ${({ status }) => {
    switch (status) {
        case 'active': return '#059669';
        case 'pending': return '#d97706';
        case 'completed': return '#7c3aed';
        default: return '#6b7280';
    }
}};
  font-weight: 500;
`;
const statusOptions = [
    { value: '', label: '전체' },
    { value: 'active', label: '진행 중' },
    { value: 'pending', label: '대기 중' },
    { value: 'completed', label: '완료' },
];
const ReleaseList = () => {
    const dispatch = (0, react_redux_1.useDispatch)();
    const selectedId = (0, react_redux_1.useSelector)((state) => state.dashboardLayout.selectedReleaseId);
    const [releases, setReleases] = (0, react_1.useState)([]);
    const [loading, setLoading] = (0, react_1.useState)(false);
    const [search, setSearch] = (0, react_1.useState)('');
    const [status, setStatus] = (0, react_1.useState)('');
    (0, react_1.useEffect)(() => {
        setLoading(true);
        axios_1.default.get('/api/releases')
            .then((res) => {
            setReleases(res.data);
            setLoading(false);
        })
            .catch(() => {
            setReleases([]);
            setLoading(false);
        });
    }, []);
    const filtered = (0, react_1.useMemo)(() => {
        return releases.filter(r => (!status || r.status === status) &&
            (r.title.toLowerCase().includes(search.toLowerCase()) || (r.description?.toLowerCase().includes(search.toLowerCase()) ?? false)));
    }, [releases, search, status]);
    const handleSelect = (0, react_1.useCallback)((id) => {
        dispatch((0, dashboardLayoutSlice_1.setSelectedReleaseId)(id));
    }, [dispatch]);
    return ((0, jsx_runtime_1.jsxs)(Container, { "data-testid": "release-list", children: [(0, jsx_runtime_1.jsxs)(SearchRow, { children: [(0, jsx_runtime_1.jsx)(SearchInput, { placeholder: "\uB9B4\uB9AC\uC988 \uAC80\uC0C9...", value: search, onChange: e => setSearch(e.target.value), "data-testid": "release-search-input" }), statusOptions.map(opt => ((0, jsx_runtime_1.jsx)(FilterButton, { active: status === opt.value, onClick: () => setStatus(opt.value), "data-testid": `release-filter-${opt.value || 'all'}`, children: opt.label }, opt.value)))] }), (0, jsx_runtime_1.jsx)(List, { children: loading ? ((0, jsx_runtime_1.jsx)("div", { children: "\uB85C\uB529 \uC911..." })) : filtered.length === 0 ? ((0, jsx_runtime_1.jsx)("div", { children: "\uB9B4\uB9AC\uC988\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4." })) : filtered.map(r => ((0, jsx_runtime_1.jsxs)(Item, { selected: selectedId === r.id, onClick: () => handleSelect(r.id), "data-testid": `release-item-${r.id}`, tabIndex: 0, "aria-label": `릴리즈 ${r.title}`, children: [(0, jsx_runtime_1.jsx)("span", { children: r.title }), (0, jsx_runtime_1.jsx)(Status, { status: r.status, children: statusOptions.find(o => o.value === r.status)?.label })] }, r.id))) })] }));
};
exports.default = ReleaseList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0Rlc2t0b3AvbXktcHJvamVjdC9zcmMvcmVuZGVyZXIvZmVhdHVyZXMvRGFzaGJvYXJkL2NvbXBvbmVudHMvUmVsZWFzZUxpc3QudHN4IiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLGlDQUF5RTtBQUN6RSwwRUFBdUM7QUFDdkMsNkNBQXVEO0FBQ3ZELGlFQUF5QztBQUV6Qyw4RUFBMkU7QUFTM0UsTUFBTSxTQUFTLEdBQUcsMkJBQU0sQ0FBQyxHQUFHLENBQUE7Ozs7Q0FJM0IsQ0FBQztBQUVGLE1BQU0sU0FBUyxHQUFHLDJCQUFNLENBQUMsR0FBRyxDQUFBOzs7O0NBSTNCLENBQUM7QUFFRixNQUFNLFdBQVcsR0FBRywyQkFBTSxDQUFDLEtBQUssQ0FBQTs7Ozs7O0NBTS9CLENBQUM7QUFFRixNQUFNLFlBQVksR0FBRywyQkFBTSxDQUFDLE1BQU0sQ0FBcUI7Ozs7Z0JBSXZDLENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDO1dBQ3JELENBQUMsRUFBRSxNQUFNLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxNQUFNLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsU0FBUyxDQUFDOzs7Ozs7OztDQVF4RCxDQUFDO0FBRUYsTUFBTSxJQUFJLEdBQUcsMkJBQU0sQ0FBQyxHQUFHLENBQUE7Ozs7OztDQU10QixDQUFDO0FBRUYsTUFBTSxJQUFJLEdBQUcsMkJBQU0sQ0FBQyxHQUFHLENBQXVCOzs7Z0JBRzlCLENBQUMsRUFBRSxRQUFRLEVBQUUsRUFBRSxFQUFFLENBQUMsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUMsT0FBTyxDQUFDO3NCQUM1QyxDQUFDLEVBQUUsUUFBUSxFQUFFLEVBQUUsRUFBRSxDQUFDLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFD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QkFBQyxJQUFJLElBRUgsUUFBUSxFQUFFLFVBQVUsS0FBSyxDQUFDLENBQUMsRUFBRSxFQUM3QixPQUFPLEVBQUUsR0FBRyxFQUFFLENBQUMsWUFBWSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsaUJBQ3BCLGdCQUFnQixDQUFDLENBQUMsRUFBRSxFQUFFLEVBQ25DLFFBQVEsRUFBRSxDQUFDLGdCQUNDLE9BQU8sQ0FBQyxDQUFDLEtBQUssRUFBRSxhQUU1QiwyQ0FBTyxDQUFDLENBQUMsS0FBSyxHQUFRLEVBQ3RCLHVCQUFDLE1BQU0sSUFBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDLE1BQU0sWUFBRyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFDLEtBQUssS0FBSyxDQUFDLENBQUMsTUFBTSxDQUFDLEVBQUUsS0FBSyxHQUFVLEtBUnBGLENBQUMsQ0FBQyxFQUFFLENBU0osQ0FDUixDQUFDLEdBQ0csSUFDRyxDQUNiLENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixrQkFBZSxXQUFXLENBQUMiLCJuYW1lcyI6W10sInNvdXJjZXMiOlsiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0Rlc2t0b3AvbXktcHJvamVjdC9zcmMvcmVuZGVyZXIvZmVhdHVyZXMvRGFzaGJvYXJkL2NvbXBvbmVudHMvUmVsZWFzZUxpc3QudHN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VFZmZlY3QsIHVzZVN0YXRlLCB1c2VNZW1vLCB1c2VDYWxsYmFjayB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnc3R5bGVkLWNvbXBvbmVudHMnO1xuaW1wb3J0IHsgdXNlRGlzcGF0Y2gsIHVzZVNlbGVjdG9yIH0gZnJvbSAncmVhY3QtcmVkdXgnO1xuaW1wb3J0IGF4aW9zIGZyb20gJy4uLy4uLy4uL3V0aWxzL2F4aW9zJztcbmltcG9ydCB7IFJvb3RTdGF0ZSB9IGZyb20gJy4uLy4uLy4uL3N0b3JlJztcbmltcG9ydCB7IHNldFNlbGVjdGVkUmVsZWFzZUlkIH0gZnJvbSAnLi4vLi4vLi4vc3RvcmUvZGFzaGJvYXJkTGF5b3V0U2xpY2UnO1xuXG5pbnRlcmZhY2UgUmVsZWFzZSB7XG4gIGlkOiBzdHJpbmc7XG4gIHRpdGxlOiBzdHJpbmc7XG4gIHN0YXR1czogJ2FjdGl2ZScgfCAncGVuZGluZycgfCAnY29tcGxldGVkJztcbiAgZGVzY3JpcHRpb24/OiBzdHJpbmc7XG59XG5cbmNvbnN0IENvbnRhaW5lciA9IHN0eWxlZC5kaXZgXG4gIGRpc3BsYXk6IGZsZXg7XG4gIGZsZXgtZGlyZWN0aW9uOiBjb2x1bW47XG4gIGdhcDogOHB4O1xuYDtcblxuY29uc3QgU2VhcmNoUm93ID0gc3R5bGVkLmRpdmBcbiAgZGlzcGxheTogZmxleDtcbiAgZ2FwOiA4cHg7XG4gIG1hcmdpbi1ib3R0b206IDhweDtcbmA7XG5cbmNvbnN0IFNlYXJjaElucHV0ID0gc3R5bGVkLmlucHV0YFxuICBmbGV4OiAxO1xuICBwYWRkaW5nOiA2cHggMTBweDtcbiAgYm9yZGVyOiAxcHggc29saWQgI2UyZThmMDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBmb250LXNpemU6IDE0cHg7XG5gO1xuXG5jb25zdCBGaWx0ZXJCdXR0b24gPSBzdHlsZWQuYnV0dG9uPHsgYWN0aXZlOiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiA2cHggMTJweDtcbiAgYm9yZGVyLXJhZGl1czogNnB4O1xuICBib3JkZXI6IDFweCBzb2xpZCAjZTJlOGYwO1xuICBiYWNrZ3JvdW5kOiAkeyh7IGFjdGl2ZSB9KSA9PiAoYWN0aXZlID8gJyMzYjgyZjYnIDogJyNmMWY1ZjknKX07XG4gIGNvbG9yOiAkeyh7IGFjdGl2ZSB9KSA9PiAoYWN0aXZlID8gJ3doaXRlJyA6ICcjNjQ3NDhiJyl9O1xuICBmb250LXdlaWdodDogNTAwO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIHRyYW5zaXRpb246IGJhY2tncm91bmQgMC4ycztcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogIzI1NjNlYjtcbiAgICBjb2xvcjogd2hpdGU7XG4gIH1cbmA7XG5cbmNvbnN0IExpc3QgPSBzdHlsZWQuZGl2YFxuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDRweDtcbiAgbWF4LWhlaWdodDogMjIwcHg7XG4gIG92ZXJmbG93LXk6IGF1dG87XG5gO1xuXG5jb25zdCBJdGVtID0gc3R5bGVkLmRpdjx7IHNlbGVjdGVkOiBib29sZWFuIH0+YFxuICBwYWRkaW5nOiAxMHB4IDEycHg7XG4gIGJvcmRlci1yYWRpdXM6IDZweDtcbiAgYmFja2dyb3VuZDogJHsoeyBzZWxlY3RlZCB9KSA9PiAoc2VsZWN0ZWQgPyAnI2RiZWFmZScgOiAnd2hpdGUnKX07XG4gIGJvcmRlcjogMXB4IHNvbGlkICR7KHsgc2VsZWN0ZWQgfSkgPT4gKHNlbGVjdGVkID8gJyMzYjgyZjYnIDogJyNlMmU4ZjAnKX07XG4gIGNvbG9yOiAjMWUyOTNiO1xuICBmb250LXdlaWdodDogJHsoeyBzZWxlY3RlZCB9KSA9PiAoc2VsZWN0ZWQgPyA2MDAgOiA0MDApfTtcbiAgY3Vyc29yOiBwb2ludGVyO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uO1xuICBnYXA6IDJweDtcbiAgdHJhbnNpdGlvbjogYmFja2dyb3VuZCAwLjJzLCBib3JkZXIgMC4ycztcbiAgJjpob3ZlciB7XG4gICAgYmFja2dyb3VuZDogI2VmZjZmZjtcbiAgICBib3JkZXItY29sb3I6ICMzYjgyZjY7XG4gIH1cbmA7XG5cbmNvbnN0IFN0YXR1cyA9IHN0eWxlZC5zcGFuPHsgc3RhdHVzOiBzdHJpbmcgfT5gXG4gIGZvbnQtc2l6ZTogMTJweDtcbiAgY29sb3I6ICR7KHsgc3RhdHVzIH0pID0+IHtcbiAgICBzd2l0Y2ggKHN0YXR1cykge1xuICAgICAgY2FzZSAnYWN0aXZlJzogcmV0dXJuICcjMDU5NjY5JztcbiAgICAgIGNhc2UgJ3BlbmRpbmcnOiByZXR1cm4gJyNkOTc3MDYnO1xuICAgICAgY2FzZSAnY29tcGxldGVkJzogcmV0dXJuICcjN2MzYWVkJztcbiAgICAgIGRlZmF1bHQ6IHJldHVybiAnIzZiNzI4MCc7XG4gICAgfVxuICB9fTtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbmA7XG5cbmNvbnN0IHN0YXR1c09wdGlvbnMgPSBbXG4gIHsgdmFsdWU6ICcnLCBsYWJlbDogJ+yghOyytCcgfSxcbiAgeyB2YWx1ZTogJ2FjdGl2ZScsIGxhYmVsOiAn7KeE7ZaJIOykkScgfSxcbiAgeyB2YWx1ZTogJ3BlbmRpbmcnLCBsYWJlbDogJ+uMgOq4sCDspJEnIH0sXG4gIHsgdmFsdWU6ICdjb21wbGV0ZWQnLCBsYWJlbDogJ+yZhOujjCcgfSxcbl07XG5cbmNvbnN0IFJlbGVhc2VMaXN0OiBSZWFjdC5GQyA9ICgpID0+IHtcbiAgY29uc3QgZGlzcGF0Y2ggPSB1c2VEaXNwYXRjaCgpO1xuICBjb25zdCBzZWxlY3RlZElkID0gdXNlU2VsZWN0b3IoKHN0YXRlOiBSb290U3RhdGUpID0+IHN0YXRlLmRhc2hib2FyZExheW91dC5zZWxlY3RlZFJlbGVhc2VJZCk7XG4gIGNvbnN0IFtyZWxlYXNlcywgc2V0UmVsZWFzZXNdID0gdXNlU3RhdGU8UmVsZWFzZVtdPihbXSk7XG4gIGNvbnN0IFtsb2FkaW5nLCBzZXRMb2FkaW5nXSA9IHVzZVN0YXRlKGZhbHNlKTtcbiAgY29uc3QgW3NlYXJjaCwgc2V0U2VhcmNoXSA9IHVzZVN0YXRlKCcnKTtcbiAgY29uc3QgW3N0YXR1cywgc2V0U3RhdHVzXSA9IHVzZVN0YXRlKCcnKTtcblxuICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgIHNldExvYWRpbmcodHJ1ZSk7XG4gICAgYXhpb3MuZ2V0KCcvYXBpL3JlbGVhc2VzJylcbiAgICAgIC50aGVuKChyZXM6IGFueSkgPT4ge1xuICAgICAgICBzZXRSZWxlYXNlcyhyZXMuZGF0YSBhcyBSZWxlYXNlW10pO1xuICAgICAgICBzZXRMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH0pXG4gICAgICAuY2F0Y2goKCkgPT4ge1xuICAgICAgICBzZXRSZWxlYXNlcyhbXSk7XG4gICAgICAgIHNldExvYWRpbmcoZmFsc2UpO1xuICAgICAgfSk7XG4gIH0sIFtdKTtcblxuICBjb25zdCBmaWx0ZXJlZCA9IHVzZU1lbW8oKCkgPT4ge1xuICAgIHJldHVybiByZWxlYXNlcy5maWx0ZXIociA9PlxuICAgICAgKCFzdGF0dXMgfHwgci5zdGF0dXMgPT09IHN0YXR1cykgJiZcbiAgICAgIChyLnRpdGxlLnRvTG93ZXJDYXNlKCkuaW5jbHVkZXMoc2VhcmNoLnRvTG93ZXJDYXNlKCkpIHx8IChyLmRlc2NyaXB0aW9uPy50b0xvd2VyQ2FzZSgpLmluY2x1ZGVzKHNlYXJjaC50b0xvd2VyQ2FzZSgpKSA/PyBmYWxzZSkpXG4gICAgKTtcbiAgfSwgW3JlbGVhc2VzLCBzZWFyY2gsIHN0YXR1c10pO1xuXG4gIGNvbnN0IGhhbmRsZVNlbGVjdCA9IHVzZUNhbGxiYWNrKChpZDogc3RyaW5nKSA9PiB7XG4gICAgZGlzcGF0Y2goc2V0U2VsZWN0ZWRSZWxlYXNlSWQoaWQpKTtcbiAgfSwgW2Rpc3BhdGNoXSk7XG5cbiAgcmV0dXJuIChcbiAgICA8Q29udGFpbmVyIGRhdGEtdGVzdGlkPVwicmVsZWFzZS1saXN0XCI+XG4gICAgICA8U2VhcmNoUm93PlxuICAgICAgICA8U2VhcmNoSW5wdXRcbiAgICAgICAgICBwbGFjZWhvbGRlcj1cIuumtOumrOymiCDqsoDsg4kuLi5cIlxuICAgICAgICAgIHZhbHVlPXtzZWFyY2h9XG4gICAgICAgICAgb25DaGFuZ2U9e2UgPT4gc2V0U2VhcmNoKGUudGFyZ2V0LnZhbHVlKX1cbiAgICAgICAgICBkYXRhLXRlc3RpZD1cInJlbGVhc2Utc2VhcmNoLWlucHV0XCJcbiAgICAgICAgLz5cbiAgICAgICAge3N0YXR1c09wdGlvbnMubWFwKG9wdCA9PiAoXG4gICAgICAgICAgPEZpbHRlckJ1dHRvblxuICAgICAgICAgICAga2V5PXtvcHQudmFsdWV9XG4gICAgICAgICAgICBhY3RpdmU9e3N0YXR1cyA9PT0gb3B0LnZhbHVlfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gc2V0U3RhdHVzKG9wdC52YWx1ZSl9XG4gICAgICAgICAgICBkYXRhLXRlc3RpZD17YHJlbGVhc2UtZmlsdGVyLSR7b3B0LnZhbHVlIHx8ICdhbGwnfWB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAge29wdC5sYWJlbH1cbiAgICAgICAgICA8L0ZpbHRlckJ1dHRvbj5cbiAgICAgICAgKSl9XG4gICAgICA8L1NlYXJjaFJvdz5cbiAgICAgIDxMaXN0PlxuICAgICAgICB7bG9hZGluZyA/IChcbiAgICAgICAgICA8ZGl2PuuhnOuUqSDspJEuLi48L2Rpdj5cbiAgICAgICAgKSA6IGZpbHRlcmVkLmxlbmd0aCA9PT0gMCA/IChcbiAgICAgICAgICA8ZGl2PuumtOumrOymiOqwgCDsl4bsirXri4jri6QuPC9kaXY+XG4gICAgICAgICkgOiBmaWx0ZXJlZC5tYXAociA9PiAoXG4gICAgICAgICAgPEl0ZW1cbiAgICAgICAgICAgIGtleT17ci5pZH1cbiAgICAgICAgICAgIHNlbGVjdGVkPXtzZWxlY3RlZElkID09PSByLmlkfVxuICAgICAgICAgICAgb25DbGljaz17KCkgPT4gaGFuZGxlU2VsZWN0KHIuaWQpfVxuICAgICAgICAgICAgZGF0YS10ZXN0aWQ9e2ByZWxlYXNlLWl0ZW0tJHtyLmlkfWB9XG4gICAgICAgICAgICB0YWJJbmRleD17MH1cbiAgICAgICAgICAgIGFyaWEtbGFiZWw9e2DrprTrpqzspoggJHtyLnRpdGxlfWB9XG4gICAgICAgICAgPlxuICAgICAgICAgICAgPHNwYW4+e3IudGl0bGV9PC9zcGFuPlxuICAgICAgICAgICAgPFN0YXR1cyBzdGF0dXM9e3Iuc3RhdHVzfT57c3RhdHVzT3B0aW9ucy5maW5kKG8gPT4gby52YWx1ZSA9PT0gci5zdGF0dXMpPy5sYWJlbH08L1N0YXR1cz5cbiAgICAgICAgICA8L0l0ZW0+XG4gICAgICAgICkpfVxuICAgICAgPC9MaXN0PlxuICAgIDwvQ29udGFpbmVyPlxuICApO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgUmVsZWFzZUxpc3Q7ICJdLCJ2ZXJzaW9uIjozfQ==