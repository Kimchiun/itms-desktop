{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Dashboard/components/ReleaseList.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Dashboard/components/ReleaseList.tsx"],"sourcesContent":["import React, { useEffect, useState, useMemo, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport axios from '../../../utils/axios';\nimport { RootState } from '../../../store';\nimport { setSelectedReleaseId } from '../../../store/dashboardLayoutSlice';\n\ninterface Release {\n  id: string;\n  title: string;\n  status: 'active' | 'pending' | 'completed';\n  description?: string;\n}\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n`;\n\nconst SearchRow = styled.div`\n  display: flex;\n  gap: 8px;\n  margin-bottom: 8px;\n`;\n\nconst SearchInput = styled.input`\n  flex: 1;\n  padding: 6px 10px;\n  border: 1px solid #e2e8f0;\n  border-radius: 6px;\n  font-size: 14px;\n`;\n\nconst FilterButton = styled.button<{ active: boolean }>`\n  padding: 6px 12px;\n  border-radius: 6px;\n  border: 1px solid #e2e8f0;\n  background: ${({ active }) => (active ? '#3b82f6' : '#f1f5f9')};\n  color: ${({ active }) => (active ? 'white' : '#64748b')};\n  font-weight: 500;\n  cursor: pointer;\n  transition: background 0.2s;\n  &:hover {\n    background: #2563eb;\n    color: white;\n  }\n`;\n\nconst List = styled.div`\n  display: flex;\n  flex-direction: column;\n  gap: 4px;\n  max-height: 220px;\n  overflow-y: auto;\n`;\n\nconst Item = styled.div<{ selected: boolean }>`\n  padding: 10px 12px;\n  border-radius: 6px;\n  background: ${({ selected }) => (selected ? '#dbeafe' : 'white')};\n  border: 1px solid ${({ selected }) => (selected ? '#3b82f6' : '#e2e8f0')};\n  color: #1e293b;\n  font-weight: ${({ selected }) => (selected ? 600 : 400)};\n  cursor: pointer;\n  display: flex;\n  flex-direction: column;\n  gap: 2px;\n  transition: background 0.2s, border 0.2s;\n  &:hover {\n    background: #eff6ff;\n    border-color: #3b82f6;\n  }\n`;\n\nconst Status = styled.span<{ status: string }>`\n  font-size: 12px;\n  color: ${({ status }) => {\n    switch (status) {\n      case 'active': return '#059669';\n      case 'pending': return '#d97706';\n      case 'completed': return '#7c3aed';\n      default: return '#6b7280';\n    }\n  }};\n  font-weight: 500;\n`;\n\nconst statusOptions = [\n  { value: '', label: '전체' },\n  { value: 'active', label: '진행 중' },\n  { value: 'pending', label: '대기 중' },\n  { value: 'completed', label: '완료' },\n];\n\nconst ReleaseList: React.FC = () => {\n  const dispatch = useDispatch();\n  const selectedId = useSelector((state: RootState) => state.dashboardLayout.selectedReleaseId);\n  const [releases, setReleases] = useState<Release[]>([]);\n  const [loading, setLoading] = useState(false);\n  const [search, setSearch] = useState('');\n  const [status, setStatus] = useState('');\n\n  useEffect(() => {\n    setLoading(true);\n    axios.get('/api/releases')\n      .then((res: any) => {\n        setReleases(res.data as Release[]);\n        setLoading(false);\n      })\n      .catch(() => {\n        setReleases([]);\n        setLoading(false);\n      });\n  }, []);\n\n  const filtered = useMemo(() => {\n    return releases.filter(r =>\n      (!status || r.status === status) &&\n      (r.title.toLowerCase().includes(search.toLowerCase()) || (r.description?.toLowerCase().includes(search.toLowerCase()) ?? false))\n    );\n  }, [releases, search, status]);\n\n  const handleSelect = useCallback((id: string) => {\n    dispatch(setSelectedReleaseId(id));\n  }, [dispatch]);\n\n  return (\n    <Container data-testid=\"release-list\">\n      <SearchRow>\n        <SearchInput\n          placeholder=\"릴리즈 검색...\"\n          value={search}\n          onChange={e => setSearch(e.target.value)}\n          data-testid=\"release-search-input\"\n        />\n        {statusOptions.map(opt => (\n          <FilterButton\n            key={opt.value}\n            active={status === opt.value}\n            onClick={() => setStatus(opt.value)}\n            data-testid={`release-filter-${opt.value || 'all'}`}\n          >\n            {opt.label}\n          </FilterButton>\n        ))}\n      </SearchRow>\n      <List>\n        {loading ? (\n          <div>로딩 중...</div>\n        ) : filtered.length === 0 ? (\n          <div>릴리즈가 없습니다.</div>\n        ) : filtered.map(r => (\n          <Item\n            key={r.id}\n            selected={selectedId === r.id}\n            onClick={() => handleSelect(r.id)}\n            data-testid={`release-item-${r.id}`}\n            tabIndex={0}\n            aria-label={`릴리즈 ${r.title}`}\n          >\n            <span>{r.title}</span>\n            <Status status={r.status}>{statusOptions.find(o => o.value === r.status)?.label}</Status>\n          </Item>\n        ))}\n      </List>\n    </Container>\n  );\n};\n\nexport default ReleaseList; "],"version":3}