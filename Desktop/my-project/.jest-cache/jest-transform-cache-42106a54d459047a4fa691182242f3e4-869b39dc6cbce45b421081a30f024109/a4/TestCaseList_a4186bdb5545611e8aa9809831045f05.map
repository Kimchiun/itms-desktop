{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/components/TestCaseList.tsx","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/components/TestCaseList.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport styled from 'styled-components';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../../../store';\nimport { TestCase } from '../store/testCaseSlice';\nimport { selectTestCase, deselectTestCase, selectAllTestCases, deselectAllTestCases } from '../store/selectionSlice';\nimport EditableCell from '../../../shared/components/EditableCell';\nimport ContextMenu from '../../../shared/components/ContextMenu';\nimport { useKeyboardShortcuts } from '../../../hooks/useKeyboardShortcuts';\nimport axios from '../../../utils/axios';\n\nconst TableContainer = styled.div`\n  margin: 20px;\n  border: 1px solid #ddd;\n  border-radius: 4px;\n  overflow: hidden;\n`;\n\nconst Table = styled.table`\n  width: 100%;\n  border-collapse: collapse;\n  background: white;\n`;\n\nconst Th = styled.th`\n  background: #f8f9fa;\n  padding: 12px;\n  text-align: left;\n  border-bottom: 2px solid #dee2e6;\n  font-weight: 600;\n  color: #495057;\n`;\n\nconst Td = styled.td`\n  padding: 12px;\n  border-bottom: 1px solid #dee2e6;\n  vertical-align: middle;\n`;\n\nconst Checkbox = styled.input`\n  margin: 0;\n  cursor: pointer;\n`;\n\nconst TestCaseList: React.FC = () => {\n  const dispatch = useDispatch();\n  const testCases = useSelector((state: RootState) => state.testcases.list) || [];\n  const { selectedTestCases = [] } = useSelector((state: RootState) => state.selection);\n  const [loading, setLoading] = useState(true);\n  const [contextMenu, setContextMenu] = useState<{\n    isVisible: boolean;\n    x: number;\n    y: number;\n  }>({\n    isVisible: false,\n    x: 0,\n    y: 0\n  });\n\n  useEffect(() => {\n    // 테스트 케이스 데이터 로드\n    setLoading(false);\n  }, []);\n\n  const handleSelectAll = () => {\n    if (selectedTestCases.length === testCases.length) {\n      dispatch(deselectAllTestCases());\n    } else {\n      const allTestCaseIds = testCases.map((tc: TestCase) => tc.id);\n      dispatch(selectAllTestCases(allTestCaseIds));\n    }\n  };\n\n  const handleSelectTestCase = (testCaseId: number, index: number, isShiftKey: boolean) => {\n    dispatch(selectTestCase({ id: testCaseId, index, isShiftKey }));\n  };\n\n  const handleContextMenu = (event: React.MouseEvent) => {\n    event.preventDefault();\n    setContextMenu({\n      isVisible: true,\n      x: event.clientX,\n      y: event.clientY\n    });\n  };\n\n  const handleBulkAction = async (action: 'move' | 'copy' | 'delete' | 'status') => {\n    if (selectedTestCases.length === 0) return;\n\n    try {\n      switch (action) {\n        case 'copy':\n          await axios.post('/api/bulk/copy', {\n            ids: selectedTestCases,\n            type: 'testcase',\n            targetFolderId: 1 // 기본 폴더\n          });\n          break;\n        case 'move':\n          await axios.post('/api/bulk/move', {\n            ids: selectedTestCases,\n            type: 'testcase',\n            targetFolderId: 1 // 기본 폴더\n          });\n          break;\n        case 'delete':\n          await axios.delete('/api/bulk', {\n            data: {\n              ids: selectedTestCases,\n              type: 'testcase'\n            }\n          } as any);\n          break;\n        case 'status':\n          await axios.patch('/api/bulk/status', {\n            ids: selectedTestCases,\n            newStatus: 'Draft'\n          });\n          break;\n      }\n      \n      // 작업 완료 후 선택 해제\n      dispatch(deselectAllTestCases());\n    } catch (error) {\n      console.error('일괄 작업 오류:', error);\n      alert('일괄 작업 중 오류가 발생했습니다.');\n    }\n  };\n\n  const handleCopy = useCallback(() => {\n    handleBulkAction('copy');\n  }, [selectedTestCases]);\n\n  const handlePaste = useCallback(() => {\n    // 붙여넣기 로직 구현\n    console.log('붙여넣기 기능');\n  }, []);\n\n  const handleDelete = useCallback(() => {\n    if (window.confirm(`${selectedTestCases.length}개 항목을 삭제하시겠습니까?`)) {\n      handleBulkAction('delete');\n    }\n  }, [selectedTestCases]);\n\n  const handleSelectAllShortcut = useCallback(() => {\n    handleSelectAll();\n  }, [selectedTestCases.length, testCases.length]);\n\n  const handleDeselectAll = useCallback(() => {\n    dispatch(deselectAllTestCases());\n  }, []);\n\n  // 키보드 단축키 설정\n  useKeyboardShortcuts({\n    onCopy: handleCopy,\n    onPaste: handlePaste,\n    onDelete: handleDelete,\n    onSelectAll: handleSelectAllShortcut,\n    onDeselectAll: handleDeselectAll\n  });\n\n  if (loading) {\n    return <div>로딩 중...</div>;\n  }\n\n  return (\n    <>\n      <TableContainer onContextMenu={handleContextMenu}>\n        <Table>\n          <thead>\n            <tr>\n              <Th>\n                <Checkbox\n                  type=\"checkbox\"\n                  checked={selectedTestCases.length === testCases.length && testCases.length > 0}\n                  onChange={handleSelectAll}\n                />\n              </Th>\n              <Th>제목</Th>\n              <Th>우선순위</Th>\n              <Th>상태</Th>\n              <Th>생성일</Th>\n            </tr>\n          </thead>\n          <tbody>\n            {testCases.map((testCase: TestCase, index: number) => (\n              <tr key={testCase.id}>\n                <Td>\n                  <Checkbox\n                    type=\"checkbox\"\n                    checked={selectedTestCases.includes(testCase.id)}\n                    onChange={() => handleSelectTestCase(testCase.id, index, false)}\n                  />\n                </Td>\n                <Td>\n                  <EditableCell\n                    value={testCase.title}\n                    onSave={(newValue) => {\n                      console.log('제목 변경:', newValue);\n                    }}\n                  />\n                </Td>\n                <Td>{testCase.priority}</Td>\n                <Td>{testCase.status}</Td>\n                <Td>{new Date(testCase.createdAt).toLocaleDateString()}</Td>\n              </tr>\n            ))}\n          </tbody>\n        </Table>\n      </TableContainer>\n\n      <ContextMenu\n        x={contextMenu.x}\n        y={contextMenu.y}\n        isVisible={contextMenu.isVisible}\n        onClose={() => setContextMenu({ ...contextMenu, isVisible: false })}\n        selectedItems={selectedTestCases.map(id => ({ id, type: 'testcase' as const }))}\n        onBulkAction={handleBulkAction}\n      />\n    </>\n  );\n};\n\nexport default TestCaseList; "],"version":3}