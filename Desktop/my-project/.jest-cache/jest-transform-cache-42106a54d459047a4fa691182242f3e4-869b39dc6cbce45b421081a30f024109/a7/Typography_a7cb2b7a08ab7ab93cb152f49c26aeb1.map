{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/shared/components/Typography.tsx","mappings":";;;;;;AACA,0EAAuC;AAavC,MAAM,gBAAgB,GAAG,2BAAM,CAAC,GAAG,CAAiB;;;WAGzC,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,IAAI,SAAS;gBAC5B,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,CAAC,KAAK,IAAI,MAAM;iBAC7B,CAAC,EAAE,MAAM,EAAE,EAAE,EAAE,CAAC,MAAM,IAAI,SAAS;;IAEhD,CAAC,EAAE,QAAQ,EAAE,EAAE,EAAE;IACjB,QAAQ,QAAQ,EAAE,CAAC;QACjB,KAAK,IAAI;YACP,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,IAAI;YACP,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,IAAI;YACP,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,IAAI;YACP,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,IAAI;YACP,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,IAAI;YACP,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,MAAM;YACT,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,SAAS;YACZ,OAAO;;;;;SAKN,CAAC;QACJ,KAAK,QAAQ;YACX,OAAO;;;;;SAKN,CAAC;QACJ;YACE,OAAO;;;;;SAKN,CAAC;IACN,CAAC;AACH,CAAC;CACF,CAAC;AAEF,MAAM,UAAU,GAA8B,CAAC,EAAE,QAAQ,GAAG,MAAM,EAAE,QAAQ,EAAE,KAAK,EAAE,GAAG,KAAK,EAAE,EAAE,EAAE;IACjG,OAAO,CACL,uBAAC,gBAAgB,gBAAW,QAAQ,EAAE,KAAK,EAAE,KAAK,KAAM,KAAK,YAC1D,QAAQ,GACQ,CACpB,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,UAAU,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/shared/components/Typography.tsx"],"sourcesContent":["import React from 'react';\nimport styled from 'styled-components';\n\nexport type TypographyVariant = 'h1' | 'h2' | 'h3' | 'h4' | 'h5' | 'h6' | 'body' | 'caption' | 'button';\n\ninterface TypographyProps {\n  $variant?: TypographyVariant;\n  children: React.ReactNode;\n  style?: React.CSSProperties;\n  color?: string;\n  align?: 'left' | 'center' | 'right';\n  weight?: number;\n}\n\nconst StyledTypography = styled.div<TypographyProps>`\n  margin: 0;\n  padding: 0;\n  color: ${({ color }) => color || 'inherit'};\n  text-align: ${({ align }) => align || 'left'};\n  font-weight: ${({ weight }) => weight || 'inherit'};\n  \n  ${({ $variant }) => {\n    switch ($variant) {\n      case 'h1':\n        return `\n          font-size: 32px;\n          font-weight: 700;\n          line-height: 1.2;\n          color: #1e293b;\n        `;\n      case 'h2':\n        return `\n          font-size: 28px;\n          font-weight: 600;\n          line-height: 1.3;\n          color: #1e293b;\n        `;\n      case 'h3':\n        return `\n          font-size: 24px;\n          font-weight: 600;\n          line-height: 1.4;\n          color: #1e293b;\n        `;\n      case 'h4':\n        return `\n          font-size: 20px;\n          font-weight: 600;\n          line-height: 1.4;\n          color: #1e293b;\n        `;\n      case 'h5':\n        return `\n          font-size: 18px;\n          font-weight: 600;\n          line-height: 1.4;\n          color: #1e293b;\n        `;\n      case 'h6':\n        return `\n          font-size: 16px;\n          font-weight: 600;\n          line-height: 1.4;\n          color: #1e293b;\n        `;\n      case 'body':\n        return `\n          font-size: 16px;\n          font-weight: 400;\n          line-height: 1.5;\n          color: #374151;\n        `;\n      case 'caption':\n        return `\n          font-size: 14px;\n          font-weight: 400;\n          line-height: 1.4;\n          color: #6b7280;\n        `;\n      case 'button':\n        return `\n          font-size: 14px;\n          font-weight: 500;\n          line-height: 1.4;\n          color: #374151;\n        `;\n      default:\n        return `\n          font-size: 16px;\n          font-weight: 400;\n          line-height: 1.5;\n          color: #374151;\n        `;\n    }\n  }}\n`;\n\nconst Typography: React.FC<TypographyProps> = ({ $variant = 'body', children, style, ...props }) => {\n  return (\n    <StyledTypography $variant={$variant} style={style} {...props}>\n      {children}\n    </StyledTypography>\n  );\n};\n\nexport default Typography; "],"version":3}