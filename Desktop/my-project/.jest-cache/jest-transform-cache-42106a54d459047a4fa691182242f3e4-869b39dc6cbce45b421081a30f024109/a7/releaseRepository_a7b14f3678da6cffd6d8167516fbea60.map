{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/releases/repositories/releaseRepository.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/releases/repositories/releaseRepository.ts"],"sourcesContent":["import pgClient, { ensurePgConnected } from '../../../infrastructure/database/pgClient';\nimport { Release } from '../models/Release';\nimport { Suite } from '../../suites/models/Suite';\n\nexport async function createRelease(data: Omit<Release, 'id' | 'createdAt'>): Promise<Release> {\n  await ensurePgConnected();\n  const result = await pgClient.query(\n    `INSERT INTO releases (name, description, start_date, end_date) VALUES ($1, $2, $3, $4) RETURNING *`,\n    [data.name, data.description, data.startDate, data.endDate]\n  );\n  return rowToRelease(result.rows[0]);\n}\n\nexport async function listReleases(): Promise<Release[]> {\n  await ensurePgConnected();\n  const result = await pgClient.query('SELECT * FROM releases ORDER BY id DESC');\n  return result.rows.map(rowToRelease);\n}\n\nexport async function getReleaseById(id: number): Promise<Release | null> {\n  await ensurePgConnected();\n  const result = await pgClient.query('SELECT * FROM releases WHERE id = $1', [id]);\n  if (result.rows.length === 0) return null;\n  return rowToRelease(result.rows[0]);\n}\n\nexport async function updateRelease(id: number, patch: Partial<Release>): Promise<Release | null> {\n  await ensurePgConnected();\n  const current = await getReleaseById(id);\n  if (!current) return null;\n  const result = await pgClient.query(\n    `UPDATE releases SET name=$1, description=$2, start_date=$3, end_date=$4 WHERE id=$5 RETURNING *`,\n    [patch.name ?? current.name, patch.description ?? current.description, patch.startDate ?? current.startDate, patch.endDate ?? current.endDate, id]\n  );\n  if (result.rows.length === 0) return null;\n  return rowToRelease(result.rows[0]);\n}\n\nexport async function deleteRelease(id: number): Promise<boolean> {\n  await ensurePgConnected();\n  const result = await pgClient.query('DELETE FROM releases WHERE id = $1', [id]);\n  return (result.rowCount ?? 0) > 0;\n}\n\nexport async function listSuitesByRelease(releaseId: number): Promise<Suite[]> {\n  await ensurePgConnected();\n  const result = await pgClient.query('SELECT * FROM suites WHERE release_id = $1 ORDER BY id', [releaseId]);\n  return result.rows.map(rowToSuite);\n}\n\nfunction rowToRelease(row: any): Release {\n  return {\n    id: row.id,\n    name: row.name,\n    description: row.description,\n    startDate: row.start_date,\n    endDate: row.end_date,\n    createdAt: row.created_at,\n  };\n}\n\nfunction rowToSuite(row: any): Suite {\n  return {\n    id: row.id,\n    releaseId: row.release_id,\n    name: row.name,\n    description: row.description,\n    executor: row.executor,\n    environment: row.environment,\n    dueDate: row.due_date,\n    createdAt: row.created_at,\n  };\n} "],"version":3}