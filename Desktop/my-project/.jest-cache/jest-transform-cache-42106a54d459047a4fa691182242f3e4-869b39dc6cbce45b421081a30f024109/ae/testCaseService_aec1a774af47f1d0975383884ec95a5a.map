{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/testcases/services/testCaseService.ts","mappings":";;AAUA,8DAUC;AAED,8DAcC;AAED,0DAIC;AAED,kDAEC;AA9CD,2EAAiL;AACjL,sEAA0F;AAG1F,SAAS,UAAU,CAAsC,GAAM,EAAE,IAAS;IACtE,MAAM,IAAI,GAAG,EAAE,GAAG,GAAG,EAAE,CAAC;IACxB,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,OAAQ,IAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAChD,OAAO,IAAkB,CAAC;AAC9B,CAAC;AAEM,KAAK,UAAU,yBAAyB,CAAC,EAAoD;IAChG,MAAM,OAAO,GAAG,MAAM,IAAA,mCAAc,EAAC,EAAE,CAAC,CAAC;IACzC,MAAM,IAAA,0CAAqB,EAAC;QACxB,UAAU,EAAE,OAAO,CAAC,EAAE;QACtB,OAAO,EAAE,CAAC;QACV,IAAI,EAAE,EAAE,GAAG,EAAE,EAAE;QACf,SAAS,EAAE,EAAE,CAAC,SAAS;KAC1B,CAAC,CAAC;IACH,MAAM,IAAA,+BAAa,EAAC,OAAO,CAAC,CAAC;IAC7B,OAAO,OAAO,CAAC;AACnB,CAAC;AAEM,KAAK,UAAU,yBAAyB,CAAC,EAAU,EAAE,KAAwB,EAAE,IAAY;IAC9F,MAAM,MAAM,GAAG,MAAM,IAAA,oCAAe,EAAC,EAAE,CAAC,CAAC;IACzC,IAAI,CAAC,MAAM;QAAE,OAAO,IAAI,CAAC;IACzB,MAAM,OAAO,GAAG,MAAM,IAAA,mCAAc,EAAC,EAAE,EAAE,KAAK,CAAC,CAAC;IAChD,IAAI,CAAC,OAAO;QAAE,OAAO,IAAI,CAAC;IAC1B,MAAM,QAAQ,GAAG,MAAM,IAAA,yCAAoB,EAAC,EAAE,CAAC,CAAC;IAChD,MAAM,IAAA,0CAAqB,EAAC;QACxB,UAAU,EAAE,EAAE;QACd,OAAO,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC,EAAE,OAAO,IAAI,CAAC,CAAC,GAAG,CAAC;QACxC,IAAI,EAAE,UAAU,CAAC,OAAO,EAAE,CAAC,IAAI,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;QAC3D,SAAS,EAAE,IAAI;KAClB,CAAC,CAAC;IACH,MAAM,IAAA,+BAAa,EAAC,OAAO,CAAC,CAAC;IAC7B,OAAO,OAAO,CAAC;AACnB,CAAC;AAEM,KAAK,UAAU,uBAAuB,CAAC,EAAU;IACpD,MAAM,EAAE,GAAG,MAAM,IAAA,mCAAc,EAAC,EAAE,CAAC,CAAC;IACpC,IAAI,EAAE;QAAE,MAAM,IAAA,yCAAuB,EAAC,EAAE,CAAC,CAAC;IAC1C,OAAO,EAAE,CAAC;AACd,CAAC;AAEM,KAAK,UAAU,mBAAmB,CAAC,EAAU;IAChD,OAAO,IAAA,yCAAoB,EAAC,EAAE,CAAC,CAAC;AACpC,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/main/app/domains/testcases/services/testCaseService.ts"],"sourcesContent":["import { createTestCase, getTestCaseById, updateTestCase, deleteTestCase, listTestCases, createTestCaseVersion, listTestCaseVersions } from '../repositories/testCaseRepository';\nimport { indexTestCase, removeTestCaseFromIndex } from '../elasticsearch/testCaseIndexer';\nimport { TestCase, TestCaseVersion } from '../models/TestCase';\n\nfunction omitFields<T extends object, K extends keyof T>(obj: T, keys: K[]): Omit<T, K> {\n    const copy = { ...obj };\n    keys.forEach(k => { delete (copy as any)[k]; });\n    return copy as Omit<T, K>;\n}\n\nexport async function createTestCaseWithVersion(tc: Omit<TestCase, 'id' | 'createdAt' | 'updatedAt'>): Promise<TestCase> {\n    const created = await createTestCase(tc);\n    await createTestCaseVersion({\n        testcaseId: created.id,\n        version: 1,\n        data: { ...tc },\n        createdBy: tc.createdBy,\n    });\n    await indexTestCase(created);\n    return created;\n}\n\nexport async function updateTestCaseWithVersion(id: number, patch: Partial<TestCase>, user: string): Promise<TestCase | null> {\n    const before = await getTestCaseById(id);\n    if (!before) return null;\n    const updated = await updateTestCase(id, patch);\n    if (!updated) return null;\n    const versions = await listTestCaseVersions(id);\n    await createTestCaseVersion({\n        testcaseId: id,\n        version: (versions[0]?.version || 1) + 1,\n        data: omitFields(updated, ['id', 'createdAt', 'updatedAt']),\n        createdBy: user,\n    });\n    await indexTestCase(updated);\n    return updated;\n}\n\nexport async function deleteTestCaseWithIndex(id: number): Promise<boolean> {\n    const ok = await deleteTestCase(id);\n    if (ok) await removeTestCaseFromIndex(id);\n    return ok;\n}\n\nexport async function getTestCaseVersions(id: number): Promise<TestCaseVersion[]> {\n    return listTestCaseVersions(id);\n} "],"version":3}