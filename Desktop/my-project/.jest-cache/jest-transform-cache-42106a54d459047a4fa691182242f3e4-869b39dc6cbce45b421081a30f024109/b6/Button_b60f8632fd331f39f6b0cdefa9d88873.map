{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/shared/components/Button.tsx","mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AACA,uEAAgD;AAWhD,MAAM,YAAY,GAAG,2BAAM,CAAC,MAAM,CAAa;;;;;;;;;;WAUpC,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM;;IAEjD,CAAC,EAAE,IAAI,EAAE,EAAE,EAAE;IACb,QAAQ,IAAI,EAAE,CAAC;QACb,KAAK,IAAI;YACP,OAAO,IAAA,uBAAG,EAAA;;;SAGT,CAAC;QACJ,KAAK,IAAI;YACP,OAAO,IAAA,uBAAG,EAAA;;;SAGT,CAAC;QACJ;YACE,OAAO,IAAA,uBAAG,EAAA;;;SAGT,CAAC;IACN,CAAC;AACH,CAAC;;IAEC,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAChB,QAAQ,OAAO,EAAE,CAAC;QAChB,KAAK,WAAW;YACd,OAAO,IAAA,uBAAG,EAAA;;;;;;SAMT,CAAC;QACJ,KAAK,QAAQ;YACX,OAAO,IAAA,uBAAG,EAAA;;;;;;SAMT,CAAC;QACJ,KAAK,SAAS;YACZ,OAAO,IAAA,uBAAG,EAAA;;;;;;SAMT,CAAC;QACJ;YACE,OAAO,IAAA,uBAAG,EAAA;;;;;;SAMT,CAAC;IACN,CAAC;AACH,CAAC;;;;;;;;;;;CAWF,CAAC;AAEF,MAAM,MAAM,GAA0B,CAAC,EACrC,OAAO,GAAG,SAAS,EACnB,IAAI,GAAG,IAAI,EACX,SAAS,GAAG,KAAK,EACjB,QAAQ,EACR,GAAG,KAAK,EACT,EAAE,EAAE;IACH,OAAO,CACL,uBAAC,YAAY,IACX,OAAO,EAAE,OAAO,EAChB,IAAI,EAAE,IAAI,EACV,SAAS,EAAE,SAAS,KAChB,KAAK,YAER,QAAQ,GACI,CAChB,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,MAAM,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/shared/components/Button.tsx"],"sourcesContent":["import React from 'react';\nimport styled, { css } from 'styled-components';\n\nexport type ButtonVariant = 'primary' | 'secondary' | 'danger' | 'success';\nexport type ButtonSize = 'sm' | 'md' | 'lg';\n\ninterface ButtonProps extends React.ButtonHTMLAttributes<HTMLButtonElement> {\n  variant?: ButtonVariant;\n  size?: ButtonSize;\n  fullWidth?: boolean;\n}\n\nconst StyledButton = styled.button<ButtonProps>`\n  display: inline-flex;\n  align-items: center;\n  justify-content: center;\n  gap: 8px;\n  border: none;\n  border-radius: 6px;\n  font-weight: 500;\n  cursor: pointer;\n  transition: all 0.2s ease;\n  width: ${props => props.fullWidth ? '100%' : 'auto'};\n\n  ${({ size }) => {\n    switch (size) {\n      case 'sm':\n        return css`\n          padding: 6px 12px;\n          font-size: 12px;\n        `;\n      case 'lg':\n        return css`\n          padding: 12px 24px;\n          font-size: 16px;\n        `;\n      default:\n        return css`\n          padding: 8px 16px;\n          font-size: 14px;\n        `;\n    }\n  }}\n\n  ${({ variant }) => {\n    switch (variant) {\n      case 'secondary':\n        return css`\n          background-color: #f3f4f6;\n          color: #374151;\n          &:hover {\n            background-color: #e5e7eb;\n          }\n        `;\n      case 'danger':\n        return css`\n          background-color: #dc2626;\n          color: #ffffff;\n          &:hover {\n            background-color: #b91c1c;\n          }\n        `;\n      case 'success':\n        return css`\n          background-color: #10b981;\n          color: #ffffff;\n          &:hover {\n            background-color: #059669;\n          }\n        `;\n      default:\n        return css`\n          background-color: #2563eb;\n          color: #ffffff;\n          &:hover {\n            background-color: #1d4ed8;\n          }\n        `;\n    }\n  }}\n\n  &:disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n\n  &:focus-visible {\n    outline: 2px solid #2563eb;\n    outline-offset: 2px;\n  }\n`;\n\nconst Button: React.FC<ButtonProps> = ({ \n  variant = 'primary', \n  size = 'md', \n  fullWidth = false, \n  children, \n  ...props \n}) => {\n  return (\n    <StyledButton \n      variant={variant} \n      size={size} \n      fullWidth={fullWidth} \n      {...props}\n    >\n      {children}\n    </StyledButton>\n  );\n};\n\nexport default Button; "],"version":3}