681dcbc75f78982e6c59b632d530de96
"use strict";
global.setImmediate = ((fn, ...args) => setTimeout(fn, 0, ...args));
if (typeof global.ReadableStream === 'undefined') {
    global.ReadableStream = require('stream').Readable;
}
global.TextEncoder = require('util').TextEncoder;
global.TextDecoder = require('util').TextDecoder;
const request = require('supertest');
const app = require('../src/main/app/app').default;
const pgClient = require('../src/main/app/infrastructure/database/pgClient').default;
const ensurePgConnected = require('../src/main/app/infrastructure/database/pgClient').ensurePgConnected;
describe('릴리즈/스위트/케이스 할당 API', () => {
    let releaseId;
    let suiteId;
    let testcaseId;
    beforeAll(async () => {
        await ensurePgConnected();
        await pgClient.query('DELETE FROM suite_cases');
        await pgClient.query('DELETE FROM suites');
        await pgClient.query('DELETE FROM releases');
        await pgClient.query('DELETE FROM testcases');
        // 테스트케이스 생성
        const tcRes = await pgClient.query(`INSERT INTO testcases (title, steps, expected, priority, tags, status, created_by) VALUES ('TC', '[]', 'ok', 'High', '{}', 'Active', 'tester') RETURNING id`);
        testcaseId = tcRes.rows[0].id;
    });
    it('릴리즈 생성', async () => {
        const res = await request(app).post('/api/releases').send({ name: 'R1', description: '릴리즈1' });
        expect(res.status).toBe(201);
        releaseId = res.body.id;
    });
    it('스위트 생성', async () => {
        const res = await request(app).post(`/api/releases/${releaseId}/suites`).send({ name: 'S1', description: '스위트1' });
        expect(res.status).toBe(201);
        suiteId = res.body.id;
    });
    it('테스트케이스 할당', async () => {
        const res = await request(app).post(`/api/releases/suites/${suiteId}/cases/${testcaseId}`);
        expect(res.status).toBe(204);
    });
    it('스위트별 케이스 목록', async () => {
        const res = await request(app).get(`/api/releases/suites/${suiteId}/cases`);
        expect(res.status).toBe(200);
        expect(res.body).toContain(testcaseId);
    });
    it('테스트케이스 할당 해제', async () => {
        const res = await request(app).delete(`/api/releases/suites/${suiteId}/cases/${testcaseId}`);
        expect(res.status).toBe(204);
    });
    afterAll(async () => {
        await pgClient.query('DELETE FROM suite_cases');
        await pgClient.query('DELETE FROM suites');
        await pgClient.query('DELETE FROM releases');
        await pgClient.end();
    });
});
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzLzNpLWExLTIwMjEtMDE3L0Rlc2t0b3AvbXktcHJvamVjdC90ZXN0cy9yZWxlYXNlLnN1aXRlLmFwaS50ZXN0LnRzIiwibWFwcGluZ3MiOiI7QUFBQyxNQUFjLENBQUMsWUFBWSxHQUFHLENBQUMsQ0FBQyxFQUFPLEVBQUUsR0FBRyxJQUFXLEVBQUUsRUFBRSxDQUFDLFVBQVUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLENBQVEsQ0FBQztBQUNoRyxJQUFJLE9BQU8sTUFBTSxDQUFDLGNBQWMsS0FBSyxXQUFXLEVBQUUsQ0FBQztJQUNqRCxNQUFNLENBQUMsY0FBYyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxRQUFRLENBQUM7QUFDckQsQ0FBQztBQUNBLE1BQWMsQ0FBQyxXQUFXLEdBQUcsT0FBTyxDQUFDLE1BQU0sQ0FBQyxDQUFDLFdBQVcsQ0FBQztBQUN6RCxNQUFjLENBQUMsV0FBVyxHQUFHLE9BQU8sQ0FBQyxNQUFNLENBQUMsQ0FBQyxXQUFXLENBQUM7QUFDMUQsTUFBTSxPQUFPLEdBQUcsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0FBQ3JDLE1BQU0sR0FBRyxHQUFHLE9BQU8sQ0FBQyxxQkFBcUIsQ0FBQyxDQUFDLE9BQU8sQ0FBQztBQUNuRCxNQUFNLFFBQVEsR0FBRyxPQUFPLENBQUMsa0RBQWtELENBQUMsQ0FBQyxPQUFPLENBQUM7QUFDckYsTUFBTSxpQkFBaUIsR0FBRyxPQUFPLENBQUMsa0RBQWtELENBQUMsQ0FBQyxpQkFBaUIsQ0FBQztBQUV4RyxRQUFRLENBQUMsb0JBQW9CLEVBQUUsR0FBRyxFQUFFO0lBQ2xDLElBQUksU0FBaUIsQ0FBQztJQUN0QixJQUFJLE9BQWUsQ0FBQztJQUNwQixJQUFJLFVBQWtCLENBQUM7SUFFdkIsU0FBUyxDQUFDLEtBQUssSUFBSSxFQUFFO1FBQ25CLE1BQU0saUJBQWlCLEVBQUUsQ0FBQztRQUMxQixNQUFNLFFBQVEsQ0FBQyxLQUFLLENBQUMseUJBQXlCLENBQUMsQ0FBQztR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QyxNQUFNLFFBQVEsQ0FBQyxLQUFLLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUM3QyxNQUFNLFFBQVEsQ0FBQyxHQUFHLEVBQUUsQ0FBQztJQUN2QixDQUFDLENBQUMsQ0FBQztBQUNMLENBQUMsQ0FBQyxDQUFDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy8zaS1hMS0yMDIxLTAxNy9EZXNrdG9wL215LXByb2plY3QvdGVzdHMvcmVsZWFzZS5zdWl0ZS5hcGkudGVzdC50cyJdLCJzb3VyY2VzQ29udGVudCI6WyIoZ2xvYmFsIGFzIGFueSkuc2V0SW1tZWRpYXRlID0gKChmbjogYW55LCAuLi5hcmdzOiBhbnlbXSkgPT4gc2V0VGltZW91dChmbiwgMCwgLi4uYXJncykpIGFzIGFueTtcbmlmICh0eXBlb2YgZ2xvYmFsLlJlYWRhYmxlU3RyZWFtID09PSAndW5kZWZpbmVkJykge1xuICBnbG9iYWwuUmVhZGFibGVTdHJlYW0gPSByZXF1aXJlKCdzdHJlYW0nKS5SZWFkYWJsZTtcbn1cbihnbG9iYWwgYXMgYW55KS5UZXh0RW5jb2RlciA9IHJlcXVpcmUoJ3V0aWwnKS5UZXh0RW5jb2RlcjtcbihnbG9iYWwgYXMgYW55KS5UZXh0RGVjb2RlciA9IHJlcXVpcmUoJ3V0aWwnKS5UZXh0RGVjb2RlcjtcbmNvbnN0IHJlcXVlc3QgPSByZXF1aXJlKCdzdXBlcnRlc3QnKTtcbmNvbnN0IGFwcCA9IHJlcXVpcmUoJy4uL3NyYy9tYWluL2FwcC9hcHAnKS5kZWZhdWx0O1xuY29uc3QgcGdDbGllbnQgPSByZXF1aXJlKCcuLi9zcmMvbWFpbi9hcHAvaW5mcmFzdHJ1Y3R1cmUvZGF0YWJhc2UvcGdDbGllbnQnKS5kZWZhdWx0O1xuY29uc3QgZW5zdXJlUGdDb25uZWN0ZWQgPSByZXF1aXJlKCcuLi9zcmMvbWFpbi9hcHAvaW5mcmFzdHJ1Y3R1cmUvZGF0YWJhc2UvcGdDbGllbnQnKS5lbnN1cmVQZ0Nvbm5lY3RlZDtcblxuZGVzY3JpYmUoJ+umtOumrOymiC/siqTsnITtirgv7LyA7J207IqkIO2VoOuLuSBBUEknLCAoKSA9PiB7XG4gIGxldCByZWxlYXNlSWQ6IG51bWJlcjtcbiAgbGV0IHN1aXRlSWQ6IG51bWJlcjtcbiAgbGV0IHRlc3RjYXNlSWQ6IG51bWJlcjtcblxuICBiZWZvcmVBbGwoYXN5bmMgKCkgPT4ge1xuICAgIGF3YWl0IGVuc3VyZVBnQ29ubmVjdGVkKCk7XG4gICAgYXdhaXQgcGdDbGllbnQucXVlcnkoJ0RFTEVURSBGUk9NIHN1aXRlX2Nhc2VzJyk7XG4gICAgYXdhaXQgcGdDbGllbnQucXVlcnkoJ0RFTEVURSBGUk9NIHN1aXRlcycpO1xuICAgIGF3YWl0IHBnQ2xpZW50LnF1ZXJ5KCdERUxFVEUgRlJPTSByZWxlYXNlcycpO1xuICAgIGF3YWl0IHBnQ2xpZW50LnF1ZXJ5KCdERUxFVEUgRlJPTSB0ZXN0Y2FzZXMnKTtcbiAgICAvLyDthYzsiqTtirjsvIDsnbTsiqQg7IOd7ISxXG4gICAgY29uc3QgdGNSZXMgPSBhd2FpdCBwZ0NsaWVudC5xdWVyeShcbiAgICAgIGBJTlNFUlQgSU5UTyB0ZXN0Y2FzZXMgKHRpdGxlLCBzdGVwcywgZXhwZWN0ZWQsIHByaW9yaXR5LCB0YWdzLCBzdGF0dXMsIGNyZWF0ZWRfYnkpIFZBTFVFUyAoJ1RDJywgJ1tdJywgJ29rJywgJ0hpZ2gnLCAne30nLCAnQWN0aXZlJywgJ3Rlc3RlcicpIFJFVFVSTklORyBpZGBcbiAgICApO1xuICAgIHRlc3RjYXNlSWQgPSB0Y1Jlcy5yb3dzWzBdLmlkO1xuICB9KTtcblxuICBpdCgn66a066as7KaIIOyDneyEsScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCByZXF1ZXN0KGFwcCkucG9zdCgnL2FwaS9yZWxlYXNlcycpLnNlbmQoeyBuYW1lOiAnUjEnLCBkZXNjcmlwdGlvbjogJ+umtOumrOymiDEnIH0pO1xuICAgIGV4cGVjdChyZXMuc3RhdHVzKS50b0JlKDIwMSk7XG4gICAgcmVsZWFzZUlkID0gcmVzLmJvZHkuaWQ7XG4gIH0pO1xuXG4gIGl0KCfsiqTsnITtirgg7IOd7ISxJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHJlcXVlc3QoYXBwKS5wb3N0KGAvYXBpL3JlbGVhc2VzLyR7cmVsZWFzZUlkfS9zdWl0ZXNgKS5zZW5kKHsgbmFtZTogJ1MxJywgZGVzY3JpcHRpb246ICfsiqTsnITtirgxJyB9KTtcbiAgICBleHBlY3QocmVzLnN0YXR1cykudG9CZSgyMDEpO1xuICAgIHN1aXRlSWQgPSByZXMuYm9keS5pZDtcbiAgfSk7XG5cbiAgaXQoJ+2FjOyKpO2KuOy8gOydtOyKpCDtlaDri7knLCBhc3luYyAoKSA9PiB7XG4gICAgY29uc3QgcmVzID0gYXdhaXQgcmVxdWVzdChhcHApLnBvc3QoYC9hcGkvcmVsZWFzZXMvc3VpdGVzLyR7c3VpdGVJZH0vY2FzZXMvJHt0ZXN0Y2FzZUlkfWApO1xuICAgIGV4cGVjdChyZXMuc3RhdHVzKS50b0JlKDIwNCk7XG4gIH0pO1xuXG4gIGl0KCfsiqTsnITtirjrs4Qg7LyA7J207IqkIOuqqeuhnScsIGFzeW5jICgpID0+IHtcbiAgICBjb25zdCByZXMgPSBhd2FpdCByZXF1ZXN0KGFwcCkuZ2V0KGAvYXBpL3JlbGVhc2VzL3N1aXRlcy8ke3N1aXRlSWR9L2Nhc2VzYCk7XG4gICAgZXhwZWN0KHJlcy5zdGF0dXMpLnRvQmUoMjAwKTtcbiAgICBleHBlY3QocmVzLmJvZHkpLnRvQ29udGFpbih0ZXN0Y2FzZUlkKTtcbiAgfSk7XG5cbiAgaXQoJ+2FjOyKpO2KuOy8gOydtOyKpCDtlaDri7kg7ZW07KCcJywgYXN5bmMgKCkgPT4ge1xuICAgIGNvbnN0IHJlcyA9IGF3YWl0IHJlcXVlc3QoYXBwKS5kZWxldGUoYC9hcGkvcmVsZWFzZXMvc3VpdGVzLyR7c3VpdGVJZH0vY2FzZXMvJHt0ZXN0Y2FzZUlkfWApO1xuICAgIGV4cGVjdChyZXMuc3RhdHVzKS50b0JlKDIwNCk7XG4gIH0pO1xuXG4gIGFmdGVyQWxsKGFzeW5jICgpID0+IHtcbiAgICBhd2FpdCBwZ0NsaWVudC5xdWVyeSgnREVMRVRFIEZST00gc3VpdGVfY2FzZXMnKTtcbiAgICBhd2FpdCBwZ0NsaWVudC5xdWVyeSgnREVMRVRFIEZST00gc3VpdGVzJyk7XG4gICAgYXdhaXQgcGdDbGllbnQucXVlcnkoJ0RFTEVURSBGUk9NIHJlbGVhc2VzJyk7XG4gICAgYXdhaXQgcGdDbGllbnQuZW5kKCk7XG4gIH0pO1xufSk7ICJdLCJ2ZXJzaW9uIjozfQ==