{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/store/selectionSlice.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/store/selectionSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\ninterface SelectionState {\n  selectedFolders: number[];\n  selectedTestCases: number[];\n  lastSelectedIndex: number | null;\n  isSelecting: boolean;\n}\n\nconst initialState: SelectionState = {\n  selectedFolders: [],\n  selectedTestCases: [],\n  lastSelectedIndex: null,\n  isSelecting: false,\n};\n\nconst selectionSlice = createSlice({\n  name: 'selection',\n  initialState,\n  reducers: {\n    // 폴더 선택 관련\n    selectFolder: (state, action: PayloadAction<number>) => {\n      const folderId = action.payload;\n      if (!state.selectedFolders.includes(folderId)) {\n        state.selectedFolders.push(folderId);\n      }\n    },\n    deselectFolder: (state, action: PayloadAction<number>) => {\n      state.selectedFolders = state.selectedFolders.filter(id => id !== action.payload);\n    },\n    selectFolders: (state, action: PayloadAction<number[]>) => {\n      state.selectedFolders = action.payload;\n    },\n    clearFolderSelection: (state) => {\n      state.selectedFolders = [];\n    },\n\n    // 테스트 케이스 선택 관련\n    selectTestCase: (state, action: PayloadAction<{ id: number; index: number; isShiftKey: boolean }>) => {\n      const { id, index, isShiftKey } = action.payload;\n      \n      if (isShiftKey && state.lastSelectedIndex !== null) {\n        // Shift+클릭 범위 선택\n        const start = Math.min(state.lastSelectedIndex, index);\n        const end = Math.max(state.lastSelectedIndex, index);\n        \n        // 범위 내 모든 테스트 케이스 ID를 가져와야 함 (실제 구현에서는 API 호출 필요)\n        // 임시로 현재 선택된 항목들만 처리\n        if (!state.selectedTestCases.includes(id)) {\n          state.selectedTestCases.push(id);\n        }\n      } else {\n        // 단일 선택\n        if (!state.selectedTestCases.includes(id)) {\n          state.selectedTestCases.push(id);\n        }\n      }\n      \n      state.lastSelectedIndex = index;\n    },\n    deselectTestCase: (state, action: PayloadAction<number>) => {\n      state.selectedTestCases = state.selectedTestCases.filter(id => id !== action.payload);\n    },\n    selectTestCases: (state, action: PayloadAction<number[]>) => {\n      state.selectedTestCases = action.payload;\n    },\n    clearTestCaseSelection: (state) => {\n      state.selectedTestCases = [];\n      state.lastSelectedIndex = null;\n    },\n\n    // 전체 선택/해제\n    selectAllTestCases: (state, action: PayloadAction<number[]>) => {\n      state.selectedTestCases = action.payload;\n    },\n    deselectAllTestCases: (state) => {\n      state.selectedTestCases = [];\n      state.lastSelectedIndex = null;\n    },\n\n    // 선택 상태 관리\n    setSelecting: (state, action: PayloadAction<boolean>) => {\n      state.isSelecting = action.payload;\n    },\n\n    // 전체 선택 해제\n    clearAllSelections: (state) => {\n      state.selectedFolders = [];\n      state.selectedTestCases = [];\n      state.lastSelectedIndex = null;\n      state.isSelecting = false;\n    },\n  },\n});\n\nexport const {\n  selectFolder,\n  deselectFolder,\n  selectFolders,\n  clearFolderSelection,\n  selectTestCase,\n  deselectTestCase,\n  selectTestCases,\n  clearTestCaseSelection,\n  selectAllTestCases,\n  deselectAllTestCases,\n  setSelecting,\n  clearAllSelections,\n} = selectionSlice.actions;\n\nexport default selectionSlice.reducer; "],"version":3}