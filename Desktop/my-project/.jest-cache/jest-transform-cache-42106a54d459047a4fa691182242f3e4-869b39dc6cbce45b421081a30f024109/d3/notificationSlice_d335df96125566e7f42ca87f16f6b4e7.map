{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/store/notificationSlice.ts","mappings":";;;;AAAA,8CAA8D;AAe9D,MAAM,YAAY,GAAsB;IACtC,aAAa,EAAE,EAAE;CAClB,CAAC;AAEF,MAAM,iBAAiB,GAAG,IAAA,qBAAW,EAAC;IACpC,IAAI,EAAE,eAAe;IACrB,YAAY;IACZ,QAAQ,EAAE;QACR,gBAAgB,CAAC,KAAK,EAAE,MAAmC;YACzD,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC;QACD,UAAU,CAAC,KAAK,EAAE,MAA6B;YAC7C,MAAM,CAAC,GAAG,KAAK,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE,KAAK,MAAM,CAAC,OAAO,CAAC,CAAC;YACjE,IAAI,CAAC;gBAAE,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC;QACvB,CAAC;QACD,aAAa,CAAC,KAAK;YACjB,KAAK,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;QACvD,CAAC;QACD,kBAAkB,CAAC,KAAK;YACtB,KAAK,CAAC,aAAa,GAAG,EAAE,CAAC;QAC3B,CAAC;KACF;CACF,CAAC,CAAC;AAEU,KAAsE,iBAAiB,CAAC,OAAO,EAA7F,wBAAgB,wBAAE,kBAAU,kBAAE,qBAAa,qBAAE,0BAAkB,yBAA+B;AAC7G,kBAAe,iBAAiB,CAAC,OAAO,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/store/notificationSlice.ts"],"sourcesContent":["import { createSlice, PayloadAction } from '@reduxjs/toolkit';\n\nexport interface Notification {\n  id: string;\n  type: 'mention' | 'info';\n  message: string;\n  link?: { objectType: string; objectId: number };\n  read: boolean;\n  createdAt: string;\n}\n\ninterface NotificationState {\n  notifications: Notification[];\n}\n\nconst initialState: NotificationState = {\n  notifications: [],\n};\n\nconst notificationSlice = createSlice({\n  name: 'notifications',\n  initialState,\n  reducers: {\n    pushNotification(state, action: PayloadAction<Notification>) {\n      state.notifications.unshift(action.payload);\n    },\n    markAsRead(state, action: PayloadAction<string>) {\n      const n = state.notifications.find(n => n.id === action.payload);\n      if (n) n.read = true;\n    },\n    markAllAsRead(state) {\n      state.notifications.forEach(n => { n.read = true; });\n    },\n    clearNotifications(state) {\n      state.notifications = [];\n    },\n  },\n});\n\nexport const { pushNotification, markAsRead, markAllAsRead, clearNotifications } = notificationSlice.actions;\nexport default notificationSlice.reducer; "],"version":3}