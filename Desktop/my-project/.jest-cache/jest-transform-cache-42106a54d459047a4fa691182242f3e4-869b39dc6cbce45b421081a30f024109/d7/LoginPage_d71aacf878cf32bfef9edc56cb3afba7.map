{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Login/LoginPage.tsx","mappings":";;;;;;AACA,kFAA0D;AAC1D,wEAA+D;AAE/D,oFAA4D;AAC5D,wEAAgD;AAChD,6CAA0C;AAC1C,8DAAoC;AACpC,uCAAsC;AAEtC,MAAM,MAAM,GAAgB;IAC1B,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,KAAK,EAAE,IAAI,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,YAAY,EAAE;IAC3F,EAAE,IAAI,EAAE,UAAU,EAAE,KAAK,EAAE,MAAM,EAAE,IAAI,EAAE,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,EAAE,aAAa,EAAE;CAClG,CAAC;AAEF,MAAM,SAAS,GAAkD,CAAC,EAAE,OAAO,EAAE,EAAE,EAAE;IAC/E,MAAM,QAAQ,GAAG,IAAA,yBAAW,GAAE,CAAC;IAC/B,MAAM,WAAW,GAAG,KAAK,EAAE,MAAW,EAAE,EAAE;QACxC,IAAI,CAAC;YACH,IAAI,GAAQ,CAAC;YACb,IAAI,CAAC;gBACH,GAAG,GAAG,MAAM,eAAG,CAAC,IAAI,CAAC,iBAAiB,EAAE,MAAM,CAAC,CAAC;YAClD,CAAC;YAAC,OAAO,CAAC,EAAE,CAAC;gBACX,MAAM,CAAC,CAAC;YACV,CAAC;YACD,MAAM,IAAI,GAAG,GAAG,CAAC,IAAI,CAAC,IAAI,IAAI,GAAG,CAAC,IAAI,CAAC;YACvC,IAAI,IAAI,IAAI,IAAI,CAAC,IAAI,EAAE,CAAC;gBACtB,QAAQ,CAAC,IAAA,eAAO,EAAC,IAAI,CAAC,CAAC,CAAC;gBACxB,IAAI,OAAO;oBAAE,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7B,CAAC;iBAAM,CAAC;gBACN,KAAK,CAAC,mBAAmB,CAAC,CAAC;YAC7B,CAAC;QACH,CAAC;QAAC,OAAO,CAAM,EAAE,CAAC;YAChB,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,EAAE,QAAQ,EAAE,IAAI,EAAE,OAAO,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;QAChE,CAAC;IACH,CAAC,CAAC;IACF,OAAO,CACL,gCAAK,KAAK,EAAE,EAAE,SAAS,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,cAAc,EAAE,QAAQ,EAAE,UAAU,EAAE,SAAS,EAAE,YACxH,wBAAC,mBAAS,iBAAW,OAAO,cAAU,WAAW,iBAAa,MAAM,aAAS,IAAI,EAAC,KAAK,EAAE,EAAE,SAAS,EAAE,6BAA6B,EAAE,aACnI,iCAAK,KAAK,EAAE,EAAE,OAAO,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,EAAE,UAAU,EAAE,QAAQ,EAAE,YAAY,EAAE,EAAE,EAAE,aAC9F,uBAAC,cAAI,IAAC,IAAI,EAAC,MAAM,EAAC,IAAI,EAAE,EAAE,GAAI,EAC9B,uBAAC,oBAAU,gBAAU,IAAI,EAAC,KAAK,EAAE,EAAE,SAAS,EAAE,EAAE,EAAE,YAAY,EAAE,CAAC,EAAE,yCAAwB,EAC3F,uBAAC,oBAAU,gBAAU,MAAM,EAAC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE,mIAE1C,IACT,EACN,uBAAC,cAAI,IACH,MAAM,EAAE,MAAM,EACd,QAAQ,EAAE,WAAW,EACrB,MAAM,EAAC,UAAU,EACjB,OAAO,EAAC,SAAS,EACjB,WAAW,EAAC,oBAAK,GACjB,IACQ,GACR,CACP,CAAC;AACJ,CAAC,CAAC;AAEF,kBAAe,SAAS,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/Login/LoginPage.tsx"],"sourcesContent":["import React from 'react';\nimport Container from '../../shared/components/Container';\nimport Form, { FormField } from '../../shared/components/Form';\nimport Button from '../../shared/components/Button';\nimport Typography from '../../shared/components/Typography';\nimport Icon from '../../shared/components/Icon';\nimport { useDispatch } from 'react-redux';\nimport api from '../../utils/axios';\nimport { setUser } from '../../store';\n\nconst fields: FormField[] = [\n  { name: 'username', label: '아이디', type: 'text', required: true, placeholder: '아이디를 입력하세요' },\n  { name: 'password', label: '비밀번호', type: 'password', required: true, placeholder: '비밀번호를 입력하세요' },\n];\n\nconst LoginPage: React.FC<{ onLogin?: (values: any) => void }> = ({ onLogin }) => {\n  const dispatch = useDispatch();\n  const handleLogin = async (values: any) => {\n    try {\n      let res: any;\n      try {\n        res = await api.post('/api/auth/login', values);\n      } catch (e) {\n        throw e;\n      }\n      const user = res.data.user || res.data;\n      if (user && user.role) {\n        dispatch(setUser(user));\n        if (onLogin) onLogin(user);\n      } else {\n        alert('로그인 실패: 사용자 정보 없음');\n      }\n    } catch (e: any) {\n      alert('로그인 실패: ' + (e?.response?.data?.message || e.message));\n    }\n  };\n  return (\n    <div style={{ minHeight: '100vh', display: 'flex', alignItems: 'center', justifyContent: 'center', background: '#f8fafc' }}>\n      <Container $maxWidth=\"400px\" $padding=\"40px 32px\" $background=\"#fff\" $radius=\"md\" style={{ boxShadow: '0 2px 16px rgba(0,0,0,0.08)' }}>\n        <div style={{ display: 'flex', flexDirection: 'column', alignItems: 'center', marginBottom: 32 }}>\n          <Icon name=\"logo\" size={48} />\n          <Typography $variant=\"h2\" style={{ marginTop: 16, marginBottom: 8 }}>Quest 로그인</Typography>\n          <Typography $variant=\"body\" style={{ color: '#6b7280' }}>\n            테스트 관리 시스템에 오신 것을 환영합니다.\n          </Typography>\n        </div>\n        <Form\n          fields={fields}\n          onSubmit={handleLogin}\n          layout=\"vertical\"\n          variant=\"default\"\n          submitLabel=\"로그인\"\n        />\n      </Container>\n    </div>\n  );\n};\n\nexport default LoginPage; "],"version":3}