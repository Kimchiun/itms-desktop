402f562366fafbf4966a2ed91efc237f
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const jsx_runtime_1 = require("react/jsx-runtime");
const react_1 = require("react");
const styled_components_1 = __importDefault(require("styled-components"));
const react_redux_1 = require("react-redux");
const selectionSlice_1 = require("../store/selectionSlice");
const EditableCell_1 = __importDefault(require("../../../shared/components/EditableCell"));
const Container = styled_components_1.default.div `
  padding: 20px;
`;
const Header = styled_components_1.default.div `
  display: flex;
  justify-content: space-between;
  align-items: center;
  margin-bottom: 20px;
  padding: 16px;
  background-color: #f8fafc;
  border-radius: 8px;
`;
const SelectionInfo = styled_components_1.default.div `
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 14px;
  color: #64748b;
`;
const SelectAllCheckbox = styled_components_1.default.input `
  width: 18px;
  height: 18px;
  cursor: pointer;
  accent-color: #3b82f6;
`;
const Table = styled_components_1.default.table `
  width: 100%;
  border-collapse: collapse;
  background-color: white;
  border-radius: 8px;
  overflow: hidden;
  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.1);
`;
const Th = styled_components_1.default.th `
  padding: 12px 16px;
  text-align: left;
  background-color: #f1f5f9;
  font-weight: 600;
  color: #374151;
  border-bottom: 1px solid #e5e7eb;
  
  &:first-child {
    width: 50px;
  }
`;
const Td = styled_components_1.default.td `
  padding: 12px 16px;
  border-bottom: 1px solid #f3f4f6;
  vertical-align: middle;
  
  &:first-child {
    width: 50px;
    text-align: center;
  }
`;
const Row = styled_components_1.default.tr `
  background-color: ${props => props.isSelected ? '#eff6ff' : 'white'};
  
  &:hover {
    background-color: ${props => props.isSelected ? '#dbeafe' : '#f9fafb'};
  }
`;
const Checkbox = styled_components_1.default.input `
  width: 16px;
  height: 16px;
  cursor: pointer;
  accent-color: #3b82f6;
`;
const StatusBadge = styled_components_1.default.span `
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 12px;
  font-weight: 500;
  background-color: ${props => {
    switch (props.status) {
        case 'Active': return '#dcfce7';
        case 'Inactive': return '#fef2f2';
        default: return '#f3f4f6';
    }
}};
  color: ${props => {
    switch (props.status) {
        case 'Active': return '#166534';
        case 'Inactive': return '#dc2626';
        default: return '#6b7280';
    }
}};
`;
const PriorityBadge = styled_components_1.default.span `
  padding: 4px 8px;
  border-radius: 12px;
  font-size: 12px;
  font-weight: 500;
  background-color: ${props => {
    switch (props.priority) {
        case 'High': return '#fef2f2';
        case 'Medium': return '#fffbeb';
        case 'Low': return '#f0fdf4';
        default: return '#f3f4f6';
    }
}};
  color: ${props => {
    switch (props.priority) {
        case 'High': return '#dc2626';
        case 'Medium': return '#d97706';
        case 'Low': return '#16a34a';
        default: return '#6b7280';
    }
}};
`;
const TestCaseList = () => {
    const dispatch = (0, react_redux_1.useDispatch)();
    const testCases = (0, react_redux_1.useSelector)((state) => state.testcases.list);
    const { selectedTestCases = [] } = (0, react_redux_1.useSelector)((state) => state.selection);
    const [loading, setLoading] = (0, react_1.useState)(true);
    (0, react_1.useEffect)(() => {
        // 테스트 케이스 데이터 로드
        setLoading(false);
    }, []);
    const handleSelectAll = () => {
        if (selectedTestCases.length === testCases.length) {
            dispatch((0, selectionSlice_1.deselectAllTestCases)());
        }
        else {
            const allTestCaseIds = testCases.map((tc) => tc.id);
            dispatch((0, selectionSlice_1.selectAllTestCases)(allTestCaseIds));
        }
    };
    const handleSelectTestCase = (testCaseId, index, isShiftKey) => {
        dispatch((0, selectionSlice_1.selectTestCase)({ id: testCaseId, index, isShiftKey }));
    };
    const handleDeselectTestCase = (testCaseId) => {
        dispatch((0, selectionSlice_1.deselectTestCase)(testCaseId));
    };
    const handleSaveField = (testCaseId, field, value) => {
        // 필드 저장 로직
        console.log('Saving field:', { testCaseId, field, value });
    };
    const handleBulkEdit = () => {
        // 일괄 편집 로직
        console.log('Bulk edit for:', selectedTestCases);
    };
    if (loading) {
        return (0, jsx_runtime_1.jsx)("div", { children: "\uB85C\uB529 \uC911..." });
    }
    return ((0, jsx_runtime_1.jsxs)(Container, { children: [(0, jsx_runtime_1.jsx)(Header, { children: (0, jsx_runtime_1.jsxs)("div", { children: [(0, jsx_runtime_1.jsx)("h2", { children: "\uD14C\uC2A4\uD2B8\uCF00\uC774\uC2A4 \uBAA9\uB85D" }), selectedTestCases.length > 0 && ((0, jsx_runtime_1.jsxs)(SelectionInfo, { children: [(0, jsx_runtime_1.jsxs)("span", { children: [selectedTestCases.length, "\uAC1C \uC120\uD0DD\uB428"] }), (0, jsx_runtime_1.jsx)("button", { onClick: handleBulkEdit, children: "\uC77C\uAD04 \uD3B8\uC9D1" })] }))] }) }), (0, jsx_runtime_1.jsxs)(Table, { children: [(0, jsx_runtime_1.jsx)("thead", { children: (0, jsx_runtime_1.jsxs)("tr", { children: [(0, jsx_runtime_1.jsx)(Th, { children: (0, jsx_runtime_1.jsx)(SelectAllCheckbox, { type: "checkbox", checked: selectedTestCases.length === testCases.length && testCases.length > 0, onChange: handleSelectAll }) }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC81C\uBAA9" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC0C1\uD0DC" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC6B0\uC120\uC21C\uC704" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC0DD\uC131\uC790" }), (0, jsx_runtime_1.jsx)(Th, { children: "\uC0DD\uC131\uC77C" })] }) }), (0, jsx_runtime_1.jsx)("tbody", { children: testCases.map((testCase, index) => ((0, jsx_runtime_1.jsxs)(Row, { isSelected: selectedTestCases.includes(testCase.id), children: [(0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(Checkbox, { type: "checkbox", checked: selectedTestCases.includes(testCase.id), onChange: (e) => {
                                            if (e.target.checked) {
                                                handleSelectTestCase(testCase.id, index, false);
                                            }
                                            else {
                                                handleDeselectTestCase(testCase.id);
                                            }
                                        }, onClick: (e) => {
                                            if (e.shiftKey) {
                                                e.preventDefault();
                                                handleSelectTestCase(testCase.id, index, true);
                                            }
                                        } }) }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(EditableCell_1.default, { value: testCase.title, onSave: (value) => handleSaveField(testCase.id, 'title', value), type: "text" }) }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(EditableCell_1.default, { value: testCase.status, onSave: (value) => handleSaveField(testCase.id, 'status', value), type: "select", options: [
                                            { value: 'Active', label: 'Active' },
                                            { value: 'Inactive', label: 'Inactive' }
                                        ] }) }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(EditableCell_1.default, { value: testCase.priority, onSave: (value) => handleSaveField(testCase.id, 'priority', value), type: "select", options: [
                                            { value: 'High', label: 'High' },
                                            { value: 'Medium', label: 'Medium' },
                                            { value: 'Low', label: 'Low' }
                                        ] }) }), (0, jsx_runtime_1.jsx)(Td, { children: (0, jsx_runtime_1.jsx)(EditableCell_1.default, { value: testCase.createdBy, onSave: (value) => handleSaveField(testCase.id, 'createdBy', value), type: "text" }) }), (0, jsx_runtime_1.jsx)(Td, { children: new Date(testCase.createdAt).toLocaleDateString() })] }, testCase.id))) })] })] }));
};
exports.default = TestCaseList;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,