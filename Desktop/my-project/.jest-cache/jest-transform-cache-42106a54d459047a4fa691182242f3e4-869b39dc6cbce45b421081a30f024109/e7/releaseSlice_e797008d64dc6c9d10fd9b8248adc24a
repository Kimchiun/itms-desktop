aaa318ca7c2ff8ff734638485708607e
"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.deleteRelease = exports.updateRelease = exports.createRelease = exports.fetchSuites = exports.fetchReleases = void 0;
const toolkit_1 = require("@reduxjs/toolkit");
const axios_1 = __importDefault(require("../../../utils/axios"));
const initialState = {
    releases: [],
    suites: [],
    loading: false,
    error: null,
};
exports.fetchReleases = (0, toolkit_1.createAsyncThunk)('releases/fetch', async () => {
    const res = await axios_1.default.get('/api/releases');
    return res.data;
});
exports.fetchSuites = (0, toolkit_1.createAsyncThunk)('suites/fetch', async (releaseId) => {
    const res = await axios_1.default.get(`/api/releases/${releaseId}/suites`);
    return res.data;
});
exports.createRelease = (0, toolkit_1.createAsyncThunk)('releases/create', async (data) => {
    const res = await axios_1.default.post('/api/releases', data);
    return res.data;
});
exports.updateRelease = (0, toolkit_1.createAsyncThunk)('releases/update', async ({ id, data }) => {
    const res = await axios_1.default.put(`/api/releases/${id}`, data);
    return res.data;
});
exports.deleteRelease = (0, toolkit_1.createAsyncThunk)('releases/delete', async (id) => {
    await axios_1.default.delete(`/api/releases/${id}`);
    return id;
});
const releaseSlice = (0, toolkit_1.createSlice)({
    name: 'release',
    initialState,
    reducers: {},
    extraReducers: builder => {
        builder
            .addCase(exports.fetchReleases.pending, state => { state.loading = true; state.error = null; })
            .addCase(exports.fetchReleases.fulfilled, (state, action) => { state.loading = false; state.releases = action.payload; })
            .addCase(exports.fetchReleases.rejected, (state, action) => { state.loading = false; state.error = action.error.message || '릴리즈 불러오기 실패'; })
            .addCase(exports.fetchSuites.pending, state => { state.loading = true; state.error = null; })
            .addCase(exports.fetchSuites.fulfilled, (state, action) => { state.loading = false; state.suites = action.payload; })
            .addCase(exports.fetchSuites.rejected, (state, action) => { state.loading = false; state.error = action.error.message || '스위트 불러오기 실패'; })
            // 릴리즈 생성
            .addCase(exports.createRelease.fulfilled, (state, action) => { state.releases.push(action.payload); })
            // 릴리즈 수정
            .addCase(exports.updateRelease.fulfilled, (state, action) => {
            const idx = state.releases.findIndex(r => r.id === action.payload.id);
            if (idx !== -1)
                state.releases[idx] = action.payload;
        })
            // 릴리즈 삭제
            .addCase(exports.deleteRelease.fulfilled, (state, action) => {
            state.releases = state.releases.filter(r => r.id !== action.payload);
        });
    },
});
exports.default = releaseSlice.reducer;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,