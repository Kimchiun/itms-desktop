{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/hooks/useKeyboardShortcuts.ts","mappings":";;;AAAA,iCAA+C;AAC/C,6CAAuD;AAWhD,MAAM,oBAAoB,GAAG,CAAC,EACnC,MAAM,EACN,OAAO,EACP,QAAQ,EACR,WAAW,EACX,aAAa,EACU,EAAE,EAAE;IAC3B,MAAM,QAAQ,GAAG,IAAA,yBAAW,GAAE,CAAC;IAC/B,MAAM,aAAa,GAAG,IAAA,yBAAW,EAAC,CAAC,KAAgB,EAAE,EAAE,CAAC,KAAK,CAAC,SAAS,CAAC,iBAAiB,IAAI,EAAE,CAAC,CAAC;IAEjG,MAAM,aAAa,GAAG,IAAA,mBAAW,EAAC,CAAC,KAAoB,EAAE,EAAE;QACzD,mBAAmB;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;YAC1D,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,MAAM,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACvC,MAAM,EAAE,CAAC;YACX,CAAC;QACH,CAAC;QAED,qBAAqB;QACrB,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;YAC1D,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,OAAO,EAAE,CAAC;gBACZ,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC;QAED,aAAa;QACb,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,QAAQ,IAAI,aAAa,CAAC,MAAM,GAAG,CAAC,EAAE,CAAC;gBACzC,QAAQ,EAAE,CAAC;YACb,CAAC;QACH,CAAC;QAED,sBAAsB;QACtB,IAAI,CAAC,KAAK,CAAC,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,IAAI,KAAK,CAAC,GAAG,KAAK,GAAG,EAAE,CAAC;YAC1D,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,WAAW,EAAE,CAAC;gBAChB,WAAW,EAAE,CAAC;YAChB,CAAC;QACH,CAAC;QAED,gBAAgB;QAChB,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;YAC3B,KAAK,CAAC,cAAc,EAAE,CAAC;YACvB,IAAI,aAAa,EAAE,CAAC;gBAClB,aAAa,EAAE,CAAC;YAClB,CAAC;QACH,CAAC;IACH,CAAC,EAAE,CAAC,aAAa,CAAC,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,WAAW,EAAE,aAAa,CAAC,CAAC,CAAC;IAElF,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAEpD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QACzD,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC,CAAC;IAEpB,OAAO;QACL,kBAAkB,EAAE,aAAa,CAAC,MAAM;KACzC,CAAC;AACJ,CAAC,CAAC;AA/DW,QAAA,oBAAoB,wBA+D/B","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/hooks/useKeyboardShortcuts.ts"],"sourcesContent":["import { useEffect, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RootState } from '../store';\n\ninterface KeyboardShortcutsProps {\n  onCopy?: () => void;\n  onPaste?: () => void;\n  onDelete?: () => void;\n  onSelectAll?: () => void;\n  onDeselectAll?: () => void;\n}\n\nexport const useKeyboardShortcuts = ({\n  onCopy,\n  onPaste,\n  onDelete,\n  onSelectAll,\n  onDeselectAll\n}: KeyboardShortcutsProps) => {\n  const dispatch = useDispatch();\n  const selectedItems = useSelector((state: RootState) => state.selection.selectedTestCases || []);\n\n  const handleKeyDown = useCallback((event: KeyboardEvent) => {\n    // Ctrl/Cmd + C: 복사\n    if ((event.ctrlKey || event.metaKey) && event.key === 'c') {\n      event.preventDefault();\n      if (onCopy && selectedItems.length > 0) {\n        onCopy();\n      }\n    }\n    \n    // Ctrl/Cmd + V: 붙여넣기\n    if ((event.ctrlKey || event.metaKey) && event.key === 'v') {\n      event.preventDefault();\n      if (onPaste) {\n        onPaste();\n      }\n    }\n    \n    // Delete: 삭제\n    if (event.key === 'Delete') {\n      event.preventDefault();\n      if (onDelete && selectedItems.length > 0) {\n        onDelete();\n      }\n    }\n    \n    // Ctrl/Cmd + A: 전체 선택\n    if ((event.ctrlKey || event.metaKey) && event.key === 'a') {\n      event.preventDefault();\n      if (onSelectAll) {\n        onSelectAll();\n      }\n    }\n    \n    // Escape: 선택 해제\n    if (event.key === 'Escape') {\n      event.preventDefault();\n      if (onDeselectAll) {\n        onDeselectAll();\n      }\n    }\n  }, [selectedItems.length, onCopy, onPaste, onDelete, onSelectAll, onDeselectAll]);\n\n  useEffect(() => {\n    document.addEventListener('keydown', handleKeyDown);\n    \n    return () => {\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [handleKeyDown]);\n\n  return {\n    selectedItemsCount: selectedItems.length\n  };\n}; "],"version":3}