{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/components/ContextMenu.tsx","mappings":";;;;;;;AAAA,iCAAiD;AACjD,0EAAuC;AAUvC,MAAM,aAAa,GAAG,2BAAM,CAAC,GAAG,CAA0B;;UAEhD,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;SACjB,KAAK,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;;;;;;;;CAQxB,CAAC;AAEF,MAAM,QAAQ,GAAG,2BAAM,CAAC,MAAM,CAAA;;;;;;;;;;;;;;;;;;;;;CAqB7B,CAAC;AA4CO,4BAAQ;AA1CjB,MAAM,OAAO,GAAG,2BAAM,CAAC,GAAG,CAAA;;;;CAIzB,CAAC;AAsCiB,0BAAO;AApC1B,MAAM,WAAW,GAA+B,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,MAAM,EAAE,OAAO,EAAE,QAAQ,EAAE,EAAE,EAAE;IACtF,MAAM,OAAO,GAAG,IAAA,cAAM,EAAiB,IAAI,CAAC,CAAC;IAE7C,IAAA,iBAAS,EAAC,GAAG,EAAE;QACb,IAAI,CAAC,MAAM;YAAE,OAAO;QAEpB,MAAM,kBAAkB,GAAG,CAAC,KAAiB,EAAE,EAAE;YAC/C,IAAI,OAAO,CAAC,OAAO,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,QAAQ,CAAC,KAAK,CAAC,MAAc,CAAC,EAAE,CAAC;gBACvE,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC,CAAC;QAEF,MAAM,aAAa,GAAG,CAAC,KAAoB,EAAE,EAAE;YAC7C,IAAI,KAAK,CAAC,GAAG,KAAK,QAAQ,EAAE,CAAC;gBAC3B,OAAO,EAAE,CAAC;YACZ,CAAC;QACH,CAAC,CAAC;QAEF,QAAQ,CAAC,gBAAgB,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;QAC3D,QAAQ,CAAC,gBAAgB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QAEpD,OAAO,GAAG,EAAE;YACV,QAAQ,CAAC,mBAAmB,CAAC,WAAW,EAAE,kBAAkB,CAAC,CAAC;YAC9D,QAAQ,CAAC,mBAAmB,CAAC,SAAS,EAAE,aAAa,CAAC,CAAC;QACzD,CAAC,CAAC;IACJ,CAAC,EAAE,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC,CAAC;IAEtB,IAAI,CAAC,MAAM;QAAE,OAAO,IAAI,CAAC;IAEzB,OAAO,CACL,uBAAC,aAAa,IAAC,GAAG,EAAE,OAAO,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,CAAC,YACpC,QAAQ,GACK,CACjB,CAAC;AACJ,CAAC,CAAC;AAGF,kBAAe,WAAW,CAAC","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/TestCaseManagement/components/ContextMenu.tsx"],"sourcesContent":["import React, { useEffect, useRef } from 'react';\nimport styled from 'styled-components';\n\ninterface ContextMenuProps {\n  x: number;\n  y: number;\n  isOpen: boolean;\n  onClose: () => void;\n  children: React.ReactNode;\n}\n\nconst MenuContainer = styled.div<{ x: number; y: number }>`\n  position: fixed;\n  left: ${props => props.x}px;\n  top: ${props => props.y}px;\n  background: white;\n  border: 1px solid #d1d5db;\n  border-radius: 8px;\n  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.15);\n  z-index: 1000;\n  min-width: 160px;\n  padding: 8px 0;\n`;\n\nconst MenuItem = styled.button`\n  width: 100%;\n  padding: 8px 16px;\n  border: none;\n  background: none;\n  text-align: left;\n  font-size: 14px;\n  color: #374151;\n  cursor: pointer;\n  display: flex;\n  align-items: center;\n  gap: 8px;\n\n  &:hover {\n    background: #f3f4f6;\n  }\n\n  &:disabled {\n    color: #9ca3af;\n    cursor: not-allowed;\n  }\n`;\n\nconst Divider = styled.div`\n  height: 1px;\n  background: #e5e7eb;\n  margin: 4px 0;\n`;\n\nconst ContextMenu: React.FC<ContextMenuProps> = ({ x, y, isOpen, onClose, children }) => {\n  const menuRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (!isOpen) return;\n\n    const handleClickOutside = (event: MouseEvent) => {\n      if (menuRef.current && !menuRef.current.contains(event.target as Node)) {\n        onClose();\n      }\n    };\n\n    const handleKeyDown = (event: KeyboardEvent) => {\n      if (event.key === 'Escape') {\n        onClose();\n      }\n    };\n\n    document.addEventListener('mousedown', handleClickOutside);\n    document.addEventListener('keydown', handleKeyDown);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n      document.removeEventListener('keydown', handleKeyDown);\n    };\n  }, [isOpen, onClose]);\n\n  if (!isOpen) return null;\n\n  return (\n    <MenuContainer ref={menuRef} x={x} y={y}>\n      {children}\n    </MenuContainer>\n  );\n};\n\nexport { MenuItem, Divider };\nexport default ContextMenu; "],"version":3}