{"file":"/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/store/commentSlice.ts","mappings":"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","names":[],"sources":["/Users/3i-a1-2021-017/Desktop/my-project/src/renderer/features/ExecutionManagement/store/commentSlice.ts"],"sourcesContent":["import { createSlice, createAsyncThunk, PayloadAction } from '@reduxjs/toolkit';\nimport api from '../../../utils/axios';\n\nexport interface Comment {\n  id: number;\n  objectType: 'testcase' | 'execution' | 'defect';\n  objectId: number;\n  author: string;\n  content: string;\n  mentions: string[];\n  createdAt: string;\n  updatedAt: string;\n}\n\ninterface CommentState {\n  comments: Comment[];\n  loading: boolean;\n  error: string | null;\n}\n\nconst initialState: CommentState = {\n  comments: [],\n  loading: false,\n  error: null,\n};\n\nexport const fetchComments = createAsyncThunk(\n  'comments/fetchComments',\n  async ({ objectType, objectId }: { objectType: string; objectId: number }) => {\n    const res = await api.get<Comment[]>(`/api/comments/${objectType}/${objectId}`);\n    return res.data;\n  }\n);\n\nexport const addComment = createAsyncThunk(\n  'comments/addComment',\n  async (data: Omit<Comment, 'id' | 'createdAt' | 'updatedAt'>) => {\n    const res = await api.post<Comment>('/api/comments', data);\n    return res.data;\n  }\n);\n\nexport const updateComment = createAsyncThunk(\n  'comments/updateComment',\n  async ({ id, content, mentions }: { id: number; content: string; mentions: string[] }) => {\n    const res = await api.put<Comment>(`/api/comments/${id}`, { content, mentions });\n    return res.data;\n  }\n);\n\nexport const deleteComment = createAsyncThunk(\n  'comments/deleteComment',\n  async (id: number) => {\n    await api.delete(`/api/comments/${id}`);\n    return id;\n  }\n);\n\nconst commentSlice = createSlice({\n  name: 'comments',\n  initialState,\n  reducers: {\n    clearComments(state) {\n      state.comments = [];\n      state.error = null;\n    },\n  },\n  extraReducers: builder => {\n    builder\n      .addCase(fetchComments.pending, state => {\n        state.loading = true;\n        state.error = null;\n      })\n      .addCase(fetchComments.fulfilled, (state, action: PayloadAction<Comment[]>) => {\n        state.loading = false;\n        state.comments = action.payload;\n      })\n      .addCase(fetchComments.rejected, (state, action) => {\n        state.loading = false;\n        state.error = action.error.message || '댓글 불러오기 실패';\n      })\n      .addCase(addComment.fulfilled, (state, action: PayloadAction<Comment>) => {\n        state.comments.push(action.payload);\n      })\n      .addCase(updateComment.fulfilled, (state, action: PayloadAction<Comment>) => {\n        const idx = state.comments.findIndex(c => c.id === action.payload.id);\n        if (idx !== -1) state.comments[idx] = action.payload;\n      })\n      .addCase(deleteComment.fulfilled, (state, action: PayloadAction<number>) => {\n        state.comments = state.comments.filter(c => c.id !== action.payload);\n      });\n  },\n});\n\nexport const { clearComments } = commentSlice.actions;\nexport default commentSlice.reducer; "],"version":3}